{"version":3,"sources":["webpack:///./node_modules/libphonenumber-js/es6/AsYouType.js","webpack:///./node_modules/libphonenumber-js/es6/IDD.js","webpack:///./node_modules/libphonenumber-js/es6/RFC3966.js","webpack:///./node_modules/libphonenumber-js/es6/common.js","webpack:///./node_modules/libphonenumber-js/es6/findPhoneNumbers.js","webpack:///./node_modules/libphonenumber-js/es6/format.js","webpack:///./node_modules/libphonenumber-js/es6/getCountryCallingCode.js","webpack:///./node_modules/libphonenumber-js/es6/metadata.js","webpack:///./node_modules/libphonenumber-js/es6/parse.js","webpack:///./node_modules/libphonenumber-js/es6/types.js","webpack:///./node_modules/libphonenumber-js/es6/validate.js","webpack:///./node_modules/libphonenumber-js/index.es6.js","webpack:///./node_modules/ng2-file-upload/file-upload/file-drop.directive.js","webpack:///./node_modules/ng2-file-upload/file-upload/file-item.class.js","webpack:///./node_modules/ng2-file-upload/file-upload/file-like-object.class.js","webpack:///./node_modules/ng2-file-upload/file-upload/file-select.directive.js","webpack:///./node_modules/ng2-file-upload/file-upload/file-type.class.js","webpack:///./node_modules/ng2-file-upload/file-upload/file-upload.module.js","webpack:///./node_modules/ng2-file-upload/file-upload/file-uploader.class.js","webpack:///./node_modules/ng2-file-upload/index.js","webpack:///./node_modules/rxjs-compat/_esm5/add/observable/fromEvent.js","webpack:///./node_modules/rxjs-compat/_esm5/add/observable/merge.js","webpack:///./node_modules/rxjs-compat/_esm5/add/operator/catch.js","webpack:///./node_modules/rxjs-compat/_esm5/add/operator/debounceTime.js","webpack:///./node_modules/rxjs-compat/_esm5/add/operator/map.js","webpack:///./node_modules/rxjs-compat/_esm5/add/operator/startWith.js","webpack:///./node_modules/rxjs-compat/_esm5/add/operator/toPromise.js","webpack:///./node_modules/rxjs-compat/_esm5/observable/forkJoin.js","webpack:///./node_modules/rxjs-compat/_esm5/operator/catch.js","webpack:///./node_modules/rxjs-compat/_esm5/operator/debounceTime.js","webpack:///./node_modules/rxjs-compat/_esm5/operator/map.js","webpack:///./node_modules/rxjs-compat/_esm5/operator/startWith.js","webpack:///./node_modules/rxjs-compat/add/observable/forkJoin.js","webpack:///./node_modules/rxjs/add/Observable/forkJoin.js","webpack:///./node_modules/semver-compare/index.js","webpack:///./src/@fuse/validators/generic-validator.ts","webpack:///./src/app/main/content/apps/uyelik/hesap-aktivasyon/aktivasyon-epostasi/aktivasyon-epostasi.component.html","webpack:///./src/app/main/content/apps/uyelik/hesap-aktivasyon/aktivasyon-epostasi/aktivasyon-epostasi.component.scss","webpack:///./src/app/main/content/apps/uyelik/hesap-aktivasyon/aktivasyon-epostasi/aktivasyon-epostasi.component.ts","webpack:///./src/app/main/content/apps/uyelik/models/profilim.ts","webpack:///./src/app/main/content/apps/uyelik/models/uyelik-basvuru.ts","webpack:///./src/app/main/content/apps/uyelik/profilim/kullanici-fotograflari/kullanici-fotograflari.component.html","webpack:///./src/app/main/content/apps/uyelik/profilim/kullanici-fotograflari/kullanici-fotograflari.component.scss","webpack:///./src/app/main/content/apps/uyelik/profilim/kullanici-fotograflari/kullanici-fotograflari.component.ts","webpack:///./src/app/main/content/apps/uyelik/profilim/profilim-degistir/profilim-degistir.component.html","webpack:///./src/app/main/content/apps/uyelik/profilim/profilim-degistir/profilim-degistir.component.scss","webpack:///./src/app/main/content/apps/uyelik/profilim/profilim-degistir/profilim-degistir.component.ts","webpack:///./src/app/main/content/apps/uyelik/profilim/profilim-resolver.ts","webpack:///./src/app/main/content/apps/uyelik/profilim/profilim-validator-messages.ts","webpack:///./src/app/main/content/apps/uyelik/profilim/profilim.component.html","webpack:///./src/app/main/content/apps/uyelik/profilim/profilim.component.scss","webpack:///./src/app/main/content/apps/uyelik/profilim/profilim.component.ts","webpack:///./src/app/main/content/apps/uyelik/sifre-kurtarma-baslat/sifre-kurtarma-baslat.component.html","webpack:///./src/app/main/content/apps/uyelik/sifre-kurtarma-baslat/sifre-kurtarma-baslat.component.scss","webpack:///./src/app/main/content/apps/uyelik/sifre-kurtarma-baslat/sifre-kurtarma-baslat.component.ts","webpack:///./src/app/main/content/apps/uyelik/sifre-sifirla/sifre-sifirla.component.html","webpack:///./src/app/main/content/apps/uyelik/sifre-sifirla/sifre-sifirla.component.scss","webpack:///./src/app/main/content/apps/uyelik/sifre-sifirla/sifre-sifirla.component.ts","webpack:///./src/app/main/content/apps/uyelik/uyelik.module.ts","webpack:///./src/app/main/content/apps/uyelik/uyelik.service.ts","webpack:///./src/app/main/content/apps/uyelik/uyeol/basvuru/uyelik-basvuru.component.html","webpack:///./src/app/main/content/apps/uyelik/uyeol/basvuru/uyelik-basvuru.component.scss","webpack:///./src/app/main/content/apps/uyelik/uyeol/basvuru/uyelik-basvuru.component.ts","webpack:///./src/app/main/content/apps/uyelik/uyeol/surec-basladi/surec-basladi.component.html","webpack:///./src/app/main/content/apps/uyelik/uyeol/surec-basladi/surec-basladi.component.scss","webpack:///./src/app/main/content/apps/uyelik/uyeol/surec-basladi/surec-basladi.component.ts","webpack:///./src/app/main/content/apps/uyelik/uyeol/uyelik-basvuru-resolver.ts","webpack:///./src/app/main/content/apps/uyelik/uyeol/uyelik-mesajlari.ts","webpack:///./src/app/main/content/apps/uyelik/uyeol/uyelik-validators.ts","webpack:///./src/app/models/kullanici.ts","webpack:///./src/app/models/sorgu-base.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA,gCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;AACA;AACA;AACA;;AAEA;;AAEmJ;;AAE/C;;AAEH;;AAE1D;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAAmC;AACnC;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iDAAiD,KAAK;AACtD;AACA;AACA;AACA,yCAAyC,KAAK;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kGAA0D,IAAI;;AAE9D;;AAEA;;AAEA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,EAAE;AACF;AACA;AACA,6JAA6J;AAC7J;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,qKAAqK;AACrK;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE,KAAK,IAAI,KAAK,EAAE;AAC7C;AACA;AACA;AACA,2CAA2C,EAAE,KAAK,IAAI,KAAK,EAAE;AAC7D;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAI;AACZ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gKAAgK;AAChK;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA,CAAC;;+DAED;;;AAGA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8JAA8J;AAC9J;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,qC;;;;;;;;;;;;;;;;;ACv7BA;AACyC;;AAEzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+B;;;;;;;;;;;;;;;AC9DA;AAAA,kCAAkC,iCAAiC,eAAe,eAAe,gBAAgB,oBAAoB,MAAM,0CAA0C,+BAA+B,aAAa,qBAAqB,mCAAmC,EAAE,EAAE,cAAc,WAAW,UAAU,EAAE,UAAU,MAAM,yCAAyC,EAAE,UAAU,kBAAkB,EAAE,EAAE,aAAa,EAAE,2BAA2B,0BAA0B,YAAY,EAAE,2CAA2C,8BAA8B,EAAE,OAAO,6EAA6E,EAAE,GAAG,EAAE;;AAEpnB;;AAEjC;;AAEA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO,GAAG,gBAAgB;AACtC;AACA;AACA;AACA;;AAEA,mCAAmC,kHAAkH;AACrJ;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY,OAAO,KAAK,sBAAsB;AAC9C,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mCAAmC;AACnC;AACA,mC;;;;;;;;;;;;;;;;;;;;;;;;;AChFyB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa;AACb;AACA,EAAE;AACF;AACA;;AAEA;AACA,iBAAiB,+BAA+B;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oJAAoJ;AACpJ;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,4BAA4B;;AAE5B;AACA;AACA,qDAAqD,IAAI;;AAEzD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;;AAEA,sTAAsT,IAAI;AAC1T;AACA,kC;;;;;;;;;;;;;;;;;;;AC5OA;AAAA,mDAAmD,gBAAgB,sBAAsB,OAAO,2BAA2B,0BAA0B,yDAAyD,2BAA2B,EAAE,EAAE,EAAE,eAAe;;AAE9P,gCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,2CAA2C,kBAAkB,kCAAkC,qEAAqE,EAAE,EAAE,OAAO,kBAAkB,EAAE,YAAY;;AAE/M;AACA;;AAIsC;;AAEtC;AACA,uFAA+C,IAAI,2JAA2E,GAAG;;AAEjI;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO,GAAG,8BAA8B;AACpD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA,GAAG;AACH,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA,4C;;;;;;;;;;;;;;;;;;;;;;ACjOA;AAAA,oGAAoG,mBAAmB,EAAE,mBAAmB,8HAA8H;;AAE1Q,mDAAmD,gBAAgB,sBAAsB,OAAO,2BAA2B,0BAA0B,yDAAyD,2BAA2B,EAAE,EAAE,EAAE,eAAe;;AAE9P;AACA;AACA;AACA;;AAE8F;;AAEvE;;AAEvB;;AAEwB;;AAExB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,YAAY,qCAAqC;AACjD;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uJAAuJ;AACvJ;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa,qCAAqC;AAClD;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG,yFAAyF,mBAAmB;;AAE/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB,EAAE;AACF;AACA;;AAEA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;;;AC1TA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iD;;;;;;;;;;;;;;;ACXA;AAAA;AAAA,oGAAoG,mBAAmB,EAAE,mBAAmB,8HAA8H;;AAE1Q,gCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,2CAA2C;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA,CAAC;;+DAED;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uPAAuP,2CAA2C;AAClS;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oC;;;;;;;;;;;;;;;;;;;;;ACtVA;AAAA,mDAAmD,gBAAgB,sBAAsB,OAAO,2BAA2B,0BAA0B,yDAAyD,2BAA2B,EAAE,EAAE,EAAE,eAAe;;AAE9P;AACA;AACA;AACA;;AAEiM;;AAEjM;;AAEwD;;AAEjC;;AAEvB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA,sCAAsC,GAAG;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA,sGAA8D,2BAA2B;AACzF;AACA;AACA;AACA;AACA,uFAA+C,IAAI,2JAA2E,GAAG;;AAEjI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,kBAAkB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,WAAW,gBAAgB,EAAE;AAC7D,gCAAgC,WAAW,gBAAgB,EAAE;AAC7D;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,yCAAyC;AACtE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,wJAAwJ;AACxJ;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAA4B,iDAAiD;AAC7E;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA,GAAG;AACH,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB,EAAE;AACF;AACA;;AAEA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO,GAAG,gBAAgB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,+CAA+C;AAC5D;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;;;;;;;;AClmBA;AAAA,oGAAoG,mBAAmB,EAAE,mBAAmB,8HAA8H;;AAElO;;AAEb;;AAE3B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA,+BAA+B;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,0JAA0J;AAC1J;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sCAAsC;AAC1D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG,yFAAyF,mBAAmB;;AAE/G,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,+IAA+I;AAC/I;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;;;;AC5RwC;AACM;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,qCAAqC;AAClD,aAAa,qCAAqC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCA;;AAEA;AACA;AACA;AACA;AAC+H;AAC/H;AACA;AAC8B;AACe;AACsC;;AAEnF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iIAAiF;AACjF;;AAEA;AACA;AACA;AACA;;AAEA,wGAAiE;AACjE;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACmC;;AAEnC;AACA;AACiC;AACC;AACO;AACG;AACa;AACF;AACd;AACQ;;AAQjD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;;;;;;;;;;;;ACnJA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4BAA4B;AAClD;AACA;AACA;;;;;;;;;;;;;AC/GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC7HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8BAA8B;AACpD;AACA;AACA;;;;;;;;;;;;;ACxlKA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,mBAAmB,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,iDAAiD;AACvF;AACA,0CAA0C,6CAA6C;AACvF;AACA;AACA,0CAA0C,6CAA6C;AACvF;AACA;AACA,0CAA0C,6CAA6C;AACvF;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,qBAAqB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,0BAA0B,EAAE;AACnG;AACA;AACA;AACA,mCAAmC,mCAAmC,EAAE;AACxE;AACA;AACA;AACA;AACA,mCAAmC,sBAAsB,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,yBAAyB,EAAE;AAC7E;AACA;AACA;AACA,qCAAqC,4CAA4C,EAAE;AACnF,2CAA2C,kCAAkC,EAAE;AAC/E;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,gEAAgE;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,WAAW;AACvF,uDAAuD,WAAW;AAClE;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,gBAAgB;AACvE;AACA;AACA;AACA;AACA;AACA,+CAA+C,gBAAgB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,yCAAyC,EAAE;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,4CAA4C,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACnZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACVmD;AACnD;AACA,qC;;;;;;;;;;;;;;ACF2C;AAC3C;AACA,iC;;;;;;;;;;;;;;;ACFqB;AACJ;AACjB;AACA;AACA,iC;;;;;;;;;;;;;;;ACJqB;AACE;AACvB;AACA,wC;;;;;;;;;;;;;;;ACHqB;AACP;AACd;AACA,+B;;;;;;;;;;;;;;;ACHqB;AACD;AACpB;AACA,qC;;;;;;;;;;;ACHA;AACA;AACA,qC;;;;;;;;;;;;;;;;ACFmB;AACnB,oC;;;;;;;;;;;;;;;ACDoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;;;;AC/DyB;AACa;AACtC;AACA;AACA;AACA;AACA,qCAAqC,YAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,iBAAiB;AAC3E;AACA;AAC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","file":"uyelik-uyelik-module.js","sourcesContent":["var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// This is an enhanced port of Google Android `libphonenumber`'s\n// `asyoutypeformatter.js` of 17th November, 2016.\n//\n// https://github.com/googlei18n/libphonenumber/blob/8d21a365061de2ba0675c878a710a7b24f74d2ae/javascript/i18n/phonenumbers/asyoutypeformatter.js\n\nimport Metadata from './metadata';\n\nimport { matches_entirely, VALID_DIGITS, VALID_PUNCTUATION, PLUS_CHARS, parse_phone_number_digits, parse_national_number_and_country_calling_code } from './common';\n\nimport { extract_formatted_phone_number, find_country_code, strip_national_prefix_and_carrier_code } from './parse';\n\nimport { FIRST_GROUP_PATTERN, format_national_number_using_format, local_to_international_style } from './format';\n\nimport { check_number_length_for_type } from './types';\n\n// Used in phone number format template creation.\n// Could be any digit, I guess.\nvar DUMMY_DIGIT = '9';\nvar DUMMY_DIGIT_MATCHER = new RegExp(DUMMY_DIGIT, 'g');\n// I don't know why is it exactly `15`\nvar LONGEST_NATIONAL_PHONE_NUMBER_LENGTH = 15;\n// Create a phone number consisting only of the digit 9 that matches the\n// `number_pattern` by applying the pattern to the \"longest phone number\" string.\nvar LONGEST_DUMMY_PHONE_NUMBER = repeat(DUMMY_DIGIT, LONGEST_NATIONAL_PHONE_NUMBER_LENGTH);\n\n// The digits that have not been entered yet will be represented by a \\u2008,\n// the punctuation space.\nexport var DIGIT_PLACEHOLDER = 'x'; // '\\u2008' (punctuation space)\nvar DIGIT_PLACEHOLDER_MATCHER = new RegExp(DIGIT_PLACEHOLDER);\nvar DIGIT_PLACEHOLDER_MATCHER_GLOBAL = new RegExp(DIGIT_PLACEHOLDER, 'g');\n\n// A pattern that is used to match character classes in regular expressions.\n// An example of a character class is \"[1-4]\".\nvar CHARACTER_CLASS_PATTERN = /\\[([^\\[\\]])*\\]/g;\n\n// Any digit in a regular expression that actually denotes a digit. For\n// example, in the regular expression \"80[0-2]\\d{6,10}\", the first 2 digits\n// (8 and 0) are standalone digits, but the rest are not.\n// Two look-aheads are needed because the number following \\\\d could be a\n// two-digit number, since the phone number can be as long as 15 digits.\nvar STANDALONE_DIGIT_PATTERN = /\\d(?=[^,}][^,}])/g;\n\n// A pattern that is used to determine if a `format` is eligible\n// to be used by the \"as you type formatter\".\n// It is eligible when the `format` contains groups of the dollar sign\n// followed by a single digit, separated by valid phone number punctuation.\n// This prevents invalid punctuation (such as the star sign in Israeli star numbers)\n// getting into the output of the \"as you type formatter\".\nvar ELIGIBLE_FORMAT_PATTERN = new RegExp('^' + '[' + VALID_PUNCTUATION + ']*' + '(\\\\$\\\\d[' + VALID_PUNCTUATION + ']*)+' + '$');\n\n// This is the minimum length of the leading digits of a phone number\n// to guarantee the first \"leading digits pattern\" for a phone number format\n// to be preemptive.\nvar MIN_LEADING_DIGITS_LENGTH = 3;\n\nvar VALID_INCOMPLETE_PHONE_NUMBER = '[' + PLUS_CHARS + ']{0,1}' + '[' + VALID_PUNCTUATION + VALID_DIGITS + ']*';\n\nvar VALID_INCOMPLETE_PHONE_NUMBER_PATTERN = new RegExp('^' + VALID_INCOMPLETE_PHONE_NUMBER + '$', 'i');\n\nvar AsYouType = function () {\n\n\t/**\r\n  * @param {string} [country_code] - The default country used for parsing non-international phone numbers.\r\n  * @param {Object} metadata\r\n  */\n\tfunction AsYouType(country_code, metadata) {\n\t\t_classCallCheck(this, AsYouType);\n\n\t\tthis.options = {};\n\n\t\tthis.metadata = new Metadata(metadata);\n\n\t\tif (country_code && this.metadata.hasCountry(country_code)) {\n\t\t\tthis.default_country = country_code;\n\t\t}\n\n\t\tthis.reset();\n\t}\n\t// Not setting `options` to a constructor argument\n\t// not to break backwards compatibility\n\t// for older versions of the library.\n\n\n\t_createClass(AsYouType, [{\n\t\tkey: 'input',\n\t\tvalue: function input(text) {\n\t\t\t// Parse input\n\n\t\t\tvar extracted_number = extract_formatted_phone_number(text) || '';\n\n\t\t\t// Special case for a lone '+' sign\n\t\t\t// since it's not considered a possible phone number.\n\t\t\tif (!extracted_number) {\n\t\t\t\tif (text && text.indexOf('+') >= 0) {\n\t\t\t\t\textracted_number = '+';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Validate possible first part of a phone number\n\t\t\tif (!matches_entirely(extracted_number, VALID_INCOMPLETE_PHONE_NUMBER_PATTERN)) {\n\t\t\t\treturn this.current_output;\n\t\t\t}\n\n\t\t\treturn this.process_input(parse_phone_number_digits(extracted_number));\n\t\t}\n\t}, {\n\t\tkey: 'process_input',\n\t\tvalue: function process_input(input) {\n\t\t\t// If an out of position '+' sign detected\n\t\t\t// (or a second '+' sign),\n\t\t\t// then just drop it from the input.\n\t\t\tif (input[0] === '+') {\n\t\t\t\tif (!this.parsed_input) {\n\t\t\t\t\tthis.parsed_input += '+';\n\n\t\t\t\t\t// If a default country was set\n\t\t\t\t\t// then reset it because an explicitly international\n\t\t\t\t\t// phone number is being entered\n\t\t\t\t\tthis.reset_countriness();\n\t\t\t\t}\n\n\t\t\t\tinput = input.slice(1);\n\t\t\t}\n\n\t\t\t// Raw phone number\n\t\t\tthis.parsed_input += input;\n\n\t\t\t// // Reset phone number validation state\n\t\t\t// this.valid = false\n\n\t\t\t// Add digits to the national number\n\t\t\tthis.national_number += input;\n\n\t\t\t// TODO: Deprecated: rename `this.national_number`\n\t\t\t// to `this.nationalNumber` and remove `.getNationalNumber()`.\n\n\t\t\t// Try to format the parsed input\n\n\t\t\tif (this.is_international()) {\n\t\t\t\tif (!this.countryCallingCode) {\n\t\t\t\t\t// No need to format anything\n\t\t\t\t\t// if there's no national phone number.\n\t\t\t\t\t// (e.g. just the country calling code)\n\t\t\t\t\tif (!this.national_number) {\n\t\t\t\t\t\t// Return raw phone number\n\t\t\t\t\t\treturn this.parsed_input;\n\t\t\t\t\t}\n\n\t\t\t\t\t// If one looks at country phone codes\n\t\t\t\t\t// then he can notice that no one country phone code\n\t\t\t\t\t// is ever a (leftmost) substring of another country phone code.\n\t\t\t\t\t// So if a valid country code is extracted so far\n\t\t\t\t\t// then it means that this is the country code.\n\n\t\t\t\t\t// If no country phone code could be extracted so far,\n\t\t\t\t\t// then just return the raw phone number,\n\t\t\t\t\t// because it has no way of knowing\n\t\t\t\t\t// how to format the phone number so far.\n\t\t\t\t\tif (!this.extract_country_calling_code()) {\n\t\t\t\t\t\t// Return raw phone number\n\t\t\t\t\t\treturn this.parsed_input;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Initialize country-specific data\n\t\t\t\t\tthis.initialize_phone_number_formats_for_this_country_calling_code();\n\t\t\t\t\tthis.reset_format();\n\t\t\t\t\tthis.determine_the_country();\n\t\t\t\t}\n\t\t\t\t// `this.country` could be `undefined`,\n\t\t\t\t// for instance, when there is ambiguity\n\t\t\t\t// in a form of several different countries\n\t\t\t\t// each corresponding to the same country phone code\n\t\t\t\t// (e.g. NANPA: USA, Canada, etc),\n\t\t\t\t// and there's not enough digits entered\n\t\t\t\t// to reliably determine the country\n\t\t\t\t// the phone number belongs to.\n\t\t\t\t// Therefore, in cases of such ambiguity,\n\t\t\t\t// each time something is input,\n\t\t\t\t// try to determine the country\n\t\t\t\t// (if it's not determined yet).\n\t\t\t\telse if (!this.country) {\n\t\t\t\t\t\tthis.determine_the_country();\n\t\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Some national prefixes are substrings of other national prefixes\n\t\t\t\t// (for the same country), therefore try to extract national prefix each time\n\t\t\t\t// because a longer national prefix might be available at some point in time.\n\n\t\t\t\tvar previous_national_prefix = this.national_prefix;\n\t\t\t\tthis.national_number = this.national_prefix + this.national_number;\n\n\t\t\t\t// Possibly extract a national prefix\n\t\t\t\tthis.extract_national_prefix();\n\n\t\t\t\tif (this.national_prefix !== previous_national_prefix) {\n\t\t\t\t\t// National number has changed\n\t\t\t\t\t// (due to another national prefix been extracted)\n\t\t\t\t\t// therefore national number has changed\n\t\t\t\t\t// therefore reset all previous formatting data.\n\t\t\t\t\t// (and leading digits matching state)\n\t\t\t\t\tthis.matching_formats = this.available_formats;\n\t\t\t\t\tthis.reset_format();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!this.should_format()) {\n\t\t\t\treturn this.format_as_non_formatted_number();\n\t\t\t}\n\n\t\t\t// Check the available phone number formats\n\t\t\t// based on the currently available leading digits.\n\t\t\tthis.match_formats_by_leading_digits();\n\n\t\t\t// Format the phone number (given the next digits)\n\t\t\tvar formatted_national_phone_number = this.format_national_phone_number(input);\n\n\t\t\t// If the phone number could be formatted,\n\t\t\t// then return it, possibly prepending with country phone code\n\t\t\t// (for international phone numbers only)\n\t\t\tif (formatted_national_phone_number) {\n\t\t\t\treturn this.full_phone_number(formatted_national_phone_number);\n\t\t\t}\n\n\t\t\t// If the phone number couldn't be formatted,\n\t\t\t// then just fall back to the raw phone number.\n\t\t\treturn this.parsed_input;\n\t\t}\n\t}, {\n\t\tkey: 'format_as_non_formatted_number',\n\t\tvalue: function format_as_non_formatted_number() {\n\t\t\tif (this.is_international() && this.countryCallingCode) {\n\t\t\t\tif (this.national_number) {\n\t\t\t\t\t// For convenience, the public `.template` property\n\t\t\t\t\t// contains the whole international number\n\t\t\t\t\t// if the phone number being input is international:\n\t\t\t\t\t// 'x' for the '+' sign, 'x'es for the country phone code,\n\t\t\t\t\t// a spacebar and then the template for the national number digits.\n\t\t\t\t\tthis.template = DIGIT_PLACEHOLDER + repeat(DIGIT_PLACEHOLDER, this.countryCallingCode.length) + ' ' + repeat(DIGIT_PLACEHOLDER, this.national_number.length);\n\n\t\t\t\t\treturn '+' + this.countryCallingCode + ' ' + this.national_number;\n\t\t\t\t}\n\n\t\t\t\treturn '+' + this.countryCallingCode;\n\t\t\t}\n\n\t\t\treturn this.parsed_input;\n\t\t}\n\t}, {\n\t\tkey: 'format_national_phone_number',\n\t\tvalue: function format_national_phone_number(next_digits) {\n\t\t\t// Format the next phone number digits\n\t\t\t// using the previously chosen phone number format.\n\t\t\t//\n\t\t\t// This is done here because if `attempt_to_format_complete_phone_number`\n\t\t\t// was placed before this call then the `template`\n\t\t\t// wouldn't reflect the situation correctly (and would therefore be inconsistent)\n\t\t\t//\n\t\t\tvar national_number_formatted_with_previous_format = void 0;\n\t\t\tif (this.chosen_format) {\n\t\t\t\tnational_number_formatted_with_previous_format = this.format_next_national_number_digits(next_digits);\n\t\t\t}\n\n\t\t\t// See if the input digits can be formatted properly already. If not,\n\t\t\t// use the results from format_next_national_number_digits(), which does formatting\n\t\t\t// based on the formatting pattern chosen.\n\n\t\t\tvar formatted_number = this.attempt_to_format_complete_phone_number();\n\n\t\t\t// Just because a phone number doesn't have a suitable format\n\t\t\t// that doesn't mean that the phone is invalid\n\t\t\t// because phone number formats only format phone numbers,\n\t\t\t// they don't validate them and some (rare) phone numbers\n\t\t\t// are meant to stay non-formatted.\n\t\t\tif (formatted_number) {\n\t\t\t\t// if (this.country)\n\t\t\t\t// {\n\t\t\t\t// \tthis.valid = true\n\t\t\t\t// }\n\n\t\t\t\treturn formatted_number;\n\t\t\t}\n\n\t\t\t// For some phone number formats national prefix\n\n\t\t\t// If the previously chosen phone number format\n\t\t\t// didn't match the next (current) digit being input\n\t\t\t// (leading digits pattern didn't match).\n\t\t\tif (this.choose_another_format()) {\n\t\t\t\t// And a more appropriate phone number format\n\t\t\t\t// has been chosen for these `leading digits`,\n\t\t\t\t// then format the national phone number (so far)\n\t\t\t\t// using the newly selected phone number pattern.\n\n\t\t\t\t// Will return `undefined` if it couldn't format\n\t\t\t\t// the supplied national number\n\t\t\t\t// using the selected phone number pattern.\n\n\t\t\t\treturn this.reformat_national_number();\n\t\t\t}\n\n\t\t\t// If could format the next (current) digit\n\t\t\t// using the previously chosen phone number format\n\t\t\t// then return the formatted number so far.\n\n\t\t\t// If no new phone number format could be chosen,\n\t\t\t// and couldn't format the supplied national number\n\t\t\t// using the selected phone number pattern,\n\t\t\t// then it will return `undefined`.\n\n\t\t\treturn national_number_formatted_with_previous_format;\n\t\t}\n\t}, {\n\t\tkey: 'reset',\n\t\tvalue: function reset() {\n\t\t\t// Input stripped of non-phone-number characters.\n\t\t\t// Can only contain a possible leading '+' sign and digits.\n\t\t\tthis.parsed_input = '';\n\n\t\t\tthis.current_output = '';\n\n\t\t\t// This contains the national prefix that has been extracted. It contains only\n\t\t\t// digits without formatting.\n\t\t\tthis.national_prefix = '';\n\n\t\t\tthis.national_number = '';\n\n\t\t\tthis.reset_countriness();\n\n\t\t\tthis.reset_format();\n\n\t\t\t// this.valid = false\n\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'reset_country',\n\t\tvalue: function reset_country() {\n\t\t\tif (this.is_international()) {\n\t\t\t\tthis.country = undefined;\n\t\t\t} else {\n\t\t\t\tthis.country = this.default_country;\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'reset_countriness',\n\t\tvalue: function reset_countriness() {\n\t\t\tthis.reset_country();\n\n\t\t\tif (this.default_country && !this.is_international()) {\n\t\t\t\tthis.metadata.country(this.default_country);\n\t\t\t\tthis.countryCallingCode = this.metadata.countryCallingCode();\n\n\t\t\t\tthis.initialize_phone_number_formats_for_this_country_calling_code();\n\t\t\t} else {\n\t\t\t\tthis.metadata.country(undefined);\n\t\t\t\tthis.countryCallingCode = undefined;\n\n\t\t\t\tthis.available_formats = [];\n\t\t\t\tthis.matching_formats = this.available_formats;\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'reset_format',\n\t\tvalue: function reset_format() {\n\t\t\tthis.chosen_format = undefined;\n\t\t\tthis.template = undefined;\n\t\t\tthis.partially_populated_template = undefined;\n\t\t\tthis.last_match_position = -1;\n\t\t}\n\n\t\t// Format each digit of national phone number (so far)\n\t\t// using the newly selected phone number pattern.\n\n\t}, {\n\t\tkey: 'reformat_national_number',\n\t\tvalue: function reformat_national_number() {\n\t\t\t// Format each digit of national phone number (so far)\n\t\t\t// using the selected phone number pattern.\n\t\t\treturn this.format_next_national_number_digits(this.national_number);\n\t\t}\n\t}, {\n\t\tkey: 'initialize_phone_number_formats_for_this_country_calling_code',\n\t\tvalue: function initialize_phone_number_formats_for_this_country_calling_code() {\n\t\t\t// Get all \"eligible\" phone number formats for this country\n\t\t\tthis.available_formats = this.metadata.formats().filter(function (format) {\n\t\t\t\treturn ELIGIBLE_FORMAT_PATTERN.test(format.internationalFormat());\n\t\t\t});\n\n\t\t\tthis.matching_formats = this.available_formats;\n\t\t}\n\t}, {\n\t\tkey: 'match_formats_by_leading_digits',\n\t\tvalue: function match_formats_by_leading_digits() {\n\t\t\tvar leading_digits = this.national_number;\n\n\t\t\t// \"leading digits\" pattern list starts with\n\t\t\t// one of a maximum length of 3 digits,\n\t\t\t// and then with each additional digit\n\t\t\t// a more precise \"leading digits\" pattern is specified.\n\n\t\t\tvar index_of_leading_digits_pattern = leading_digits.length - MIN_LEADING_DIGITS_LENGTH;\n\n\t\t\tif (index_of_leading_digits_pattern < 0) {\n\t\t\t\tindex_of_leading_digits_pattern = 0;\n\t\t\t}\n\n\t\t\tthis.matching_formats = this.matching_formats.filter(function (format) {\n\t\t\t\tvar leading_digits_pattern_count = format.leadingDigitsPatterns().length;\n\n\t\t\t\t// Keep everything that isn't restricted by leading digits.\n\t\t\t\tif (leading_digits_pattern_count === 0) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tvar leading_digits_pattern_index = Math.min(index_of_leading_digits_pattern, leading_digits_pattern_count - 1);\n\t\t\t\tvar leading_digits_pattern = format.leadingDigitsPatterns()[leading_digits_pattern_index];\n\n\t\t\t\t// Brackets are required for `^` to be applied to\n\t\t\t\t// all or-ed (`|`) parts, not just the first one.\n\t\t\t\treturn new RegExp('^(' + leading_digits_pattern + ')').test(leading_digits);\n\t\t\t});\n\n\t\t\t// If there was a phone number format chosen\n\t\t\t// and it no longer holds given the new leading digits then reset it.\n\t\t\t// The test for this `if` condition is marked as:\n\t\t\t// \"Reset a chosen format when it no longer holds given the new leading digits\".\n\t\t\t// To construct a valid test case for this one can find a country\n\t\t\t// in `PhoneNumberMetadata.xml` yielding one format for 3 `<leadingDigits>`\n\t\t\t// and yielding another format for 4 `<leadingDigits>` (Australia in this case).\n\t\t\tif (this.chosen_format && this.matching_formats.indexOf(this.chosen_format) === -1) {\n\t\t\t\tthis.reset_format();\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'should_format',\n\t\tvalue: function should_format() {\n\t\t\t// Start matching any formats at all when the national number\n\t\t\t// entered so far is at least 3 digits long,\n\t\t\t// otherwise format matching would give false negatives\n\t\t\t// like when the digits entered so far are `2`\n\t\t\t// and the leading digits pattern is `21` –\n\t\t\t// it's quite obvious in this case that the format could be the one\n\t\t\t// but due to the absence of further digits it would give false negative.\n\t\t\t//\n\t\t\t// Google could have provided leading digits patterns starting\n\t\t\t// with a single digit but they chose not to (for whatever reasons).\n\t\t\t//\n\t\t\treturn this.national_number >= MIN_LEADING_DIGITS_LENGTH;\n\t\t}\n\n\t\t// Check to see if there is an exact pattern match for these digits. If so, we\n\t\t// should use this instead of any other formatting template whose\n\t\t// `leadingDigitsPattern` also matches the input.\n\n\t}, {\n\t\tkey: 'attempt_to_format_complete_phone_number',\n\t\tvalue: function attempt_to_format_complete_phone_number() {\n\t\t\tfor (var _iterator = this.matching_formats, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n\t\t\t\tvar _ref;\n\n\t\t\t\tif (_isArray) {\n\t\t\t\t\tif (_i >= _iterator.length) break;\n\t\t\t\t\t_ref = _iterator[_i++];\n\t\t\t\t} else {\n\t\t\t\t\t_i = _iterator.next();\n\t\t\t\t\tif (_i.done) break;\n\t\t\t\t\t_ref = _i.value;\n\t\t\t\t}\n\n\t\t\t\tvar format = _ref;\n\n\t\t\t\tvar matcher = new RegExp('^(?:' + format.pattern() + ')$');\n\n\t\t\t\tif (!matcher.test(this.national_number)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (!this.is_format_applicable(format)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// To leave the formatter in a consistent state\n\t\t\t\tthis.reset_format();\n\t\t\t\tthis.chosen_format = format;\n\n\t\t\t\tvar formatted_number = format_national_number_using_format(this.national_number, format, this.is_international(), this.national_prefix.length > 0, this.metadata);\n\n\t\t\t\t// Set `this.template` and `this.partially_populated_template`.\n\t\t\t\t//\n\t\t\t\t// `else` case doesn't ever happen\n\t\t\t\t// with the current metadata,\n\t\t\t\t// but just in case.\n\t\t\t\t//\n\t\t\t\t/* istanbul ignore else */\n\t\t\t\tif (this.create_formatting_template(format)) {\n\t\t\t\t\t// Populate `this.partially_populated_template`\n\t\t\t\t\tthis.reformat_national_number();\n\t\t\t\t} else {\n\t\t\t\t\t// Prepend `+CountryCode` in case of an international phone number\n\t\t\t\t\tvar full_number = this.full_phone_number(formatted_number);\n\t\t\t\t\tthis.template = full_number.replace(/[\\d\\+]/g, DIGIT_PLACEHOLDER);\n\t\t\t\t\tthis.partially_populated_template = full_number;\n\t\t\t\t}\n\n\t\t\t\treturn formatted_number;\n\t\t\t}\n\t\t}\n\n\t\t// Prepends `+CountryCode` in case of an international phone number\n\n\t}, {\n\t\tkey: 'full_phone_number',\n\t\tvalue: function full_phone_number(formatted_national_number) {\n\t\t\tif (this.is_international()) {\n\t\t\t\treturn '+' + this.countryCallingCode + ' ' + formatted_national_number;\n\t\t\t}\n\n\t\t\treturn formatted_national_number;\n\t\t}\n\n\t\t// Extracts the country calling code from the beginning\n\t\t// of the entered `national_number` (so far),\n\t\t// and places the remaining input into the `national_number`.\n\n\t}, {\n\t\tkey: 'extract_country_calling_code',\n\t\tvalue: function extract_country_calling_code() {\n\t\t\tvar _parse_national_numbe = parse_national_number_and_country_calling_code(this.parsed_input, this.default_country, this.metadata),\n\t\t\t    countryCallingCode = _parse_national_numbe.countryCallingCode,\n\t\t\t    number = _parse_national_numbe.number;\n\n\t\t\tif (!countryCallingCode) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.countryCallingCode = countryCallingCode;\n\t\t\tthis.national_number = number;\n\n\t\t\tthis.metadata.chooseCountryByCountryCallingCode(countryCallingCode);\n\t\t\treturn this.metadata.selectedCountry() !== undefined;\n\t\t}\n\t}, {\n\t\tkey: 'extract_national_prefix',\n\t\tvalue: function extract_national_prefix() {\n\t\t\tthis.national_prefix = '';\n\n\t\t\tif (!this.metadata.selectedCountry()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Only strip national prefixes for non-international phone numbers\n\t\t\t// because national prefixes can't be present in international phone numbers.\n\t\t\t// Otherwise, while forgiving, it would parse a NANPA number `+1 1877 215 5230`\n\t\t\t// first to `1877 215 5230` and then, stripping the leading `1`, to `877 215 5230`,\n\t\t\t// and then it would assume that's a valid number which it isn't.\n\t\t\t// So no forgiveness for grandmas here.\n\t\t\t// The issue asking for this fix:\n\t\t\t// https://github.com/catamphetamine/libphonenumber-js/issues/159\n\n\t\t\tvar _strip_national_prefi = strip_national_prefix_and_carrier_code(this.national_number, this.metadata),\n\t\t\t    potential_national_number = _strip_national_prefi.number;\n\n\t\t\t// We require that the NSN remaining after stripping the national prefix and\n\t\t\t// carrier code be long enough to be a possible length for the region.\n\t\t\t// Otherwise, we don't do the stripping, since the original number could be\n\t\t\t// a valid short number.\n\n\n\t\t\tif (!this.metadata.possibleLengths() || this.is_possible_number(this.national_number) && !this.is_possible_number(potential_national_number)) {\n\t\t\t\t// Verify the parsed national (significant) number for this country\n\t\t\t\tvar national_number_rule = new RegExp(this.metadata.nationalNumberPattern());\n\t\t\t\t//\n\t\t\t\t// If the original number (before stripping national prefix) was viable,\n\t\t\t\t// and the resultant number is not, then prefer the original phone number.\n\t\t\t\t// This is because for some countries (e.g. Russia) the same digit could be both\n\t\t\t\t// a national prefix and a leading digit of a valid national phone number,\n\t\t\t\t// like `8` is the national prefix for Russia and both\n\t\t\t\t// `8 800 555 35 35` and `800 555 35 35` are valid numbers.\n\t\t\t\tif (matches_entirely(this.national_number, national_number_rule) && !matches_entirely(potential_national_number, national_number_rule)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.national_prefix = this.national_number.slice(0, this.national_number.length - potential_national_number.length);\n\t\t\tthis.national_number = potential_national_number;\n\n\t\t\treturn this.national_prefix;\n\t\t}\n\t}, {\n\t\tkey: 'is_possible_number',\n\t\tvalue: function is_possible_number(number) {\n\t\t\tvar validation_result = check_number_length_for_type(number, undefined, this.metadata);\n\t\t\tswitch (validation_result) {\n\t\t\t\tcase 'IS_POSSIBLE':\n\t\t\t\t\treturn true;\n\t\t\t\t// case 'IS_POSSIBLE_LOCAL_ONLY':\n\t\t\t\t// \treturn !this.is_international()\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'choose_another_format',\n\t\tvalue: function choose_another_format() {\n\t\t\t// When there are multiple available formats, the formatter uses the first\n\t\t\t// format where a formatting template could be created.\n\t\t\tfor (var _iterator2 = this.matching_formats, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n\t\t\t\tvar _ref2;\n\n\t\t\t\tif (_isArray2) {\n\t\t\t\t\tif (_i2 >= _iterator2.length) break;\n\t\t\t\t\t_ref2 = _iterator2[_i2++];\n\t\t\t\t} else {\n\t\t\t\t\t_i2 = _iterator2.next();\n\t\t\t\t\tif (_i2.done) break;\n\t\t\t\t\t_ref2 = _i2.value;\n\t\t\t\t}\n\n\t\t\t\tvar format = _ref2;\n\n\t\t\t\t// If this format is currently being used\n\t\t\t\t// and is still possible, then stick to it.\n\t\t\t\tif (this.chosen_format === format) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// If this `format` is suitable for \"as you type\",\n\t\t\t\t// then extract the template from this format\n\t\t\t\t// and use it to format the phone number being input.\n\n\t\t\t\tif (!this.is_format_applicable(format)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (!this.create_formatting_template(format)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tthis.chosen_format = format;\n\n\t\t\t\t// With a new formatting template, the matched position\n\t\t\t\t// using the old template needs to be reset.\n\t\t\t\tthis.last_match_position = -1;\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// No format matches the phone number,\n\t\t\t// therefore set `country` to `undefined`\n\t\t\t// (or to the default country).\n\t\t\tthis.reset_country();\n\n\t\t\t// No format matches the national phone number entered\n\t\t\tthis.reset_format();\n\t\t}\n\t}, {\n\t\tkey: 'is_format_applicable',\n\t\tvalue: function is_format_applicable(format) {\n\t\t\t// If national prefix is mandatory for this phone number format\n\t\t\t// and the user didn't input the national prefix,\n\t\t\t// then this phone number format isn't suitable.\n\t\t\tif (!this.is_international() && !this.national_prefix && format.nationalPrefixIsMandatoryWhenFormatting()) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t}, {\n\t\tkey: 'create_formatting_template',\n\t\tvalue: function create_formatting_template(format) {\n\t\t\t// The formatter doesn't format numbers when numberPattern contains '|', e.g.\n\t\t\t// (20|3)\\d{4}. In those cases we quickly return.\n\t\t\t// (Though there's no such format in current metadata)\n\t\t\t/* istanbul ignore if */\n\t\t\tif (format.pattern().indexOf('|') >= 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Get formatting template for this phone number format\n\t\t\tvar template = this.get_template_for_phone_number_format_pattern(format);\n\n\t\t\t// If the national number entered is too long\n\t\t\t// for any phone number format, then abort.\n\t\t\tif (!template) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// This one is for national number only\n\t\t\tthis.partially_populated_template = template;\n\n\t\t\t// For convenience, the public `.template` property\n\t\t\t// contains the whole international number\n\t\t\t// if the phone number being input is international:\n\t\t\t// 'x' for the '+' sign, 'x'es for the country phone code,\n\t\t\t// a spacebar and then the template for the formatted national number.\n\t\t\tif (this.is_international()) {\n\t\t\t\tthis.template = DIGIT_PLACEHOLDER + repeat(DIGIT_PLACEHOLDER, this.countryCallingCode.length) + ' ' + template;\n\t\t\t}\n\t\t\t// For local numbers, replace national prefix\n\t\t\t// with a digit placeholder.\n\t\t\telse {\n\t\t\t\t\tthis.template = template.replace(/\\d/g, DIGIT_PLACEHOLDER);\n\t\t\t\t}\n\n\t\t\t// This one is for the full phone number\n\t\t\treturn this.template;\n\t\t}\n\n\t\t// Generates formatting template for a phone number format\n\n\t}, {\n\t\tkey: 'get_template_for_phone_number_format_pattern',\n\t\tvalue: function get_template_for_phone_number_format_pattern(format) {\n\t\t\t// A very smart trick by the guys at Google\n\t\t\tvar number_pattern = format.pattern()\n\t\t\t// Replace anything in the form of [..] with \\d\n\t\t\t.replace(CHARACTER_CLASS_PATTERN, '\\\\d')\n\t\t\t// Replace any standalone digit (not the one in `{}`) with \\d\n\t\t\t.replace(STANDALONE_DIGIT_PATTERN, '\\\\d');\n\n\t\t\t// This match will always succeed,\n\t\t\t// because the \"longest dummy phone number\"\n\t\t\t// has enough length to accomodate any possible\n\t\t\t// national phone number format pattern.\n\t\t\tvar dummy_phone_number_matching_format_pattern = LONGEST_DUMMY_PHONE_NUMBER.match(number_pattern)[0];\n\n\t\t\t// If the national number entered is too long\n\t\t\t// for any phone number format, then abort.\n\t\t\tif (this.national_number.length > dummy_phone_number_matching_format_pattern.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Prepare the phone number format\n\t\t\tvar number_format = this.get_format_format(format);\n\n\t\t\t// Get a formatting template which can be used to efficiently format\n\t\t\t// a partial number where digits are added one by one.\n\n\t\t\t// Below `strict_pattern` is used for the\n\t\t\t// regular expression (with `^` and `$`).\n\t\t\t// This wasn't originally in Google's `libphonenumber`\n\t\t\t// and I guess they don't really need it\n\t\t\t// because they're not using \"templates\" to format phone numbers\n\t\t\t// but I added `strict_pattern` after encountering\n\t\t\t// South Korean phone number formatting bug.\n\t\t\t//\n\t\t\t// Non-strict regular expression bug demonstration:\n\t\t\t//\n\t\t\t// this.national_number : `111111111` (9 digits)\n\t\t\t//\n\t\t\t// number_pattern : (\\d{2})(\\d{3,4})(\\d{4})\n\t\t\t// number_format : `$1 $2 $3`\n\t\t\t// dummy_phone_number_matching_format_pattern : `9999999999` (10 digits)\n\t\t\t//\n\t\t\t// '9999999999'.replace(new RegExp(/(\\d{2})(\\d{3,4})(\\d{4})/g), '$1 $2 $3') = \"99 9999 9999\"\n\t\t\t//\n\t\t\t// template : xx xxxx xxxx\n\t\t\t//\n\t\t\t// But the correct template in this case is `xx xxx xxxx`.\n\t\t\t// The template was generated incorrectly because of the\n\t\t\t// `{3,4}` variability in the `number_pattern`.\n\t\t\t//\n\t\t\t// The fix is, if `this.national_number` has already sufficient length\n\t\t\t// to satisfy the `number_pattern` completely then `this.national_number` is used\n\t\t\t// instead of `dummy_phone_number_matching_format_pattern`.\n\n\t\t\tvar strict_pattern = new RegExp('^' + number_pattern + '$');\n\t\t\tvar national_number_dummy_digits = this.national_number.replace(/\\d/g, DUMMY_DIGIT);\n\n\t\t\t// If `this.national_number` has already sufficient length\n\t\t\t// to satisfy the `number_pattern` completely then use it\n\t\t\t// instead of `dummy_phone_number_matching_format_pattern`.\n\t\t\tif (strict_pattern.test(national_number_dummy_digits)) {\n\t\t\t\tdummy_phone_number_matching_format_pattern = national_number_dummy_digits;\n\t\t\t}\n\n\t\t\t// Generate formatting template for this phone number format\n\t\t\treturn dummy_phone_number_matching_format_pattern\n\t\t\t// Format the dummy phone number according to the format\n\t\t\t.replace(new RegExp(number_pattern), number_format)\n\t\t\t// Replace each dummy digit with a DIGIT_PLACEHOLDER\n\t\t\t.replace(DUMMY_DIGIT_MATCHER, DIGIT_PLACEHOLDER);\n\t\t}\n\t}, {\n\t\tkey: 'format_next_national_number_digits',\n\t\tvalue: function format_next_national_number_digits(digits) {\n\t\t\t// Using `.split('')` to iterate through a string here\n\t\t\t// to avoid requiring `Symbol.iterator` polyfill.\n\t\t\t// `.split('')` is generally not safe for Unicode,\n\t\t\t// but in this particular case for `digits` it is safe.\n\t\t\t// for (const digit of digits)\n\t\t\tfor (var _iterator3 = digits.split(''), _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n\t\t\t\tvar _ref3;\n\n\t\t\t\tif (_isArray3) {\n\t\t\t\t\tif (_i3 >= _iterator3.length) break;\n\t\t\t\t\t_ref3 = _iterator3[_i3++];\n\t\t\t\t} else {\n\t\t\t\t\t_i3 = _iterator3.next();\n\t\t\t\t\tif (_i3.done) break;\n\t\t\t\t\t_ref3 = _i3.value;\n\t\t\t\t}\n\n\t\t\t\tvar digit = _ref3;\n\n\t\t\t\t// If there is room for more digits in current `template`,\n\t\t\t\t// then set the next digit in the `template`,\n\t\t\t\t// and return the formatted digits so far.\n\n\t\t\t\t// If more digits are entered than the current format could handle\n\t\t\t\tif (this.partially_populated_template.slice(this.last_match_position + 1).search(DIGIT_PLACEHOLDER_MATCHER) === -1) {\n\t\t\t\t\t// Reset the current format,\n\t\t\t\t\t// so that the new format will be chosen\n\t\t\t\t\t// in a subsequent `this.choose_another_format()` call\n\t\t\t\t\t// later in code.\n\t\t\t\t\tthis.chosen_format = undefined;\n\t\t\t\t\tthis.template = undefined;\n\t\t\t\t\tthis.partially_populated_template = undefined;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.last_match_position = this.partially_populated_template.search(DIGIT_PLACEHOLDER_MATCHER);\n\t\t\t\tthis.partially_populated_template = this.partially_populated_template.replace(DIGIT_PLACEHOLDER_MATCHER, digit);\n\t\t\t}\n\n\t\t\t// Return the formatted phone number so far\n\t\t\treturn close_dangling_braces(this.partially_populated_template, this.last_match_position + 1).replace(DIGIT_PLACEHOLDER_MATCHER_GLOBAL, ' ');\n\t\t}\n\t}, {\n\t\tkey: 'is_international',\n\t\tvalue: function is_international() {\n\t\t\treturn this.parsed_input && this.parsed_input[0] === '+';\n\t\t}\n\t}, {\n\t\tkey: 'get_format_format',\n\t\tvalue: function get_format_format(format) {\n\t\t\tif (this.is_international()) {\n\t\t\t\treturn local_to_international_style(format.internationalFormat());\n\t\t\t}\n\n\t\t\t// If national prefix formatting rule is set\n\t\t\t// for this phone number format\n\t\t\tif (format.nationalPrefixFormattingRule()) {\n\t\t\t\t// If the user did input the national prefix\n\t\t\t\t// (or if the national prefix formatting rule does not require national prefix)\n\t\t\t\t// then maybe make it part of the phone number template\n\t\t\t\tif (this.national_prefix || !format.usesNationalPrefix()) {\n\t\t\t\t\t// Make the national prefix part of the phone number template\n\t\t\t\t\treturn format.format().replace(FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn format.format();\n\t\t}\n\n\t\t// Determines the country of the phone number\n\t\t// entered so far based on the country phone code\n\t\t// and the national phone number.\n\n\t}, {\n\t\tkey: 'determine_the_country',\n\t\tvalue: function determine_the_country() {\n\t\t\tthis.country = find_country_code(this.countryCallingCode, this.national_number, this.metadata);\n\t\t}\n\t}, {\n\t\tkey: 'getNationalNumber',\n\t\tvalue: function getNationalNumber() {\n\t\t\treturn this.national_number;\n\t\t}\n\t}]);\n\n\treturn AsYouType;\n}();\n\nexport default AsYouType;\n\n\nexport function close_dangling_braces(template, cut_before) {\n\tvar retained_template = template.slice(0, cut_before);\n\n\tvar opening_braces = count_occurences('(', retained_template);\n\tvar closing_braces = count_occurences(')', retained_template);\n\n\tvar dangling_braces = opening_braces - closing_braces;\n\n\twhile (dangling_braces > 0 && cut_before < template.length) {\n\t\tif (template[cut_before] === ')') {\n\t\t\tdangling_braces--;\n\t\t}\n\t\tcut_before++;\n\t}\n\n\treturn template.slice(0, cut_before);\n}\n\n// Counts all occurences of a symbol in a string.\n// Unicode-unsafe (because using `.split()`).\nexport function count_occurences(symbol, string) {\n\tvar count = 0;\n\n\t// Using `.split('')` to iterate through a string here\n\t// to avoid requiring `Symbol.iterator` polyfill.\n\t// `.split('')` is generally not safe for Unicode,\n\t// but in this particular case for counting brackets it is safe.\n\t// for (const character of string)\n\tfor (var _iterator4 = string.split(''), _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n\t\tvar _ref4;\n\n\t\tif (_isArray4) {\n\t\t\tif (_i4 >= _iterator4.length) break;\n\t\t\t_ref4 = _iterator4[_i4++];\n\t\t} else {\n\t\t\t_i4 = _iterator4.next();\n\t\t\tif (_i4.done) break;\n\t\t\t_ref4 = _i4.value;\n\t\t}\n\n\t\tvar character = _ref4;\n\n\t\tif (character === symbol) {\n\t\t\tcount++;\n\t\t}\n\t}\n\n\treturn count;\n}\n\n// Repeats a string (or a symbol) N times.\n// http://stackoverflow.com/questions/202605/repeat-string-javascript\nexport function repeat(string, times) {\n\tif (times < 1) {\n\t\treturn '';\n\t}\n\n\tvar result = '';\n\n\twhile (times > 1) {\n\t\tif (times & 1) {\n\t\t\tresult += string;\n\t\t}\n\n\t\ttimes >>= 1;\n\t\tstring += string;\n\t}\n\n\treturn result + string;\n}\n//# sourceMappingURL=AsYouType.js.map","import Metadata from './metadata';\nimport { matches_entirely, VALID_DIGITS } from './common';\n\nvar CAPTURING_DIGIT_PATTERN = new RegExp('([' + VALID_DIGITS + '])');\n\n/**\r\n * Pattern that makes it easy to distinguish whether a region has a single\r\n * international dialing prefix or not. If a region has a single international\r\n * prefix (e.g. 011 in USA), it will be represented as a string that contains\r\n * a sequence of ASCII digits, and possibly a tilde, which signals waiting for\r\n * the tone. If there are multiple available international prefixes in a\r\n * region, they will be represented as a regex string that always contains one\r\n * or more characters that are not ASCII digits or a tilde.\r\n */\nvar SINGLE_IDD_PREFIX = /[\\d]+(?:[~\\u2053\\u223C\\uFF5E][\\d]+)?/;\n\n// export function isSingleIDDPrefix(IDDPrefix)\n// {\n// \treturn matches_entirely(IDDPrefix, SINGLE_IDD_PREFIX)\n// }\n\n// For regions that have multiple international prefixes, the international format\n// of the number is returned, unless there is a preferred international prefix.\nexport function getIDDPrefix(country, metadata) {\n\tvar countryMetadata = new Metadata(metadata);\n\tcountryMetadata.country(country);\n\n\tif (matches_entirely(countryMetadata.IDDPrefix(), SINGLE_IDD_PREFIX)) {\n\t\treturn countryMetadata.IDDPrefix();\n\t}\n\n\treturn countryMetadata.defaultIDDPrefix();\n}\n\nexport function stripIDDPrefix(number, country, metadata) {\n\tif (!country) {\n\t\treturn;\n\t}\n\n\t// Check if the number is IDD-prefixed.\n\n\tvar IDDPrefixPattern = new RegExp(getIDDPrefix(country, metadata));\n\n\tif (number.search(IDDPrefixPattern) !== 0) {\n\t\treturn;\n\t}\n\n\t// Strip IDD prefix.\n\tnumber = number.slice(number.match(IDDPrefixPattern)[0].length);\n\n\t// Some kind of a weird edge case.\n\t// No explanation from Google given.\n\tvar matchedGroups = number.match(CAPTURING_DIGIT_PATTERN);\n\t/* istanbul ignore next */\n\tif (matchedGroups && matchedGroups[1] != null && matchedGroups[1].length > 0) {\n\t\tif (matchedGroups[1] === '0') {\n\t\t\treturn;\n\t\t}\n\t}\n\n\treturn number;\n}\n//# sourceMappingURL=IDD.js.map","var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nimport { is_viable_phone_number } from './parse';\n\n// https://www.ietf.org/rfc/rfc3966.txt\n\n/**\r\n * @param  {string} text - Phone URI (RFC 3966).\r\n * @return {object} `{ ?number, ?ext }`.\r\n */\nexport function parseRFC3966(text) {\n\tvar number = void 0;\n\tvar ext = void 0;\n\n\tfor (var _iterator = text.split(';'), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n\t\tvar _ref;\n\n\t\tif (_isArray) {\n\t\t\tif (_i >= _iterator.length) break;\n\t\t\t_ref = _iterator[_i++];\n\t\t} else {\n\t\t\t_i = _iterator.next();\n\t\t\tif (_i.done) break;\n\t\t\t_ref = _i.value;\n\t\t}\n\n\t\tvar part = _ref;\n\n\t\tvar _part$split = part.split(':'),\n\t\t    _part$split2 = _slicedToArray(_part$split, 2),\n\t\t    name = _part$split2[0],\n\t\t    value = _part$split2[1];\n\n\t\tswitch (name) {\n\t\t\tcase 'tel':\n\t\t\t\tnumber = value;\n\t\t\t\tbreak;\n\t\t\tcase 'ext':\n\t\t\t\text = value;\n\t\t\t\tbreak;\n\t\t\tcase 'phone-context':\n\t\t\t\t// Only \"country contexts\" are supported.\n\t\t\t\t// \"Domain contexts\" are ignored.\n\t\t\t\tif (value[0] === '+') {\n\t\t\t\t\tnumber = value + number;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t// If the phone number is not viable, then abort.\n\tif (!is_viable_phone_number(number)) {\n\t\treturn {};\n\t}\n\n\tvar result = { number: number };\n\tif (ext) {\n\t\tresult.ext = ext;\n\t}\n\treturn result;\n}\n\n/**\r\n * @param  {object} - `{ ?number, ?extension }`.\r\n * @return {string} Phone URI (RFC 3966).\r\n */\nexport function formatRFC3966(_ref2) {\n\tvar number = _ref2.number,\n\t    ext = _ref2.ext;\n\n\tif (!number) {\n\t\treturn '';\n\t}\n\n\tif (number[0] !== '+') {\n\t\tthrow new Error('\"formatRFC3966()\" expects \"number\" to be in E.164 format.');\n\t}\n\n\treturn 'tel:' + number + (ext ? ';ext=' + ext : '');\n}\n//# sourceMappingURL=RFC3966.js.map","import { stripIDDPrefix } from './IDD';\n\n// `DASHES` will be right after the opening square bracket of the \"character class\"\nvar DASHES = '-\\u2010-\\u2015\\u2212\\u30FC\\uFF0D';\nvar SLASHES = '\\uFF0F/';\nvar DOTS = '\\uFF0E.';\nexport var WHITESPACE = ' \\xA0\\xAD\\u200B\\u2060\\u3000';\nvar BRACKETS = '()\\uFF08\\uFF09\\uFF3B\\uFF3D\\\\[\\\\]';\n// export const OPENING_BRACKETS = '(\\uFF08\\uFF3B\\\\\\['\nvar TILDES = '~\\u2053\\u223C\\uFF5E';\n\n// Digits accepted in phone numbers\n// (ascii, fullwidth, arabic-indic, and eastern arabic digits).\nexport var VALID_DIGITS = '0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9';\n\n// Regular expression of acceptable punctuation found in phone numbers. This\n// excludes punctuation found as a leading character only. This consists of dash\n// characters, white space characters, full stops, slashes, square brackets,\n// parentheses and tildes. Full-width variants are also present.\nexport var VALID_PUNCTUATION = '' + DASHES + SLASHES + DOTS + WHITESPACE + BRACKETS + TILDES;\n\nexport var PLUS_CHARS = '+\\uFF0B';\nvar LEADING_PLUS_CHARS_PATTERN = new RegExp('^[' + PLUS_CHARS + ']+');\n\n// The ITU says the maximum length should be 15,\n// but one can find longer numbers in Germany.\nexport var MAX_LENGTH_FOR_NSN = 17;\n\n// The maximum length of the country calling code.\nexport var MAX_LENGTH_COUNTRY_CODE = 3;\n\n// These mappings map a character (key) to a specific digit that should\n// replace it for normalization purposes. Non-European digits that\n// may be used in phone numbers are mapped to a European equivalent.\n//\n// E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\n//\nexport var DIGIT_MAPPINGS = {\n\t'0': '0',\n\t'1': '1',\n\t'2': '2',\n\t'3': '3',\n\t'4': '4',\n\t'5': '5',\n\t'6': '6',\n\t'7': '7',\n\t'8': '8',\n\t'9': '9',\n\t'\\uFF10': '0', // Fullwidth digit 0\n\t'\\uFF11': '1', // Fullwidth digit 1\n\t'\\uFF12': '2', // Fullwidth digit 2\n\t'\\uFF13': '3', // Fullwidth digit 3\n\t'\\uFF14': '4', // Fullwidth digit 4\n\t'\\uFF15': '5', // Fullwidth digit 5\n\t'\\uFF16': '6', // Fullwidth digit 6\n\t'\\uFF17': '7', // Fullwidth digit 7\n\t'\\uFF18': '8', // Fullwidth digit 8\n\t'\\uFF19': '9', // Fullwidth digit 9\n\t'\\u0660': '0', // Arabic-indic digit 0\n\t'\\u0661': '1', // Arabic-indic digit 1\n\t'\\u0662': '2', // Arabic-indic digit 2\n\t'\\u0663': '3', // Arabic-indic digit 3\n\t'\\u0664': '4', // Arabic-indic digit 4\n\t'\\u0665': '5', // Arabic-indic digit 5\n\t'\\u0666': '6', // Arabic-indic digit 6\n\t'\\u0667': '7', // Arabic-indic digit 7\n\t'\\u0668': '8', // Arabic-indic digit 8\n\t'\\u0669': '9', // Arabic-indic digit 9\n\t'\\u06F0': '0', // Eastern-Arabic digit 0\n\t'\\u06F1': '1', // Eastern-Arabic digit 1\n\t'\\u06F2': '2', // Eastern-Arabic digit 2\n\t'\\u06F3': '3', // Eastern-Arabic digit 3\n\t'\\u06F4': '4', // Eastern-Arabic digit 4\n\t'\\u06F5': '5', // Eastern-Arabic digit 5\n\t'\\u06F6': '6', // Eastern-Arabic digit 6\n\t'\\u06F7': '7', // Eastern-Arabic digit 7\n\t'\\u06F8': '8', // Eastern-Arabic digit 8\n\t'\\u06F9': '9' // Eastern-Arabic digit 9\n\n\n\t/**\r\n  * Drops all punctuation leaving only digits and the leading `+` sign (if any).\r\n  * Also converts wide-ascii and arabic-indic numerals to conventional numerals.\r\n  *\r\n  * E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\r\n  *\r\n  * @param  {string} number\r\n  * @return {string}\r\n  */\n};export function parse_phone_number_digits(number) {\n\treturn (LEADING_PLUS_CHARS_PATTERN.test(number) ? '+' : '') + drop_and_substitute_characters(number, DIGIT_MAPPINGS);\n}\n\n// Parses a formatted phone number\n// and returns `{ country_calling_code, number }`\n// where `number` is the national (significant) phone number.\n//\n// (aka `maybeExtractCountryPhoneCode`)\n//\nexport function parse_national_number_and_country_calling_code(number, country, metadata) {\n\tnumber = parse_phone_number_digits(number);\n\n\tif (!number) {\n\t\treturn {};\n\t}\n\n\t// If this is not an international phone number,\n\t// then don't extract country phone code.\n\tif (number[0] !== '+') {\n\t\t// Convert an \"out-of-country\" dialing phone number\n\t\t// to a proper international phone number.\n\t\tvar numberWithoutIDD = stripIDDPrefix(number, country, metadata.metadata);\n\n\t\t// If an IDD prefix was stripped then\n\t\t// convert the number to international one.\n\t\tif (numberWithoutIDD && numberWithoutIDD !== number) {\n\t\t\tnumber = '+' + numberWithoutIDD;\n\t\t} else {\n\t\t\treturn { number: number };\n\t\t}\n\t}\n\n\t// Fast abortion: country codes do not begin with a '0'\n\tif (number[1] === '0') {\n\t\treturn {};\n\t}\n\n\t// The thing with country phone codes\n\t// is that they are orthogonal to each other\n\t// i.e. there's no such country phone code A\n\t// for which country phone code B exists\n\t// where B starts with A.\n\t// Therefore, while scanning digits,\n\t// if a valid country code is found,\n\t// that means that it is the country code.\n\t//\n\tvar i = 2;\n\twhile (i - 1 <= MAX_LENGTH_COUNTRY_CODE && i <= number.length) {\n\t\tvar countryCallingCode = number.slice(1, i);\n\n\t\tif (metadata.countryCallingCodes()[countryCallingCode]) {\n\t\t\treturn {\n\t\t\t\tcountryCallingCode: countryCallingCode,\n\t\t\t\tnumber: number.slice(i)\n\t\t\t};\n\t\t}\n\n\t\ti++;\n\t}\n\n\treturn {};\n}\n\n// Checks whether the entire input sequence can be matched\n// against the regular expression.\nexport function matches_entirely() {\n\tvar text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\tvar regular_expression = arguments[1];\n\n\tif (typeof regular_expression === 'string') {\n\t\tregular_expression = '^(?:' + regular_expression + ')$';\n\t}\n\n\tvar matched_groups = text.match(regular_expression);\n\treturn matched_groups !== null && matched_groups[0].length === text.length;\n}\n\n// For any character not being part of `replacements`\n// it is removed from the phone number.\nfunction drop_and_substitute_characters(text, replacements) {\n\tvar replaced = '';\n\n\t// Using `.split('')` to iterate through a string here\n\t// to avoid requiring `Symbol.iterator` polyfill.\n\t// `.split('')` is generally not safe for Unicode,\n\t// but in this particular case for `digits` it is safe.\n\t// for (const character of text)\n\tfor (var _iterator = text.split(''), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n\t\tvar _ref;\n\n\t\tif (_isArray) {\n\t\t\tif (_i >= _iterator.length) break;\n\t\t\t_ref = _iterator[_i++];\n\t\t} else {\n\t\t\t_i = _iterator.next();\n\t\t\tif (_i.done) break;\n\t\t\t_ref = _i.value;\n\t\t}\n\n\t\tvar character = _ref;\n\n\t\tvar replacement = replacements[character.toUpperCase()];\n\n\t\tif (replacement) {\n\t\t\treplaced += replacement;\n\t\t}\n\t}\n\n\treturn replaced;\n}\n\n// The RFC 3966 format for extensions.\nvar RFC3966_EXTN_PREFIX = ';ext=';\n\n// Pattern to capture digits used in an extension.\n// Places a maximum length of '7' for an extension.\nvar CAPTURING_EXTN_DIGITS = '([' + VALID_DIGITS + ']{1,7})';\n\n/**\r\n * Regexp of all possible ways to write extensions, for use when parsing. This\r\n * will be run as a case-insensitive regexp match. Wide character versions are\r\n * also provided after each ASCII version. There are three regular expressions\r\n * here. The first covers RFC 3966 format, where the extension is added using\r\n * ';ext='. The second more generic one starts with optional white space and\r\n * ends with an optional full stop (.), followed by zero or more spaces/tabs\r\n * /commas and then the numbers themselves. The other one covers the special\r\n * case of American numbers where the extension is written with a hash at the\r\n * end, such as '- 503#'. Note that the only capturing groups should be around\r\n * the digits that you want to capture as part of the extension, or else parsing\r\n * will fail! We allow two options for representing the accented o - the\r\n * character itself, and one in the unicode decomposed form with the combining\r\n * acute accent.\r\n */\nexport function create_extension_pattern(purpose) {\n\t// One-character symbols that can be used to indicate an extension.\n\tvar single_extension_characters = 'x\\uFF58#\\uFF03~\\uFF5E';\n\n\tswitch (purpose) {\n\t\t// For parsing, we are slightly more lenient in our interpretation than for matching. Here we\n\t\t// allow \"comma\" and \"semicolon\" as possible extension indicators. When matching, these are\n\t\tcase 'parsing':\n\t\t\tsingle_extension_characters = ',;' + single_extension_characters;\n\t}\n\n\treturn RFC3966_EXTN_PREFIX + CAPTURING_EXTN_DIGITS + '|' + '[ \\xA0\\\\t,]*' + '(?:e?xt(?:ensi(?:o\\u0301?|\\xF3))?n?|\\uFF45?\\uFF58\\uFF54\\uFF4E?|' + '[' + single_extension_characters + ']|int|anexo|\\uFF49\\uFF4E\\uFF54)' + '[:\\\\.\\uFF0E]?[ \\xA0\\\\t,-]*' + CAPTURING_EXTN_DIGITS + '#?|' + '[- ]+([' + VALID_DIGITS + ']{1,5})#';\n}\n//# sourceMappingURL=common.js.map","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport parse from './parse';\nimport Metadata from './metadata';\n\nimport { PLUS_CHARS, VALID_PUNCTUATION, VALID_DIGITS,\n// OPENING_BRACKETS,\nWHITESPACE, create_extension_pattern } from './common';\n\n// Copy-pasted from `./parse.js`.\nvar VALID_PHONE_NUMBER = '[' + PLUS_CHARS + ']{0,1}' + '(?:' + '[' + VALID_PUNCTUATION + ']*' + '[' + VALID_DIGITS + ']' + '){3,}' + '[' + VALID_PUNCTUATION + VALID_DIGITS + ']*';\n\nvar EXTN_PATTERNS_FOR_PARSING = create_extension_pattern('parsing');\n\nvar WHITESPACE_IN_THE_BEGINNING_PATTERN = new RegExp('^[' + WHITESPACE + ']+');\nvar WHITESPACE_IN_THE_END_PATTERN = new RegExp('[' + WHITESPACE + ']+$');\n\n// // Regular expression for getting opening brackets for a valid number\n// // found using `PHONE_NUMBER_START_PATTERN` for prepending those brackets to the number.\n// const BEFORE_NUMBER_DIGITS_PUNCTUATION = new RegExp('[' + OPENING_BRACKETS + ']+' + '[' + WHITESPACE + ']*' + '$')\n\nexport default function findPhoneNumbers(arg_1, arg_2, arg_3, arg_4) {\n\tvar _sort_out_arguments = sort_out_arguments(arg_1, arg_2, arg_3, arg_4),\n\t    text = _sort_out_arguments.text,\n\t    options = _sort_out_arguments.options,\n\t    metadata = _sort_out_arguments.metadata;\n\n\tvar search = new PhoneNumberSearch(text, options, metadata.metadata);\n\n\tvar phones = [];\n\n\twhile (search.hasNext()) {\n\t\tphones.push(search.next());\n\t}\n\n\treturn phones;\n}\n\n/**\r\n * @return ES6 `for ... of` iterator.\r\n */\nexport function searchPhoneNumbers(arg_1, arg_2, arg_3, arg_4) {\n\tvar _sort_out_arguments2 = sort_out_arguments(arg_1, arg_2, arg_3, arg_4),\n\t    text = _sort_out_arguments2.text,\n\t    options = _sort_out_arguments2.options,\n\t    metadata = _sort_out_arguments2.metadata;\n\n\tvar search = new PhoneNumberSearch(text, options, metadata.metadata);\n\n\treturn _defineProperty({}, Symbol.iterator, function () {\n\t\treturn {\n\t\t\tnext: function next() {\n\t\t\t\tif (search.hasNext()) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue: search.next()\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tdone: true\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t});\n}\n\n/**\r\n * Extracts a parseable phone number including any opening brackets, etc.\r\n * @param  {string} text - Input.\r\n * @return {object} `{ ?number, ?startsAt, ?endsAt }`.\r\n */\nexport var PhoneNumberSearch = function () {\n\tfunction PhoneNumberSearch(text) {\n\t\tvar options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\tvar metadata = arguments[2];\n\n\t\t_classCallCheck(this, PhoneNumberSearch);\n\n\t\tthis.state = 'NOT_READY';\n\n\t\tthis.text = text;\n\t\tthis.options = options;\n\t\tthis.metadata = metadata;\n\n\t\tthis.regexp = new RegExp(VALID_PHONE_NUMBER +\n\t\t// Phone number extensions\n\t\t'(?:' + EXTN_PATTERNS_FOR_PARSING + ')?', 'ig');\n\n\t\t// this.searching_from = 0\n\t}\n\t// Iteration tristate.\n\n\n\t_createClass(PhoneNumberSearch, [{\n\t\tkey: 'find',\n\t\tvalue: function find() {\n\t\t\tvar matches = this.regexp.exec(this.text);\n\n\t\t\tif (!matches) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar number = matches[0];\n\t\t\tvar startsAt = matches.index;\n\n\t\t\tnumber = number.replace(WHITESPACE_IN_THE_BEGINNING_PATTERN, '');\n\t\t\tstartsAt += matches[0].length - number.length;\n\t\t\tnumber = number.replace(WHITESPACE_IN_THE_END_PATTERN, '');\n\n\t\t\t// // Prepend any opening brackets left behind by the\n\t\t\t// // `PHONE_NUMBER_START_PATTERN` regexp.\n\t\t\t// const text_before_number = text.slice(this.searching_from, startsAt)\n\t\t\t// const full_number_starts_at = text_before_number.search(BEFORE_NUMBER_DIGITS_PUNCTUATION)\n\t\t\t// if (full_number_starts_at >= 0)\n\t\t\t// {\n\t\t\t// \tnumber   = text_before_number.slice(full_number_starts_at) + number\n\t\t\t// \tstartsAt = full_number_starts_at\n\t\t\t// }\n\t\t\t//\n\t\t\t// this.searching_from = matches.lastIndex\n\n\t\t\tvar result = parse(number, this.options, this.metadata);\n\n\t\t\tif (result.phone) {\n\t\t\t\tresult.startsAt = startsAt;\n\t\t\t\tresult.endsAt = startsAt + number.length;\n\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\t// Tail recursion.\n\t\t\t// Try the next one if this one is not a valid phone number.\n\t\t\treturn this.find();\n\t\t}\n\t}, {\n\t\tkey: 'hasNext',\n\t\tvalue: function hasNext() {\n\t\t\tif (this.state === 'NOT_READY') {\n\t\t\t\tthis.last_match = this.find();\n\n\t\t\t\tif (this.last_match) {\n\t\t\t\t\tthis.state = 'READY';\n\t\t\t\t} else {\n\t\t\t\t\tthis.state = 'DONE';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this.state === 'READY';\n\t\t}\n\t}, {\n\t\tkey: 'next',\n\t\tvalue: function next() {\n\t\t\t// Check the state and find the next match as a side-effect if necessary.\n\t\t\tif (!this.hasNext()) {\n\t\t\t\tthrow new Error('No next element');\n\t\t\t}\n\n\t\t\t// Don't retain that memory any longer than necessary.\n\t\t\tvar result = this.last_match;\n\t\t\tthis.last_match = null;\n\t\t\tthis.state = 'NOT_READY';\n\t\t\treturn result;\n\t\t}\n\t}]);\n\n\treturn PhoneNumberSearch;\n}();\n\nexport function sort_out_arguments(arg_1, arg_2, arg_3, arg_4) {\n\tvar text = void 0;\n\tvar options = void 0;\n\tvar metadata = void 0;\n\n\t// If the phone number is passed as a string.\n\t// `parse('88005553535', ...)`.\n\tif (typeof arg_1 === 'string') {\n\t\ttext = arg_1;\n\t} else throw new TypeError('A text for parsing must be a string.');\n\n\t// If \"default country\" argument is being passed\n\t// then move it to `options`.\n\t// `findNumbers('88005553535', 'RU', [options], metadata)`.\n\tif (typeof arg_2 === 'string') {\n\t\tif (arg_4) {\n\t\t\toptions = _extends({ defaultCountry: arg_2 }, arg_3);\n\t\t\tmetadata = arg_4;\n\t\t} else {\n\t\t\toptions = { defaultCountry: arg_2 };\n\t\t\tmetadata = arg_3;\n\t\t}\n\t}\n\t// No \"default country\" argument is being passed.\n\t// Only international phone numbers are passed.\n\t// `findNumbers('+78005553535', [options], metadata)`.\n\telse {\n\t\t\tif (arg_3) {\n\t\t\t\toptions = arg_2;\n\t\t\t\tmetadata = arg_3;\n\t\t\t} else {\n\t\t\t\tmetadata = arg_2;\n\t\t\t}\n\t\t}\n\n\tif (!options) {\n\t\toptions = {};\n\t}\n\n\t// // Apply default options.\n\t// if (options)\n\t// {\n\t// \toptions = { ...default_options, ...options }\n\t// }\n\t// else\n\t// {\n\t// \toptions = default_options\n\t// }\n\n\treturn { text: text, options: options, metadata: new Metadata(metadata) };\n}\n//# sourceMappingURL=findPhoneNumbers.js.map","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n// This is a port of Google Android `libphonenumber`'s\n// `phonenumberutil.js` of 17th November, 2016.\n//\n// https://github.com/googlei18n/libphonenumber/commits/master/javascript/i18n/phonenumbers/phonenumberutil.js\n\nimport { parse_national_number_and_country_calling_code, VALID_PUNCTUATION, matches_entirely } from './common';\n\nimport { getIDDPrefix } from './IDD';\n\nimport Metadata from './metadata';\n\nimport { formatRFC3966 } from './RFC3966';\n\nvar defaultOptions = {\n\tformatExtension: function formatExtension(number, extension, metadata) {\n\t\treturn '' + number + metadata.ext() + extension;\n\t}\n\n\t// Formats a phone number\n\t//\n\t// Example use cases:\n\t//\n\t// ```js\n\t// format('8005553535', 'RU', 'International')\n\t// format('8005553535', 'RU', 'International', metadata)\n\t// format({ phone: '8005553535', country: 'RU' }, 'International')\n\t// format({ phone: '8005553535', country: 'RU' }, 'International', metadata)\n\t// format('+78005553535', 'National')\n\t// format('+78005553535', 'National', metadata)\n\t// ```\n\t//\n};export default function format(arg_1, arg_2, arg_3, arg_4, arg_5) {\n\tvar _sort_out_arguments = sort_out_arguments(arg_1, arg_2, arg_3, arg_4, arg_5),\n\t    input = _sort_out_arguments.input,\n\t    format_type = _sort_out_arguments.format_type,\n\t    options = _sort_out_arguments.options,\n\t    metadata = _sort_out_arguments.metadata;\n\n\tif (input.country && metadata.hasCountry(input.country)) {\n\t\tmetadata.country(input.country);\n\t}\n\n\tvar _parse_national_numbe = parse_national_number_and_country_calling_code(input.phone, null, metadata),\n\t    countryCallingCode = _parse_national_numbe.countryCallingCode,\n\t    number = _parse_national_numbe.number;\n\n\tcountryCallingCode = countryCallingCode || input.countryCallingCode;\n\n\tif (countryCallingCode) {\n\t\t// Check country restriction\n\t\tif (input.country && metadata.selectedCountry() && countryCallingCode !== metadata.countryCallingCode()) {\n\t\t\treturn input.phone;\n\t\t}\n\n\t\tmetadata.chooseCountryByCountryCallingCode(countryCallingCode);\n\t}\n\n\tif (!metadata.selectedCountry()) {\n\t\treturn input.phone;\n\t}\n\n\tswitch (format_type) {\n\t\tcase 'International':\n\t\t\tif (!number) {\n\t\t\t\treturn '+' + metadata.countryCallingCode();\n\t\t\t}\n\t\t\tnumber = format_national_number(number, 'International', false, metadata);\n\t\t\tnumber = '+' + metadata.countryCallingCode() + ' ' + number;\n\t\t\treturn add_extension(number, input.ext, metadata, options.formatExtension);\n\n\t\tcase 'E.164':\n\t\t\t// `E.164` doesn't define \"phone number extensions\".\n\t\t\treturn '+' + metadata.countryCallingCode() + input.phone;\n\n\t\tcase 'RFC3966':\n\t\t\treturn formatRFC3966({\n\t\t\t\tnumber: '+' + metadata.countryCallingCode() + input.phone,\n\t\t\t\text: input.ext\n\t\t\t});\n\n\t\tcase 'IDD':\n\t\t\tif (!options.fromCountry) {\n\t\t\t\treturn;\n\t\t\t\t// throw new Error('`fromCountry` option not passed for IDD-prefixed formatting.')\n\t\t\t}\n\t\t\tvar IDDPrefix = getIDDPrefix(options.fromCountry, metadata.metadata);\n\t\t\tif (!IDDPrefix) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (options.humanReadable) {\n\t\t\t\tvar formattedForSameCountryCallingCode = countryCallingCode && formatIDDSameCountryCallingCodeNumber(number, countryCallingCode, options.fromCountry, metadata);\n\t\t\t\tif (formattedForSameCountryCallingCode) {\n\t\t\t\t\tnumber = formattedForSameCountryCallingCode;\n\t\t\t\t} else {\n\t\t\t\t\tnumber = IDDPrefix + ' ' + metadata.countryCallingCode() + ' ' + format_national_number(number, 'International', false, metadata);\n\t\t\t\t}\n\t\t\t\treturn add_extension(number, input.ext, metadata, options.formatExtension);\n\t\t\t}\n\t\t\treturn '' + IDDPrefix + metadata.countryCallingCode() + number;\n\n\t\tcase 'National':\n\t\t\tif (!number) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tnumber = format_national_number(number, 'National', false, metadata);\n\t\t\treturn add_extension(number, input.ext, metadata, options.formatExtension);\n\t}\n}\n\n// This was originally set to $1 but there are some countries for which the\n// first group is not used in the national pattern (e.g. Argentina) so the $1\n// group does not match correctly.  Therefore, we use \\d, so that the first\n// group actually used in the pattern will be matched.\nexport var FIRST_GROUP_PATTERN = /(\\$\\d)/;\n\nexport function format_national_number_using_format(number, format, international, enforce_national_prefix, metadata) {\n\tvar format_pattern_matcher = new RegExp(format.pattern());\n\n\t// National prefix is omitted if there's no national prefix formatting rule\n\t// set for this country, or when this rule is set but\n\t// national prefix is optional for this phone number format\n\t// (and it is not enforced explicitly)\n\tvar national_prefix_may_be_omitted = !format.nationalPrefixFormattingRule() || format.nationalPrefixFormattingRule() && format.nationalPrefixIsOptionalWhenFormatting() && !enforce_national_prefix;\n\n\tif (!international && !national_prefix_may_be_omitted) {\n\t\treturn number.replace(format_pattern_matcher, format.format().replace(FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule()));\n\t}\n\n\tvar formatted_number = number.replace(format_pattern_matcher, international ? format.internationalFormat() : format.format());\n\n\tif (international) {\n\t\treturn local_to_international_style(formatted_number);\n\t}\n\n\treturn formatted_number;\n}\n\nfunction format_national_number(number, format_as, enforce_national_prefix, metadata) {\n\tvar format = choose_format_for_number(metadata.formats(), number);\n\n\tif (!format) {\n\t\treturn number;\n\t}\n\n\treturn format_national_number_using_format(number, format, format_as === 'International', enforce_national_prefix, metadata);\n}\n\nexport function choose_format_for_number(available_formats, national_number) {\n\tfor (var _iterator = available_formats, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n\t\tvar _ref;\n\n\t\tif (_isArray) {\n\t\t\tif (_i >= _iterator.length) break;\n\t\t\t_ref = _iterator[_i++];\n\t\t} else {\n\t\t\t_i = _iterator.next();\n\t\t\tif (_i.done) break;\n\t\t\t_ref = _i.value;\n\t\t}\n\n\t\tvar _format = _ref;\n\n\t\t// Validate leading digits\n\t\tif (_format.leadingDigitsPatterns().length > 0) {\n\t\t\t// The last leading_digits_pattern is used here, as it is the most detailed\n\t\t\tvar last_leading_digits_pattern = _format.leadingDigitsPatterns()[_format.leadingDigitsPatterns().length - 1];\n\n\t\t\t// If leading digits don't match then move on to the next phone number format\n\t\t\tif (national_number.search(last_leading_digits_pattern) !== 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\t// Check that the national number matches the phone number format regular expression\n\t\tif (matches_entirely(national_number, new RegExp(_format.pattern()))) {\n\t\t\treturn _format;\n\t\t}\n\t}\n}\n\n// Removes brackets and replaces dashes with spaces.\n//\n// E.g. \"(999) 111-22-33\" -> \"999 111 22 33\"\n//\nexport function local_to_international_style(local) {\n\treturn local.replace(new RegExp('[' + VALID_PUNCTUATION + ']+', 'g'), ' ').trim();\n}\n\n// Sort out arguments\nfunction sort_out_arguments(arg_1, arg_2, arg_3, arg_4, arg_5) {\n\tvar input = void 0;\n\tvar format_type = void 0;\n\tvar options = void 0;\n\tvar metadata = void 0;\n\n\t// Sort out arguments.\n\n\t// If the phone number is passed as a string.\n\t// `format('8005553535', ...)`.\n\tif (typeof arg_1 === 'string') {\n\t\t// If country code is supplied.\n\t\t// `format('8005553535', 'RU', 'National', [options], metadata)`.\n\t\tif (typeof arg_3 === 'string') {\n\t\t\t// Will be `parse()`d later in code\n\t\t\tinput = {\n\t\t\t\tphone: arg_1,\n\t\t\t\tcountry: arg_2\n\t\t\t};\n\n\t\t\tformat_type = arg_3;\n\n\t\t\tif (arg_5) {\n\t\t\t\toptions = arg_4;\n\t\t\t\tmetadata = arg_5;\n\t\t\t} else {\n\t\t\t\tmetadata = arg_4;\n\t\t\t}\n\t\t}\n\t\t// Just an international phone number is supplied\n\t\t// `format('+78005553535', 'National', [options], metadata)`.\n\t\telse {\n\t\t\t\t// Will be `parse()`d later in code\n\t\t\t\tinput = {\n\t\t\t\t\tphone: arg_1\n\t\t\t\t};\n\n\t\t\t\tif (typeof arg_2 !== 'string') {\n\t\t\t\t\tthrow new Error('Format type argument not passed for `format()`');\n\t\t\t\t}\n\n\t\t\t\tformat_type = arg_2;\n\n\t\t\t\tif (arg_4) {\n\t\t\t\t\toptions = arg_3;\n\t\t\t\t\tmetadata = arg_4;\n\t\t\t\t} else {\n\t\t\t\t\tmetadata = arg_3;\n\t\t\t\t}\n\t\t\t}\n\t}\n\t// If the phone number is passed as a parsed number object.\n\t// `format({ phone: '8005553535', country: 'RU' }, 'National', [options], metadata)`.\n\telse if (is_object(arg_1) && typeof arg_1.phone === 'string') {\n\t\t\tinput = arg_1;\n\t\t\tformat_type = arg_2;\n\n\t\t\tif (arg_4) {\n\t\t\t\toptions = arg_3;\n\t\t\t\tmetadata = arg_4;\n\t\t\t} else {\n\t\t\t\tmetadata = arg_3;\n\t\t\t}\n\t\t} else throw new TypeError('A phone number must either be a string or an object of shape { phone, [country] }.');\n\n\t// Validate `format_type`.\n\tswitch (format_type) {\n\t\tcase 'International':\n\t\tcase 'E.164':\n\t\tcase 'National':\n\t\tcase 'RFC3966':\n\t\tcase 'IDD':\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new Error('Unknown format type argument passed to \"format()\": \"' + format_type + '\"');\n\t}\n\n\t// Apply default options.\n\tif (options) {\n\t\toptions = _extends({}, defaultOptions, options);\n\t} else {\n\t\toptions = defaultOptions;\n\t}\n\n\treturn { input: input, format_type: format_type, options: options, metadata: new Metadata(metadata) };\n}\n\n// Babel transforms `typeof` into some \"branches\"\n// so istanbul will show this as \"branch not covered\".\n/* istanbul ignore next */\nvar is_object = function is_object(_) {\n\treturn (typeof _ === 'undefined' ? 'undefined' : _typeof(_)) === 'object';\n};\n\nfunction add_extension(number, ext, metadata, formatExtension) {\n\treturn ext ? formatExtension(number, ext, metadata) : number;\n}\n\nexport function formatIDDSameCountryCallingCodeNumber(number, toCountryCallingCode, fromCountry, toCountryMetadata) {\n\tvar fromCountryMetadata = new Metadata(toCountryMetadata.metadata);\n\tfromCountryMetadata.country(fromCountry);\n\n\t// If calling within the same country calling code.\n\tif (toCountryCallingCode === fromCountryMetadata.countryCallingCode()) {\n\t\t// For NANPA regions, return the national format for these regions\n\t\t// but prefix it with the country calling code.\n\t\tif (toCountryCallingCode === '1') {\n\t\t\treturn toCountryCallingCode + ' ' + format_national_number(number, 'National', false, toCountryMetadata);\n\t\t}\n\n\t\t// If regions share a country calling code, the country calling code need\n\t\t// not be dialled. This also applies when dialling within a region, so this\n\t\t// if clause covers both these cases. Technically this is the case for\n\t\t// dialling from La Reunion to other overseas departments of France (French\n\t\t// Guiana, Martinique, Guadeloupe), but not vice versa - so we don't cover\n\t\t// this edge case for now and for those cases return the version including\n\t\t// country calling code. Details here:\n\t\t// http://www.petitfute.com/voyage/225-info-pratiques-reunion\n\t\treturn format_national_number(number, 'National', false, toCountryMetadata);\n\t}\n}\n//# sourceMappingURL=format.js.map","import Metadata from './metadata';\n\nexport default function (country, metadata) {\n\tmetadata = new Metadata(metadata);\n\n\tif (!metadata.hasCountry(country)) {\n\t\tthrow new Error('Unknown country: ' + country);\n\t}\n\n\treturn metadata.country(country).countryCallingCode();\n}\n//# sourceMappingURL=getCountryCallingCode.js.map","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport compare from 'semver-compare';\n\n// Added \"possibleLengths\" and renamed\n// \"country_phone_code_to_countries\" to \"country_calling_codes\".\nvar V2 = '1.0.18';\n\n// Added \"idd_prefix\" and \"default_idd_prefix\".\nvar V3 = '1.2.0';\n\nvar DEFAULT_EXT_PREFIX = ' ext. ';\n\nvar Metadata = function () {\n\tfunction Metadata(metadata) {\n\t\t_classCallCheck(this, Metadata);\n\n\t\tvalidateMetadata(metadata);\n\n\t\tthis.metadata = metadata;\n\n\t\tthis.v1 = !metadata.version;\n\t\tthis.v2 = metadata.version !== undefined && compare(metadata.version, V3) === -1;\n\t\tthis.v3 = metadata.version !== undefined; // && compare(metadata.version, V4) === -1\n\t}\n\n\t_createClass(Metadata, [{\n\t\tkey: 'hasCountry',\n\t\tvalue: function hasCountry(country) {\n\t\t\treturn this.metadata.countries[country] !== undefined;\n\t\t}\n\t}, {\n\t\tkey: 'country',\n\t\tvalue: function country(_country) {\n\t\t\tif (!_country) {\n\t\t\t\tthis._country = undefined;\n\t\t\t\tthis.country_metadata = undefined;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tif (!this.hasCountry(_country)) {\n\t\t\t\tthrow new Error('Unknown country: ' + _country);\n\t\t\t}\n\n\t\t\tthis._country = _country;\n\t\t\tthis.country_metadata = this.metadata.countries[_country];\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'countryCallingCode',\n\t\tvalue: function countryCallingCode() {\n\t\t\treturn this.country_metadata[0];\n\t\t}\n\t}, {\n\t\tkey: 'IDDPrefix',\n\t\tvalue: function IDDPrefix() {\n\t\t\tif (this.v1 || this.v2) return;\n\t\t\treturn this.country_metadata[1];\n\t\t}\n\t}, {\n\t\tkey: 'defaultIDDPrefix',\n\t\tvalue: function defaultIDDPrefix() {\n\t\t\tif (this.v1 || this.v2) return;\n\t\t\treturn this.country_metadata[12];\n\t\t}\n\t}, {\n\t\tkey: 'nationalNumberPattern',\n\t\tvalue: function nationalNumberPattern() {\n\t\t\tif (this.v1 || this.v2) return this.country_metadata[1];\n\t\t\treturn this.country_metadata[2];\n\t\t}\n\t}, {\n\t\tkey: 'possibleLengths',\n\t\tvalue: function possibleLengths() {\n\t\t\tif (this.v1) return;\n\t\t\treturn this.country_metadata[this.v2 ? 2 : 3];\n\t\t}\n\t}, {\n\t\tkey: 'formats',\n\t\tvalue: function formats() {\n\t\t\tvar _this = this;\n\n\t\t\tvar formats = this.country_metadata[this.v1 ? 2 : this.v2 ? 3 : 4] || [];\n\t\t\treturn formats.map(function (_) {\n\t\t\t\treturn new Format(_, _this);\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'nationalPrefix',\n\t\tvalue: function nationalPrefix() {\n\t\t\treturn this.country_metadata[this.v1 ? 3 : this.v2 ? 4 : 5];\n\t\t}\n\t}, {\n\t\tkey: 'nationalPrefixFormattingRule',\n\t\tvalue: function nationalPrefixFormattingRule() {\n\t\t\treturn this.country_metadata[this.v1 ? 4 : this.v2 ? 5 : 6];\n\t\t}\n\t}, {\n\t\tkey: 'nationalPrefixForParsing',\n\t\tvalue: function nationalPrefixForParsing() {\n\t\t\t// If `national_prefix_for_parsing` is not set explicitly,\n\t\t\t// then infer it from `national_prefix` (if any)\n\t\t\treturn this.country_metadata[this.v1 ? 5 : this.v2 ? 6 : 7] || this.nationalPrefix();\n\t\t}\n\t}, {\n\t\tkey: 'nationalPrefixTransformRule',\n\t\tvalue: function nationalPrefixTransformRule() {\n\t\t\treturn this.country_metadata[this.v1 ? 6 : this.v2 ? 7 : 8];\n\t\t}\n\t}, {\n\t\tkey: 'nationalPrefixIsOptionalWhenFormatting',\n\t\tvalue: function nationalPrefixIsOptionalWhenFormatting() {\n\t\t\treturn !!this.country_metadata[this.v1 ? 7 : this.v2 ? 8 : 9];\n\t\t}\n\t}, {\n\t\tkey: 'leadingDigits',\n\t\tvalue: function leadingDigits() {\n\t\t\treturn this.country_metadata[this.v1 ? 8 : this.v2 ? 9 : 10];\n\t\t}\n\t}, {\n\t\tkey: 'types',\n\t\tvalue: function types() {\n\t\t\treturn this.country_metadata[this.v1 ? 9 : this.v2 ? 10 : 11];\n\t\t}\n\t}, {\n\t\tkey: 'hasTypes',\n\t\tvalue: function hasTypes() {\n\t\t\t// Versions 1.2.0 - 1.2.4: can be `[]`.\n\t\t\tif (this.types() && this.types().length === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// Versions <= 1.2.4: can be `undefined`.\n\t\t\t// Version >= 1.2.5: can be `0`.\n\t\t\treturn !!this.types();\n\t\t}\n\t}, {\n\t\tkey: 'type',\n\t\tvalue: function type(_type) {\n\t\t\tif (this.hasTypes() && getType(this.types(), _type)) {\n\t\t\t\treturn new Type(getType(this.types(), _type), this);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'ext',\n\t\tvalue: function ext() {\n\t\t\tif (this.v1 || this.v2) return DEFAULT_EXT_PREFIX;\n\t\t\treturn this.country_metadata[13] || DEFAULT_EXT_PREFIX;\n\t\t}\n\t}, {\n\t\tkey: 'countryCallingCodes',\n\t\tvalue: function countryCallingCodes() {\n\t\t\tif (this.v1) return this.metadata.country_phone_code_to_countries;\n\t\t\treturn this.metadata.country_calling_codes;\n\t\t}\n\n\t\t// Formatting information for regions which share\n\t\t// a country calling code is contained by only one region\n\t\t// for performance reasons. For example, for NANPA region\n\t\t// (\"North American Numbering Plan Administration\",\n\t\t//  which includes USA, Canada, Cayman Islands, Bahamas, etc)\n\t\t// it will be contained in the metadata for `US`.\n\t\t//\n\t\t// `country_calling_code` is always valid.\n\t\t// But the actual country may not necessarily be part of the metadata.\n\t\t//\n\n\t}, {\n\t\tkey: 'chooseCountryByCountryCallingCode',\n\t\tvalue: function chooseCountryByCountryCallingCode(country_calling_code) {\n\t\t\tvar country = this.countryCallingCodes()[country_calling_code][0];\n\n\t\t\t// Do not want to test this case.\n\t\t\t// (custom metadata, not all countries).\n\t\t\t/* istanbul ignore else */\n\t\t\tif (this.hasCountry(country)) {\n\t\t\t\tthis.country(country);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'selectedCountry',\n\t\tvalue: function selectedCountry() {\n\t\t\treturn this._country;\n\t\t}\n\t}]);\n\n\treturn Metadata;\n}();\n\nexport default Metadata;\n\nvar Format = function () {\n\tfunction Format(format, metadata) {\n\t\t_classCallCheck(this, Format);\n\n\t\tthis._format = format;\n\t\tthis.metadata = metadata;\n\t}\n\n\t_createClass(Format, [{\n\t\tkey: 'pattern',\n\t\tvalue: function pattern() {\n\t\t\treturn this._format[0];\n\t\t}\n\t}, {\n\t\tkey: 'format',\n\t\tvalue: function format() {\n\t\t\treturn this._format[1];\n\t\t}\n\t}, {\n\t\tkey: 'leadingDigitsPatterns',\n\t\tvalue: function leadingDigitsPatterns() {\n\t\t\treturn this._format[2] || [];\n\t\t}\n\t}, {\n\t\tkey: 'nationalPrefixFormattingRule',\n\t\tvalue: function nationalPrefixFormattingRule() {\n\t\t\treturn this._format[3] || this.metadata.nationalPrefixFormattingRule();\n\t\t}\n\t}, {\n\t\tkey: 'nationalPrefixIsOptionalWhenFormatting',\n\t\tvalue: function nationalPrefixIsOptionalWhenFormatting() {\n\t\t\treturn !!this._format[4] || this.metadata.nationalPrefixIsOptionalWhenFormatting();\n\t\t}\n\t}, {\n\t\tkey: 'nationalPrefixIsMandatoryWhenFormatting',\n\t\tvalue: function nationalPrefixIsMandatoryWhenFormatting() {\n\t\t\t// National prefix is omitted if there's no national prefix formatting rule\n\t\t\t// set for this country, or when the national prefix formatting rule\n\t\t\t// contains no national prefix itself, or when this rule is set but\n\t\t\t// national prefix is optional for this phone number format\n\t\t\t// (and it is not enforced explicitly)\n\t\t\treturn this.nationalPrefixFormattingRule() &&\n\t\t\t// Check that national prefix formatting rule is not a dummy one.\n\t\t\t// Check that national prefix formatting rule actually has national prefix digit(s).\n\t\t\tthis.usesNationalPrefix() &&\n\t\t\t// Or maybe national prefix is optional for this format\n\t\t\t!this.nationalPrefixIsOptionalWhenFormatting();\n\t\t}\n\n\t\t// Checks whether national prefix formatting rule contains national prefix\n\n\t}, {\n\t\tkey: 'usesNationalPrefix',\n\t\tvalue: function usesNationalPrefix() {\n\t\t\t// Check that national prefix formatting rule is not a dummy one\n\t\t\treturn this.nationalPrefixFormattingRule() !== '$1' &&\n\t\t\t// Check that national prefix formatting rule actually has national prefix digit(s)\n\t\t\t/\\d/.test(this.nationalPrefixFormattingRule().replace('$1', ''));\n\t\t}\n\t}, {\n\t\tkey: 'internationalFormat',\n\t\tvalue: function internationalFormat() {\n\t\t\treturn this._format[5] || this.format();\n\t\t}\n\t}]);\n\n\treturn Format;\n}();\n\nvar Type = function () {\n\tfunction Type(type, metadata) {\n\t\t_classCallCheck(this, Type);\n\n\t\tthis.type = type;\n\t\tthis.metadata = metadata;\n\t}\n\n\t_createClass(Type, [{\n\t\tkey: 'pattern',\n\t\tvalue: function pattern() {\n\t\t\tif (this.metadata.v1) return this.type;\n\t\t\treturn this.type[0];\n\t\t}\n\t}, {\n\t\tkey: 'possibleLengths',\n\t\tvalue: function possibleLengths() {\n\t\t\tif (this.metadata.v1) return;\n\t\t\treturn this.type[1] || this.metadata.possibleLengths();\n\t\t}\n\t}]);\n\n\treturn Type;\n}();\n\nfunction getType(types, type) {\n\tswitch (type) {\n\t\tcase 'FIXED_LINE':\n\t\t\treturn types[0];\n\t\tcase 'MOBILE':\n\t\t\treturn types[1];\n\t\tcase 'TOLL_FREE':\n\t\t\treturn types[2];\n\t\tcase 'PREMIUM_RATE':\n\t\t\treturn types[3];\n\t\tcase 'PERSONAL_NUMBER':\n\t\t\treturn types[4];\n\t\tcase 'VOICEMAIL':\n\t\t\treturn types[5];\n\t\tcase 'UAN':\n\t\t\treturn types[6];\n\t\tcase 'PAGER':\n\t\t\treturn types[7];\n\t\tcase 'VOIP':\n\t\t\treturn types[8];\n\t\tcase 'SHARED_COST':\n\t\t\treturn types[9];\n\t}\n}\n\nexport function validateMetadata(metadata) {\n\tif (!metadata) {\n\t\tthrow new Error('[libphonenumber-js] `metadata` argument not passed. Check your arguments.');\n\t}\n\n\t// `country_phone_code_to_countries` was renamed to\n\t// `country_calling_codes` in `1.0.18`.\n\tif (!is_object(metadata) || !is_object(metadata.countries) || !is_object(metadata.country_calling_codes) && !is_object(metadata.country_phone_code_to_countries)) {\n\t\tthrow new Error('[libphonenumber-js] `metadata` argument was passed but it\\'s not a valid metadata. Must be an object having `.countries` and `.country_calling_codes` child object properties. Got ' + (is_object(metadata) ? 'an object of shape: { ' + Object.keys(metadata).join(', ') + ' }' : 'a ' + type_of(metadata) + ': ' + metadata) + '.');\n\t}\n}\n\n// Babel transforms `typeof` into some \"branches\"\n// so istanbul will show this as \"branch not covered\".\n/* istanbul ignore next */\nvar is_object = function is_object(_) {\n\treturn (typeof _ === 'undefined' ? 'undefined' : _typeof(_)) === 'object';\n};\n\n// Babel transforms `typeof` into some \"branches\"\n// so istanbul will show this as \"branch not covered\".\n/* istanbul ignore next */\nvar type_of = function type_of(_) {\n\treturn typeof _ === 'undefined' ? 'undefined' : _typeof(_);\n};\n\nexport function getExtPrefix(country, metadata) {\n\treturn new Metadata(metadata).country(country).ext();\n}\n//# sourceMappingURL=metadata.js.map","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n// This is a port of Google Android `libphonenumber`'s\n// `phonenumberutil.js` of 17th November, 2016.\n//\n// https://github.com/googlei18n/libphonenumber/commits/master/javascript/i18n/phonenumbers/phonenumberutil.js\n\nimport { parse_phone_number_digits, parse_national_number_and_country_calling_code, VALID_DIGITS, VALID_PUNCTUATION, PLUS_CHARS, MAX_LENGTH_FOR_NSN, matches_entirely, create_extension_pattern } from './common';\n\nimport Metadata from './metadata';\n\nimport get_number_type, { check_number_length_for_type } from './types';\n\nimport { parseRFC3966 } from './RFC3966';\n\n// The minimum length of the national significant number.\nvar MIN_LENGTH_FOR_NSN = 2;\n\n// We don't allow input strings for parsing to be longer than 250 chars.\n// This prevents malicious input from consuming CPU.\nvar MAX_INPUT_STRING_LENGTH = 250;\n\n/**\r\n * Regexp of all possible ways to write extensions, for use when parsing. This\r\n * will be run as a case-insensitive regexp match. Wide character versions are\r\n * also provided after each ASCII version. There are three regular expressions\r\n * here. The first covers RFC 3966 format, where the extension is added using\r\n * ';ext='. The second more generic one starts with optional white space and\r\n * ends with an optional full stop (.), followed by zero or more spaces/tabs\r\n * /commas and then the numbers themselves. The other one covers the special\r\n * case of American numbers where the extension is written with a hash at the\r\n * end, such as '- 503#'. Note that the only capturing groups should be around\r\n * the digits that you want to capture as part of the extension, or else parsing\r\n * will fail! We allow two options for representing the accented o - the\r\n * character itself, and one in the unicode decomposed form with the combining\r\n * acute accent.\r\n */\nvar EXTN_PATTERNS_FOR_PARSING = create_extension_pattern('parsing');\n\n// Regexp of all known extension prefixes used by different regions followed by\n// 1 or more valid digits, for use when parsing.\nvar EXTN_PATTERN = new RegExp('(?:' + EXTN_PATTERNS_FOR_PARSING + ')$', 'i');\n\n//  Regular expression of viable phone numbers. This is location independent.\n//  Checks we have at least three leading digits, and only valid punctuation,\n//  alpha characters and digits in the phone number. Does not include extension\n//  data. The symbol 'x' is allowed here as valid punctuation since it is often\n//  used as a placeholder for carrier codes, for example in Brazilian phone\n//  numbers. We also allow multiple '+' characters at the start.\n//\n//  Corresponds to the following:\n//  [digits]{minLengthNsn}|\n//  plus_sign*\n//  (([punctuation]|[star])*[digits]){3,}([punctuation]|[star]|[digits]|[alpha])*\n//\n//  The first reg-ex is to allow short numbers (two digits long) to be parsed if\n//  they are entered as \"15\" etc, but only if there is no punctuation in them.\n//  The second expression restricts the number of digits to three or more, but\n//  then allows them to be in international form, and to have alpha-characters\n//  and punctuation. We split up the two reg-exes here and combine them when\n//  creating the reg-ex VALID_PHONE_NUMBER_PATTERN itself so we can prefix it\n//  with ^ and append $ to each branch.\n//\n//  \"Note VALID_PUNCTUATION starts with a -,\n//   so must be the first in the range\" (c) Google devs.\n//  (wtf did they mean by saying that; probably nothing)\n//\nvar MIN_LENGTH_PHONE_NUMBER_PATTERN = '[' + VALID_DIGITS + ']{' + MIN_LENGTH_FOR_NSN + '}';\n//\n// And this is the second reg-exp:\n// (see MIN_LENGTH_PHONE_NUMBER_PATTERN for a full description of this reg-exp)\n//\nvar VALID_PHONE_NUMBER = '[' + PLUS_CHARS + ']{0,1}' + '(?:' + '[' + VALID_PUNCTUATION + ']*' + '[' + VALID_DIGITS + ']' + '){3,}' + '[' + VALID_PUNCTUATION + VALID_DIGITS + ']*';\n\n// The combined regular expression for valid phone numbers:\n//\nvar VALID_PHONE_NUMBER_PATTERN = new RegExp(\n// Either a short two-digit-only phone number\n'^' + MIN_LENGTH_PHONE_NUMBER_PATTERN + '$' + '|' +\n// Or a longer fully parsed phone number (min 3 characters)\n'^' + VALID_PHONE_NUMBER +\n// Phone number extensions\n'(?:' + EXTN_PATTERNS_FOR_PARSING + ')?' + '$', 'i');\n\n// This consists of the plus symbol, digits, and arabic-indic digits.\nvar PHONE_NUMBER_START_PATTERN = new RegExp('[' + PLUS_CHARS + VALID_DIGITS + ']');\n\n// Regular expression of trailing characters that we want to remove.\nvar AFTER_PHONE_NUMBER_END_PATTERN = new RegExp('[^' + VALID_DIGITS + ']+$');\n\nvar default_options = {\n\tcountry: {}\n\n\t// `options`:\n\t//  {\n\t//    country:\n\t//    {\n\t//      restrict - (a two-letter country code)\n\t//                 the phone number must be in this country\n\t//\n\t//      default - (a two-letter country code)\n\t//                default country to use for phone number parsing and validation\n\t//                (if no country code could be derived from the phone number)\n\t//    }\n\t//  }\n\t//\n\t// Returns `{ country, number }`\n\t//\n\t// Example use cases:\n\t//\n\t// ```js\n\t// parse('8 (800) 555-35-35', 'RU')\n\t// parse('8 (800) 555-35-35', 'RU', metadata)\n\t// parse('8 (800) 555-35-35', { country: { default: 'RU' } })\n\t// parse('8 (800) 555-35-35', { country: { default: 'RU' } }, metadata)\n\t// parse('+7 800 555 35 35')\n\t// parse('+7 800 555 35 35', metadata)\n\t// ```\n\t//\n};export default function parse(arg_1, arg_2, arg_3, arg_4) {\n\tvar _sort_out_arguments = sort_out_arguments(arg_1, arg_2, arg_3, arg_4),\n\t    text = _sort_out_arguments.text,\n\t    options = _sort_out_arguments.options,\n\t    metadata = _sort_out_arguments.metadata;\n\n\t// Validate `defaultCountry`.\n\n\n\tif (options.defaultCountry && !metadata.hasCountry(options.defaultCountry)) {\n\t\tthrow new Error('Unknown country: ' + options.defaultCountry);\n\t}\n\n\t// Parse the phone number.\n\n\tvar _parse_input = parse_input(text),\n\t    formatted_phone_number = _parse_input.number,\n\t    ext = _parse_input.ext;\n\n\t// If the phone number is not viable then return nothing.\n\n\n\tif (!formatted_phone_number) {\n\t\treturn {};\n\t}\n\n\tvar _parse_phone_number = parse_phone_number(formatted_phone_number, options.defaultCountry, metadata),\n\t    country = _parse_phone_number.country,\n\t    national_number = _parse_phone_number.national_number,\n\t    countryCallingCode = _parse_phone_number.countryCallingCode,\n\t    carrierCode = _parse_phone_number.carrierCode;\n\n\tif (!metadata.selectedCountry()) {\n\t\treturn options.extended ? { countryCallingCode: countryCallingCode } : {};\n\t}\n\n\t// Validate national (significant) number length.\n\t//\n\t// A sidenote:\n\t//\n\t// They say that sometimes national (significant) numbers\n\t// can be longer than `MAX_LENGTH_FOR_NSN` (e.g. in Germany).\n\t// https://github.com/googlei18n/libphonenumber/blob/7e1748645552da39c4e1ba731e47969d97bdb539/resources/phonenumber.proto#L36\n\t// Such numbers will just be discarded.\n\t//\n\tif (national_number.length < MIN_LENGTH_FOR_NSN || national_number.length > MAX_LENGTH_FOR_NSN) {\n\t\t// Google's demo just throws an error in this case.\n\t\treturn {};\n\t}\n\n\t// Check if national phone number pattern matches the number\n\t// National number pattern is different for each country,\n\t// even for those ones which are part of the \"NANPA\" group.\n\tvar valid = country && matches_entirely(national_number, new RegExp(metadata.nationalNumberPattern())) ? true : false;\n\n\tif (!options.extended) {\n\t\treturn valid ? result(country, national_number, ext) : {};\n\t}\n\n\treturn {\n\t\tcountry: country,\n\t\tcountryCallingCode: countryCallingCode,\n\t\tcarrierCode: carrierCode,\n\t\tvalid: valid,\n\t\tpossible: valid ? true : options.extended === true && metadata.possibleLengths() && is_possible_number(national_number, countryCallingCode !== undefined, metadata),\n\t\tphone: national_number,\n\t\text: ext\n\t};\n}\n\n// Checks to see if the string of characters could possibly be a phone number at\n// all. At the moment, checks to see that the string begins with at least 2\n// digits, ignoring any punctuation commonly found in phone numbers. This method\n// does not require the number to be normalized in advance - but does assume\n// that leading non-number symbols have been removed, such as by the method\n// `extract_possible_number`.\n//\nexport function is_viable_phone_number(number) {\n\treturn number.length >= MIN_LENGTH_FOR_NSN && matches_entirely(number, VALID_PHONE_NUMBER_PATTERN);\n}\n\n/**\r\n * Extracts a parseable phone number.\r\n * @param  {string} text - Input.\r\n * @return {string}.\r\n */\nexport function extract_formatted_phone_number(text) {\n\tif (!text || text.length > MAX_INPUT_STRING_LENGTH) {\n\t\treturn;\n\t}\n\n\t// Attempt to extract a possible number from the string passed in\n\n\tvar starts_at = text.search(PHONE_NUMBER_START_PATTERN);\n\n\tif (starts_at < 0) {\n\t\treturn;\n\t}\n\n\treturn text\n\t// Trim everything to the left of the phone number\n\t.slice(starts_at)\n\t// Remove trailing non-numerical characters\n\t.replace(AFTER_PHONE_NUMBER_END_PATTERN, '');\n}\n\n// Strips any national prefix (such as 0, 1) present in the number provided.\n// \"Carrier codes\" are only used  in Colombia and Brazil,\n// and only when dialing within those countries from a mobile phone to a fixed line number.\nexport function strip_national_prefix_and_carrier_code(number, metadata) {\n\tif (!number || !metadata.nationalPrefixForParsing()) {\n\t\treturn { number: number };\n\t}\n\n\t// Attempt to parse the first digits as a national prefix\n\tvar national_prefix_pattern = new RegExp('^(?:' + metadata.nationalPrefixForParsing() + ')');\n\tvar national_prefix_matcher = national_prefix_pattern.exec(number);\n\n\t// If no national prefix is present in the phone number,\n\t// but the national prefix is optional for this country,\n\t// then consider this phone number valid.\n\t//\n\t// Google's reference `libphonenumber` implementation\n\t// wouldn't recognize such phone numbers as valid,\n\t// but I think it would perfectly make sense\n\t// to consider such phone numbers as valid\n\t// because if a national phone number was originally\n\t// formatted without the national prefix\n\t// then it must be parseable back into the original national number.\n\t// In other words, `parse(format(number))`\n\t// must always be equal to `number`.\n\t//\n\tif (!national_prefix_matcher) {\n\t\treturn { number: number };\n\t}\n\n\tvar national_significant_number = void 0;\n\n\t// `national_prefix_for_parsing` capturing groups\n\t// (used only for really messy cases: Argentina, Brazil, Mexico, Somalia)\n\tvar captured_groups_count = national_prefix_matcher.length - 1;\n\n\t// If the national number tranformation is needed then do it.\n\t//\n\t// I don't know what did they mean by `&& national_prefix_matcher[captured_groups_count]`.\n\t// https://github.com/googlei18n/libphonenumber/blob/d978e59c2e6b1ddfb6816cd190e1b62d9a96bc3b/javascript/i18n/phonenumbers/phonenumberutil.js#L3885\n\t// https://github.com/googlei18n/libphonenumber/blob/d978e59c2e6b1ddfb6816cd190e1b62d9a96bc3b/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L2906\n\t//\n\tif (metadata.nationalPrefixTransformRule() && national_prefix_matcher[captured_groups_count]) {\n\t\tnational_significant_number = number.replace(national_prefix_pattern, metadata.nationalPrefixTransformRule());\n\t}\n\t// Else, no transformation is necessary,\n\t// and just strip the national prefix.\n\telse {\n\t\t\tnational_significant_number = number.slice(national_prefix_matcher[0].length);\n\t\t}\n\n\tvar carrierCode = void 0;\n\tif (captured_groups_count > 0) {\n\t\tcarrierCode = national_prefix_matcher[1];\n\t}\n\n\t// The following is done in `get_country_and_national_number_for_local_number()` instead.\n\t//\n\t// // Verify the parsed national (significant) number for this country\n\t// const national_number_rule = new RegExp(metadata.nationalNumberPattern())\n\t// //\n\t// // If the original number (before stripping national prefix) was viable,\n\t// // and the resultant number is not, then prefer the original phone number.\n\t// // This is because for some countries (e.g. Russia) the same digit could be both\n\t// // a national prefix and a leading digit of a valid national phone number,\n\t// // like `8` is the national prefix for Russia and both\n\t// // `8 800 555 35 35` and `800 555 35 35` are valid numbers.\n\t// if (matches_entirely(number, national_number_rule) &&\n\t// \t\t!matches_entirely(national_significant_number, national_number_rule))\n\t// {\n\t// \treturn number\n\t// }\n\n\t// Return the parsed national (significant) number\n\treturn {\n\t\tnumber: national_significant_number,\n\t\tcarrierCode: carrierCode\n\t};\n}\n\nexport function find_country_code(country_calling_code, national_phone_number, metadata) {\n\t// Is always non-empty, because `country_calling_code` is always valid\n\tvar possible_countries = metadata.countryCallingCodes()[country_calling_code];\n\n\t// If there's just one country corresponding to the country code,\n\t// then just return it, without further phone number digits validation.\n\tif (possible_countries.length === 1) {\n\t\treturn possible_countries[0];\n\t}\n\n\treturn _find_country_code(possible_countries, national_phone_number, metadata.metadata);\n}\n\n// Changes `metadata` `country`.\nfunction _find_country_code(possible_countries, national_phone_number, metadata) {\n\tmetadata = new Metadata(metadata);\n\n\tfor (var _iterator = possible_countries, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n\t\tvar _ref;\n\n\t\tif (_isArray) {\n\t\t\tif (_i >= _iterator.length) break;\n\t\t\t_ref = _iterator[_i++];\n\t\t} else {\n\t\t\t_i = _iterator.next();\n\t\t\tif (_i.done) break;\n\t\t\t_ref = _i.value;\n\t\t}\n\n\t\tvar country = _ref;\n\n\t\tmetadata.country(country);\n\n\t\t// Leading digits check would be the simplest one\n\t\tif (metadata.leadingDigits()) {\n\t\t\tif (national_phone_number && national_phone_number.search(metadata.leadingDigits()) === 0) {\n\t\t\t\treturn country;\n\t\t\t}\n\t\t}\n\t\t// Else perform full validation with all of those\n\t\t// fixed-line/mobile/etc regular expressions.\n\t\telse if (get_number_type({ phone: national_phone_number, country: country }, metadata.metadata)) {\n\t\t\t\treturn country;\n\t\t\t}\n\t}\n}\n\n// Sort out arguments\nfunction sort_out_arguments(arg_1, arg_2, arg_3, arg_4) {\n\tvar text = void 0;\n\tvar options = void 0;\n\tvar metadata = void 0;\n\n\t// If the phone number is passed as a string.\n\t// `parse('88005553535', ...)`.\n\tif (typeof arg_1 === 'string') {\n\t\ttext = arg_1;\n\t} else throw new TypeError('A phone number for parsing must be a string.');\n\n\t// If \"default country\" argument is being passed\n\t// then move it to `options`.\n\t// `parse('88005553535', 'RU', [options], metadata)`.\n\tif (typeof arg_2 === 'string') {\n\t\tif (arg_4) {\n\t\t\toptions = _extends({ defaultCountry: arg_2 }, arg_3);\n\t\t\tmetadata = arg_4;\n\t\t} else {\n\t\t\toptions = { defaultCountry: arg_2 };\n\t\t\tmetadata = arg_3;\n\t\t}\n\t}\n\t// No \"default country\" argument is being passed.\n\t// International phone number is passed.\n\t// `parse('+78005553535', [options], metadata)`.\n\telse {\n\t\t\tif (arg_3) {\n\t\t\t\toptions = arg_2;\n\t\t\t\tmetadata = arg_3;\n\t\t\t} else {\n\t\t\t\tmetadata = arg_2;\n\t\t\t}\n\t\t}\n\n\t// Apply default options.\n\tif (options) {\n\t\toptions = _extends({}, default_options, options);\n\t} else {\n\t\toptions = default_options;\n\t}\n\n\treturn { text: text, options: options, metadata: new Metadata(metadata) };\n}\n\n// Strips any extension (as in, the part of the number dialled after the call is\n// connected, usually indicated with extn, ext, x or similar) from the end of\n// the number, and returns it.\nfunction strip_extension(number) {\n\tvar start = number.search(EXTN_PATTERN);\n\tif (start < 0) {\n\t\treturn {};\n\t}\n\n\t// If we find a potential extension, and the number preceding this is a viable\n\t// number, we assume it is an extension.\n\tvar number_without_extension = number.slice(0, start);\n\t/* istanbul ignore if - seems a bit of a redundant check */\n\tif (!is_viable_phone_number(number_without_extension)) {\n\t\treturn {};\n\t}\n\n\tvar matches = number.match(EXTN_PATTERN);\n\tvar i = 1;\n\twhile (i < matches.length) {\n\t\tif (matches[i] != null && matches[i].length > 0) {\n\t\t\treturn {\n\t\t\t\tnumber: number_without_extension,\n\t\t\t\text: matches[i]\n\t\t\t};\n\t\t}\n\t\ti++;\n\t}\n}\n\nfunction is_possible_number(national_number, is_international, metadata) {\n\tswitch (check_number_length_for_type(national_number, undefined, metadata)) {\n\t\tcase 'IS_POSSIBLE':\n\t\t\treturn true;\n\t\t// case 'IS_POSSIBLE_LOCAL_ONLY':\n\t\t// \treturn !is_international\n\t\tdefault:\n\t\t\treturn false;\n\t}\n}\n\n/**\r\n * @param  {string} text - Input.\r\n * @return {object} `{ ?number, ?ext }`.\r\n */\nfunction parse_input(text) {\n\t// Parse RFC 3966 phone number URI.\n\tif (text && text.indexOf('tel:') === 0) {\n\t\treturn parseRFC3966(text);\n\t}\n\n\tvar number = extract_formatted_phone_number(text);\n\n\t// If the phone number is not viable, then abort.\n\tif (!number || !is_viable_phone_number(number)) {\n\t\treturn {};\n\t}\n\n\t// Attempt to parse extension first, since it doesn't require region-specific\n\t// data and we want to have the non-normalised number here.\n\tvar with_extension_stripped = strip_extension(number);\n\tif (with_extension_stripped.ext) {\n\t\treturn with_extension_stripped;\n\t}\n\n\treturn { number: number };\n}\n\n/**\r\n * Creates `parse()` result object.\r\n */\nfunction result(country, national_number, ext) {\n\tvar result = {\n\t\tcountry: country,\n\t\tphone: national_number\n\t};\n\n\tif (ext) {\n\t\tresult.ext = ext;\n\t}\n\n\treturn result;\n}\n\n/**\r\n * Parses a viable phone number.\r\n * Returns `{ country, countryCallingCode, national_number }`.\r\n */\nfunction parse_phone_number(formatted_phone_number, default_country, metadata) {\n\tvar _parse_national_numbe = parse_national_number_and_country_calling_code(formatted_phone_number, default_country, metadata),\n\t    countryCallingCode = _parse_national_numbe.countryCallingCode,\n\t    number = _parse_national_numbe.number;\n\n\tif (!number) {\n\t\treturn { countryCallingCode: countryCallingCode };\n\t}\n\n\tvar country = void 0;\n\n\t// Attempt to extract country from international phone number.\n\tif (countryCallingCode) {\n\t\t// Sometimes there are several countries\n\t\t// corresponding to the same country phone code\n\t\t// (e.g. NANPA countries all having `1` country phone code).\n\t\t// Therefore, to reliably determine the exact country,\n\t\t// national (significant) number should have been parsed first.\n\t\t//\n\t\t// When `metadata.json` is generated, all \"ambiguous\" country phone codes\n\t\t// get their countries populated with the full set of\n\t\t// \"phone number type\" regular expressions.\n\t\t//\n\t\tcountry = find_country_code(countryCallingCode, number, metadata);\n\n\t\tif (country) {\n\t\t\tmetadata.country(country);\n\t\t} else {\n\t\t\t// Formatting information for regions which share\n\t\t\t// a country calling code is contained by only one region\n\t\t\t// for performance reasons. For example, for NANPA region\n\t\t\t// (\"North American Numbering Plan Administration\",\n\t\t\t//  which includes USA, Canada, Cayman Islands, Bahamas, etc)\n\t\t\t// it will be contained in the metadata for `US`.\n\t\t\tmetadata.chooseCountryByCountryCallingCode(countryCallingCode);\n\t\t}\n\t} else if (default_country) {\n\t\tcountry = default_country;\n\t\tmetadata.country(country);\n\t\tcountryCallingCode = metadata.countryCallingCode();\n\t} else return {};\n\n\t// Parsing national prefixes and carrier codes\n\t// is only required for local phone numbers\n\t// but some people don't understand that\n\t// and sometimes write international phone numbers\n\t// with national prefixes (or maybe even carrier codes).\n\t// http://ucken.blogspot.ru/2016/03/trunk-prefixes-in-skype4b.html\n\t// Google's original library forgives such mistakes\n\t// and so does this library, because it has been requested:\n\t// https://github.com/catamphetamine/libphonenumber-js/issues/127\n\n\tvar _parse_national_numbe2 = parse_national_number(number, metadata),\n\t    national_number = _parse_national_numbe2.national_number,\n\t    carrier_code = _parse_national_numbe2.carrier_code;\n\n\treturn {\n\t\tcountry: country,\n\t\tcountryCallingCode: countryCallingCode,\n\t\tnational_number: national_number,\n\t\tcarrierCode: carrier_code\n\t};\n}\n\nfunction parse_national_number(number, metadata) {\n\tvar national_number = parse_phone_number_digits(number);\n\tvar carrier_code = void 0;\n\n\t// Only strip national prefixes for non-international phone numbers\n\t// because national prefixes can't be present in international phone numbers.\n\t// Otherwise, while forgiving, it would parse a NANPA number `+1 1877 215 5230`\n\t// first to `1877 215 5230` and then, stripping the leading `1`, to `877 215 5230`,\n\t// and then it would assume that's a valid number which it isn't.\n\t// So no forgiveness for grandmas here.\n\t// The issue asking for this fix:\n\t// https://github.com/catamphetamine/libphonenumber-js/issues/159\n\n\tvar _strip_national_prefi = strip_national_prefix_and_carrier_code(national_number, metadata),\n\t    potential_national_number = _strip_national_prefi.number,\n\t    carrierCode = _strip_national_prefi.carrierCode;\n\n\t// If metadata has \"possible lengths\" then employ the new algorythm.\n\n\n\tif (metadata.possibleLengths()) {\n\t\t// We require that the NSN remaining after stripping the national prefix and\n\t\t// carrier code be long enough to be a possible length for the region.\n\t\t// Otherwise, we don't do the stripping, since the original number could be\n\t\t// a valid short number.\n\t\tswitch (check_number_length_for_type(potential_national_number, undefined, metadata)) {\n\t\t\tcase 'TOO_SHORT':\n\t\t\t// case 'IS_POSSIBLE_LOCAL_ONLY':\n\t\t\tcase 'INVALID_LENGTH':\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tnational_number = potential_national_number;\n\t\t\t\tcarrier_code = carrierCode;\n\t\t}\n\t} else {\n\t\t// If the original number (before stripping national prefix) was viable,\n\t\t// and the resultant number is not, then prefer the original phone number.\n\t\t// This is because for some countries (e.g. Russia) the same digit could be both\n\t\t// a national prefix and a leading digit of a valid national phone number,\n\t\t// like `8` is the national prefix for Russia and both\n\t\t// `8 800 555 35 35` and `800 555 35 35` are valid numbers.\n\t\tif (matches_entirely(national_number, metadata.nationalNumberPattern()) && !matches_entirely(potential_national_number, metadata.nationalNumberPattern())) {\n\t\t\t// Keep the number without stripping national prefix.\n\t\t} else {\n\t\t\tnational_number = potential_national_number;\n\t\t\tcarrier_code = carrierCode;\n\t\t}\n\t}\n\n\treturn {\n\t\tnational_number: national_number,\n\t\tcarrier_code: carrier_code\n\t};\n}\n\n// Determines the country for a given (possibly incomplete) phone number.\n// export function get_country_from_phone_number(number, metadata)\n// {\n// \treturn parse_phone_number(number, null, metadata).country\n// }\n//# sourceMappingURL=parse.js.map","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nimport parse, { is_viable_phone_number } from './parse';\n\nimport { matches_entirely } from './common';\n\nimport Metadata from './metadata';\n\nvar non_fixed_line_types = ['MOBILE', 'PREMIUM_RATE', 'TOLL_FREE', 'SHARED_COST', 'VOIP', 'PERSONAL_NUMBER', 'PAGER', 'UAN', 'VOICEMAIL'];\n\n// Finds out national phone number type (fixed line, mobile, etc)\nexport default function get_number_type(arg_1, arg_2, arg_3) {\n\tvar _sort_out_arguments = sort_out_arguments(arg_1, arg_2, arg_3),\n\t    input = _sort_out_arguments.input,\n\t    metadata = _sort_out_arguments.metadata;\n\n\t// When no input was passed\n\n\n\tif (!input) {\n\t\treturn;\n\t}\n\n\t// When `parse()` returned `{}`\n\t// meaning that the phone number is not a valid one.\n\tif (!input.country) {\n\t\treturn;\n\t}\n\n\tif (!metadata.hasCountry(input.country)) {\n\t\tthrow new Error('Unknown country: ' + input.country);\n\t}\n\n\tvar national_number = input.phone;\n\tmetadata.country(input.country);\n\n\t// The following is copy-pasted from the original function:\n\t// https://github.com/googlei18n/libphonenumber/blob/3ea547d4fbaa2d0b67588904dfa5d3f2557c27ff/javascript/i18n/phonenumbers/phonenumberutil.js#L2835\n\n\t// Is this national number even valid for this country\n\tif (!matches_entirely(national_number, metadata.nationalNumberPattern())) {\n\t\treturn;\n\t}\n\n\t// Is it fixed line number\n\tif (is_of_type(national_number, 'FIXED_LINE', metadata)) {\n\t\t// Because duplicate regular expressions are removed\n\t\t// to reduce metadata size, if \"mobile\" pattern is \"\"\n\t\t// then it means it was removed due to being a duplicate of the fixed-line pattern.\n\t\t//\n\t\tif (metadata.type('MOBILE') && metadata.type('MOBILE').pattern() === '') {\n\t\t\treturn 'FIXED_LINE_OR_MOBILE';\n\t\t}\n\n\t\t// v1 metadata.\n\t\t// Legacy.\n\t\t// Deprecated.\n\t\tif (!metadata.type('MOBILE')) {\n\t\t\treturn 'FIXED_LINE_OR_MOBILE';\n\t\t}\n\n\t\t// Check if the number happens to qualify as both fixed line and mobile.\n\t\t// (no such country in the minimal metadata set)\n\t\t/* istanbul ignore if */\n\t\tif (is_of_type(national_number, 'MOBILE', metadata)) {\n\t\t\treturn 'FIXED_LINE_OR_MOBILE';\n\t\t}\n\n\t\treturn 'FIXED_LINE';\n\t}\n\n\tfor (var _iterator = non_fixed_line_types, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n\t\tvar _ref;\n\n\t\tif (_isArray) {\n\t\t\tif (_i >= _iterator.length) break;\n\t\t\t_ref = _iterator[_i++];\n\t\t} else {\n\t\t\t_i = _iterator.next();\n\t\t\tif (_i.done) break;\n\t\t\t_ref = _i.value;\n\t\t}\n\n\t\tvar _type = _ref;\n\n\t\tif (is_of_type(national_number, _type, metadata)) {\n\t\t\treturn _type;\n\t\t}\n\t}\n}\n\nexport function is_of_type(national_number, type, metadata) {\n\ttype = metadata.type(type);\n\n\tif (!type || !type.pattern()) {\n\t\treturn false;\n\t}\n\n\t// Check if any possible number lengths are present;\n\t// if so, we use them to avoid checking\n\t// the validation pattern if they don't match.\n\t// If they are absent, this means they match\n\t// the general description, which we have\n\t// already checked before a specific number type.\n\tif (type.possibleLengths() && type.possibleLengths().indexOf(national_number.length) < 0) {\n\t\treturn false;\n\t}\n\n\treturn matches_entirely(national_number, type.pattern());\n}\n\n// Sort out arguments\nexport function sort_out_arguments(arg_1, arg_2, arg_3) {\n\tvar input = void 0;\n\tvar metadata = void 0;\n\n\t// If the phone number is passed as a string.\n\t// `getNumberType('88005553535', ...)`.\n\tif (typeof arg_1 === 'string') {\n\t\t// If \"resrict country\" argument is being passed\n\t\t// then convert it to an `options` object.\n\t\t// `getNumberType('88005553535', 'RU', metadata)`.\n\t\tif (typeof arg_2 === 'string' || arg_2 === undefined) {\n\t\t\tmetadata = arg_3;\n\n\t\t\t// `parse` extracts phone numbers from raw text,\n\t\t\t// therefore it will cut off all \"garbage\" characters,\n\t\t\t// while this `validate` function needs to verify\n\t\t\t// that the phone number contains no \"garbage\"\n\t\t\t// therefore the explicit `is_viable_phone_number` check.\n\t\t\tif (is_viable_phone_number(arg_1)) {\n\t\t\t\tinput = parse(arg_1, arg_2, metadata);\n\t\t\t}\n\t\t}\n\t\t// No \"resrict country\" argument is being passed.\n\t\t// International phone number is passed.\n\t\t// `getNumberType('+78005553535', metadata)`.\n\t\telse {\n\t\t\t\tmetadata = arg_2;\n\n\t\t\t\t// `parse` extracts phone numbers from raw text,\n\t\t\t\t// therefore it will cut off all \"garbage\" characters,\n\t\t\t\t// while this `validate` function needs to verify\n\t\t\t\t// that the phone number contains no \"garbage\"\n\t\t\t\t// therefore the explicit `is_viable_phone_number` check.\n\t\t\t\tif (is_viable_phone_number(arg_1)) {\n\t\t\t\t\tinput = parse(arg_1, metadata);\n\t\t\t\t}\n\t\t\t}\n\t}\n\t// If the phone number is passed as a parsed phone number.\n\t// `getNumberType({ phone: '88005553535', country: 'RU' }, ...)`.\n\telse if (is_object(arg_1) && typeof arg_1.phone === 'string') {\n\t\t\t// The `arg_1` must be a valid phone number\n\t\t\t// as a whole, not just a part of it which gets parsed here.\n\t\t\tif (is_viable_phone_number(arg_1.phone)) {\n\t\t\t\tinput = arg_1;\n\t\t\t}\n\n\t\t\tmetadata = arg_2;\n\t\t} else throw new TypeError('A phone number must either be a string or an object of shape { phone, [country] }.');\n\n\treturn { input: input, metadata: new Metadata(metadata) };\n}\n\n// Should only be called for the \"new\" metadata which has \"possible lengths\".\nexport function check_number_length_for_type(national_number, type, metadata) {\n\tvar type_info = metadata.type(type);\n\n\t// There should always be \"<possiblePengths/>\" set for every type element.\n\t// This is declared in the XML schema.\n\t// For size efficiency, where a sub-description (e.g. fixed-line)\n\t// has the same \"<possiblePengths/>\" as the \"general description\", this is missing,\n\t// so we fall back to the \"general description\". Where no numbers of the type\n\t// exist at all, there is one possible length (-1) which is guaranteed\n\t// not to match the length of any real phone number.\n\tvar possible_lengths = type_info && type_info.possibleLengths() || metadata.possibleLengths();\n\t// let local_lengths    = type_info && type.possibleLengthsLocal() || metadata.possibleLengthsLocal()\n\n\tif (type === 'FIXED_LINE_OR_MOBILE') {\n\t\t// No such country in metadata.\n\t\t/* istanbul ignore next */\n\t\tif (!metadata.type('FIXED_LINE')) {\n\t\t\t// The rare case has been encountered where no fixedLine data is available\n\t\t\t// (true for some non-geographical entities), so we just check mobile.\n\t\t\treturn test_number_length_for_type(national_number, 'MOBILE', metadata);\n\t\t}\n\n\t\tvar mobile_type = metadata.type('MOBILE');\n\n\t\tif (mobile_type) {\n\t\t\t// Merge the mobile data in if there was any. \"Concat\" creates a new\n\t\t\t// array, it doesn't edit possible_lengths in place, so we don't need a copy.\n\t\t\t// Note that when adding the possible lengths from mobile, we have\n\t\t\t// to again check they aren't empty since if they are this indicates\n\t\t\t// they are the same as the general desc and should be obtained from there.\n\t\t\tpossible_lengths = merge_arrays(possible_lengths, mobile_type.possibleLengths());\n\t\t\t// The current list is sorted; we need to merge in the new list and\n\t\t\t// re-sort (duplicates are okay). Sorting isn't so expensive because\n\t\t\t// the lists are very small.\n\n\t\t\t// if (local_lengths)\n\t\t\t// {\n\t\t\t// \tlocal_lengths = merge_arrays(local_lengths, mobile_type.possibleLengthsLocal())\n\t\t\t// }\n\t\t\t// else\n\t\t\t// {\n\t\t\t// \tlocal_lengths = mobile_type.possibleLengthsLocal()\n\t\t\t// }\n\t\t}\n\t}\n\t// If the type doesn't exist then return 'INVALID_LENGTH'.\n\telse if (type && !type_info) {\n\t\t\treturn 'INVALID_LENGTH';\n\t\t}\n\n\tvar actual_length = national_number.length;\n\n\t// // This is safe because there is never an overlap beween the possible lengths\n\t// // and the local-only lengths; this is checked at build time.\n\t// if (local_lengths && local_lengths.indexOf(national_number.length) >= 0)\n\t// {\n\t// \treturn 'IS_POSSIBLE_LOCAL_ONLY'\n\t// }\n\n\tvar minimum_length = possible_lengths[0];\n\n\tif (minimum_length === actual_length) {\n\t\treturn 'IS_POSSIBLE';\n\t}\n\n\tif (minimum_length > actual_length) {\n\t\treturn 'TOO_SHORT';\n\t}\n\n\tif (possible_lengths[possible_lengths.length - 1] < actual_length) {\n\t\treturn 'TOO_LONG';\n\t}\n\n\t// We skip the first element since we've already checked it.\n\treturn possible_lengths.indexOf(actual_length, 1) >= 0 ? 'IS_POSSIBLE' : 'INVALID_LENGTH';\n}\n\n// Babel transforms `typeof` into some \"branches\"\n// so istanbul will show this as \"branch not covered\".\n/* istanbul ignore next */\nvar is_object = function is_object(_) {\n\treturn (typeof _ === 'undefined' ? 'undefined' : _typeof(_)) === 'object';\n};\n\nexport function merge_arrays(a, b) {\n\tvar merged = a.slice();\n\n\tfor (var _iterator2 = b, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n\t\tvar _ref2;\n\n\t\tif (_isArray2) {\n\t\t\tif (_i2 >= _iterator2.length) break;\n\t\t\t_ref2 = _iterator2[_i2++];\n\t\t} else {\n\t\t\t_i2 = _iterator2.next();\n\t\t\tif (_i2.done) break;\n\t\t\t_ref2 = _i2.value;\n\t\t}\n\n\t\tvar element = _ref2;\n\n\t\tif (a.indexOf(element) < 0) {\n\t\t\tmerged.push(element);\n\t\t}\n\t}\n\n\treturn merged.sort(function (a, b) {\n\t\treturn a - b;\n\t});\n\n\t// ES6 version, requires Set polyfill.\n\t// let merged = new Set(a)\n\t// for (const element of b)\n\t// {\n\t// \tmerged.add(i)\n\t// }\n\t// return Array.from(merged).sort((a, b) => a - b)\n}\n//# sourceMappingURL=types.js.map","import parse, { is_viable_phone_number } from './parse';\nimport get_number_type, { sort_out_arguments } from './types';\n\n// Checks if a given phone number is valid\n//\n// Example use cases:\n//\n// ```js\n// is_valid('8005553535', 'RU')\n// is_valid('8005553535', 'RU', metadata)\n// is_valid({ phone: '8005553535', country: 'RU' })\n// is_valid({ phone: '8005553535', country: 'RU' }, metadata)\n// is_valid('+78005553535')\n// is_valid('+78005553535', metadata)\n// ```\n//\nexport default function is_valid(arg_1, arg_2, arg_3) {\n\tvar _sort_out_arguments = sort_out_arguments(arg_1, arg_2, arg_3),\n\t    input = _sort_out_arguments.input,\n\t    metadata = _sort_out_arguments.metadata;\n\n\tif (!input) {\n\t\treturn false;\n\t}\n\n\tif (!input.country) {\n\t\treturn false;\n\t}\n\n\tif (!metadata.hasCountry(input.country)) {\n\t\tthrow new Error('Unknown country: ' + input.country);\n\t}\n\n\tmetadata.country(input.country);\n\n\tif (metadata.hasTypes()) {\n\t\treturn get_number_type(input, metadata.metadata) !== undefined;\n\t}\n\n\treturn true;\n}\n//# sourceMappingURL=validate.js.map","import metadata from './metadata.min.json'\r\n\r\nimport parseNumberCustom from './es6/parse'\r\nimport formatNumberCustom from './es6/format'\r\nimport getNumberTypeCustom from './es6/types'\r\nimport isValidNumberCustom from './es6/validate'\r\nimport findPhoneNumbersCustom, { searchPhoneNumbers as searchPhoneNumbersCustom, PhoneNumberSearch as PhoneNumberSearchCustom } from './es6/findPhoneNumbers'\r\nimport AsYouTypeCustom from './es6/AsYouType'\r\nimport getCountryCallingCodeCustom from './es6/getCountryCallingCode'\r\nexport { default as Metadata } from './es6/metadata'\r\nimport { getExtPrefix as getExtPrefixCustom } from './es6/metadata'\r\nimport { parseRFC3966 as parseRFC3966Custom, formatRFC3966 as formatRFC3966Custom } from './es6/RFC3966'\r\n\r\nexport function parseNumber()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn parseNumberCustom.apply(this, parameters)\r\n}\r\n\r\n// Deprecated: remove `parse()` export in 2.0.0.\r\n// (renamed to `parseNumber()`)\r\nexport function parse()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn parseNumberCustom.apply(this, parameters)\r\n}\r\n\r\nexport function formatNumber()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn formatNumberCustom.apply(this, parameters)\r\n}\r\n\r\n// Deprecated: remove `format()` export in 2.0.0.\r\n// (renamed to `formatNumber()`)\r\nexport function format()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn formatNumberCustom.apply(this, parameters)\r\n}\r\n\r\nexport function getNumberType()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn getNumberTypeCustom.apply(this, parameters)\r\n}\r\n\r\nexport function isValidNumber()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn isValidNumberCustom.apply(this, parameters)\r\n}\r\n\r\nexport function findPhoneNumbers()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn findPhoneNumbersCustom.apply(this, parameters)\r\n}\r\n\r\nexport function searchPhoneNumbers()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn searchPhoneNumbersCustom.apply(this, parameters)\r\n}\r\n\r\nexport function PhoneNumberSearch(text, options)\r\n{\r\n\tPhoneNumberSearchCustom.call(this, text, options, metadata)\r\n}\r\n\r\nPhoneNumberSearch.prototype = Object.create(PhoneNumberSearchCustom.prototype, {})\r\nPhoneNumberSearch.prototype.constructor = PhoneNumberSearch\r\n\r\nexport function AsYouType(country)\r\n{\r\n\tAsYouTypeCustom.call(this, country, metadata)\r\n}\r\n\r\nAsYouType.prototype = Object.create(AsYouTypeCustom.prototype, {})\r\nAsYouType.prototype.constructor = AsYouType\r\n\r\nexport function getExtPrefix()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn getExtPrefixCustom.apply(this, parameters)\r\n}\r\n\r\nexport function parseRFC3966()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn parseRFC3966Custom.apply(this, parameters)\r\n}\r\n\r\nexport function formatRFC3966()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(metadata)\r\n\treturn formatRFC3966Custom.apply(this, parameters)\r\n}\r\n\r\n// Deprecated: remove DIGITS export in 2.0.0 (unused).\r\nexport { DIGIT_MAPPINGS as DIGITS } from './es6/common'\r\n\r\n// Deprecated: remove this in 2.0.0 and make `custom.js` in ES6\r\n// (the old `custom.js` becomes `custom.commonjs.js`).\r\nexport { default as parseCustom } from './es6/parse'\r\nexport { default as formatCustom } from './es6/format'\r\nexport { default as isValidNumberCustom }    from './es6/validate'\r\nexport { default as findPhoneNumbersCustom } from './es6/findPhoneNumbers'\r\nexport { searchPhoneNumbers as searchPhoneNumbersCustom } from './es6/findPhoneNumbers'\r\nexport { PhoneNumberSearch as PhoneNumberSearchCustom } from './es6/findPhoneNumbers'\r\nexport { default as getNumberTypeCustom }    from './es6/types'\r\nexport { default as getCountryCallingCodeCustom } from './es6/getCountryCallingCode'\r\n\r\nexport\r\n{\r\n\tdefault as AsYouTypeCustom,\r\n\t// `DIGIT_PLACEHOLDER` is used by `react-phone-number-input`.\r\n\tDIGIT_PLACEHOLDER\r\n}\r\nfrom './es6/AsYouType'\r\n\r\nexport function getCountryCallingCode(country)\r\n{\r\n\treturn getCountryCallingCodeCustom(country, metadata)\r\n}\r\n\r\n// `getPhoneCode` name is deprecated, use `getCountryCallingCode` instead.\r\nexport function getPhoneCode(country)\r\n{\r\n\treturn getCountryCallingCode(country)\r\n}\r\n\r\n// `getPhoneCodeCustom` name is deprecated, use `getCountryCallingCodeCustom` instead.\r\nexport function getPhoneCodeCustom(country, metadata)\r\n{\r\n\treturn getCountryCallingCodeCustom(country, metadata)\r\n}","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require(\"@angular/core\");\nvar file_uploader_class_1 = require(\"./file-uploader.class\");\nvar FileDropDirective = (function () {\n    function FileDropDirective(element) {\n        this.fileOver = new core_1.EventEmitter();\n        this.onFileDrop = new core_1.EventEmitter();\n        this.element = element;\n    }\n    FileDropDirective.prototype.getOptions = function () {\n        return this.uploader.options;\n    };\n    FileDropDirective.prototype.getFilters = function () {\n        return {};\n    };\n    FileDropDirective.prototype.onDrop = function (event) {\n        var transfer = this._getTransfer(event);\n        if (!transfer) {\n            return;\n        }\n        var options = this.getOptions();\n        var filters = this.getFilters();\n        this._preventAndStop(event);\n        this.uploader.addToQueue(transfer.files, options, filters);\n        this.fileOver.emit(false);\n        this.onFileDrop.emit(transfer.files);\n    };\n    FileDropDirective.prototype.onDragOver = function (event) {\n        var transfer = this._getTransfer(event);\n        if (!this._haveFiles(transfer.types)) {\n            return;\n        }\n        transfer.dropEffect = 'copy';\n        this._preventAndStop(event);\n        this.fileOver.emit(true);\n    };\n    FileDropDirective.prototype.onDragLeave = function (event) {\n        if (this.element) {\n            if (event.currentTarget === this.element[0]) {\n                return;\n            }\n        }\n        this._preventAndStop(event);\n        this.fileOver.emit(false);\n    };\n    FileDropDirective.prototype._getTransfer = function (event) {\n        return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n    };\n    FileDropDirective.prototype._preventAndStop = function (event) {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n    FileDropDirective.prototype._haveFiles = function (types) {\n        if (!types) {\n            return false;\n        }\n        if (types.indexOf) {\n            return types.indexOf('Files') !== -1;\n        }\n        else if (types.contains) {\n            return types.contains('Files');\n        }\n        else {\n            return false;\n        }\n    };\n    return FileDropDirective;\n}());\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", file_uploader_class_1.FileUploader)\n], FileDropDirective.prototype, \"uploader\", void 0);\n__decorate([\n    core_1.Output(),\n    __metadata(\"design:type\", core_1.EventEmitter)\n], FileDropDirective.prototype, \"fileOver\", void 0);\n__decorate([\n    core_1.Output(),\n    __metadata(\"design:type\", core_1.EventEmitter)\n], FileDropDirective.prototype, \"onFileDrop\", void 0);\n__decorate([\n    core_1.HostListener('drop', ['$event']),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], FileDropDirective.prototype, \"onDrop\", null);\n__decorate([\n    core_1.HostListener('dragover', ['$event']),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], FileDropDirective.prototype, \"onDragOver\", null);\n__decorate([\n    core_1.HostListener('dragleave', ['$event']),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", Object)\n], FileDropDirective.prototype, \"onDragLeave\", null);\nFileDropDirective = __decorate([\n    core_1.Directive({ selector: '[ng2FileDrop]' }),\n    __metadata(\"design:paramtypes\", [core_1.ElementRef])\n], FileDropDirective);\nexports.FileDropDirective = FileDropDirective;\n","\"use strict\";\nvar file_like_object_class_1 = require(\"./file-like-object.class\");\nvar FileItem = (function () {\n    function FileItem(uploader, some, options) {\n        this.url = '/';\n        this.headers = [];\n        this.withCredentials = true;\n        this.formData = [];\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n        this.index = void 0;\n        this.uploader = uploader;\n        this.some = some;\n        this.options = options;\n        this.file = new file_like_object_class_1.FileLikeObject(some);\n        this._file = some;\n        if (uploader.options) {\n            this.method = uploader.options.method || 'POST';\n            this.alias = uploader.options.itemAlias || 'file';\n        }\n        this.url = uploader.options.url;\n    }\n    FileItem.prototype.upload = function () {\n        try {\n            this.uploader.uploadItem(this);\n        }\n        catch (e) {\n            this.uploader._onCompleteItem(this, '', 0, {});\n            this.uploader._onErrorItem(this, '', 0, {});\n        }\n    };\n    FileItem.prototype.cancel = function () {\n        this.uploader.cancelItem(this);\n    };\n    FileItem.prototype.remove = function () {\n        this.uploader.removeFromQueue(this);\n    };\n    FileItem.prototype.onBeforeUpload = function () {\n        return void 0;\n    };\n    FileItem.prototype.onBuildForm = function (form) {\n        return { form: form };\n    };\n    FileItem.prototype.onProgress = function (progress) {\n        return { progress: progress };\n    };\n    FileItem.prototype.onSuccess = function (response, status, headers) {\n        return { response: response, status: status, headers: headers };\n    };\n    FileItem.prototype.onError = function (response, status, headers) {\n        return { response: response, status: status, headers: headers };\n    };\n    FileItem.prototype.onCancel = function (response, status, headers) {\n        return { response: response, status: status, headers: headers };\n    };\n    FileItem.prototype.onComplete = function (response, status, headers) {\n        return { response: response, status: status, headers: headers };\n    };\n    FileItem.prototype._onBeforeUpload = function () {\n        this.isReady = true;\n        this.isUploading = true;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n        this.onBeforeUpload();\n    };\n    FileItem.prototype._onBuildForm = function (form) {\n        this.onBuildForm(form);\n    };\n    FileItem.prototype._onProgress = function (progress) {\n        this.progress = progress;\n        this.onProgress(progress);\n    };\n    FileItem.prototype._onSuccess = function (response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = true;\n        this.isSuccess = true;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 100;\n        this.index = void 0;\n        this.onSuccess(response, status, headers);\n    };\n    FileItem.prototype._onError = function (response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = true;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = true;\n        this.progress = 0;\n        this.index = void 0;\n        this.onError(response, status, headers);\n    };\n    FileItem.prototype._onCancel = function (response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = true;\n        this.isError = false;\n        this.progress = 0;\n        this.index = void 0;\n        this.onCancel(response, status, headers);\n    };\n    FileItem.prototype._onComplete = function (response, status, headers) {\n        this.onComplete(response, status, headers);\n        if (this.uploader.options.removeAfterUpload) {\n            this.remove();\n        }\n    };\n    FileItem.prototype._prepareToUploading = function () {\n        this.index = this.index || ++this.uploader._nextIndex;\n        this.isReady = true;\n    };\n    return FileItem;\n}());\nexports.FileItem = FileItem;\n","\"use strict\";\nfunction isElement(node) {\n    return !!(node && (node.nodeName || node.prop && node.attr && node.find));\n}\nvar FileLikeObject = (function () {\n    function FileLikeObject(fileOrInput) {\n        this.rawFile = fileOrInput;\n        var isInput = isElement(fileOrInput);\n        var fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\n        var postfix = typeof fakePathOrObject === 'string' ? 'FakePath' : 'Object';\n        var method = '_createFrom' + postfix;\n        this[method](fakePathOrObject);\n    }\n    FileLikeObject.prototype._createFromFakePath = function (path) {\n        this.lastModifiedDate = void 0;\n        this.size = void 0;\n        this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\n        this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n    };\n    FileLikeObject.prototype._createFromObject = function (object) {\n        this.size = object.size;\n        this.type = object.type;\n        this.name = object.name;\n    };\n    return FileLikeObject;\n}());\nexports.FileLikeObject = FileLikeObject;\n","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require(\"@angular/core\");\nvar file_uploader_class_1 = require(\"./file-uploader.class\");\nvar FileSelectDirective = (function () {\n    function FileSelectDirective(element) {\n        this.onFileSelected = new core_1.EventEmitter();\n        this.element = element;\n    }\n    FileSelectDirective.prototype.getOptions = function () {\n        return this.uploader.options;\n    };\n    FileSelectDirective.prototype.getFilters = function () {\n        return {};\n    };\n    FileSelectDirective.prototype.isEmptyAfterSelection = function () {\n        return !!this.element.nativeElement.attributes.multiple;\n    };\n    FileSelectDirective.prototype.onChange = function () {\n        var files = this.element.nativeElement.files;\n        var options = this.getOptions();\n        var filters = this.getFilters();\n        this.uploader.addToQueue(files, options, filters);\n        this.onFileSelected.emit(files);\n        if (this.isEmptyAfterSelection()) {\n            this.element.nativeElement.value = '';\n        }\n    };\n    return FileSelectDirective;\n}());\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", file_uploader_class_1.FileUploader)\n], FileSelectDirective.prototype, \"uploader\", void 0);\n__decorate([\n    core_1.Output(),\n    __metadata(\"design:type\", core_1.EventEmitter)\n], FileSelectDirective.prototype, \"onFileSelected\", void 0);\n__decorate([\n    core_1.HostListener('change'),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", Object)\n], FileSelectDirective.prototype, \"onChange\", null);\nFileSelectDirective = __decorate([\n    core_1.Directive({ selector: '[ng2FileSelect]' }),\n    __metadata(\"design:paramtypes\", [core_1.ElementRef])\n], FileSelectDirective);\nexports.FileSelectDirective = FileSelectDirective;\n","\"use strict\";\nvar FileType = (function () {\n    function FileType() {\n    }\n    FileType.getMimeClass = function (file) {\n        var mimeClass = 'application';\n        if (this.mime_psd.indexOf(file.type) !== -1) {\n            mimeClass = 'image';\n        }\n        else if (file.type.match('image.*')) {\n            mimeClass = 'image';\n        }\n        else if (file.type.match('video.*')) {\n            mimeClass = 'video';\n        }\n        else if (file.type.match('audio.*')) {\n            mimeClass = 'audio';\n        }\n        else if (file.type === 'application/pdf') {\n            mimeClass = 'pdf';\n        }\n        else if (this.mime_compress.indexOf(file.type) !== -1) {\n            mimeClass = 'compress';\n        }\n        else if (this.mime_doc.indexOf(file.type) !== -1) {\n            mimeClass = 'doc';\n        }\n        else if (this.mime_xsl.indexOf(file.type) !== -1) {\n            mimeClass = 'xls';\n        }\n        else if (this.mime_ppt.indexOf(file.type) !== -1) {\n            mimeClass = 'ppt';\n        }\n        if (mimeClass === 'application') {\n            mimeClass = this.fileTypeDetection(file.name);\n        }\n        return mimeClass;\n    };\n    FileType.fileTypeDetection = function (inputFilename) {\n        var types = {\n            'jpg': 'image',\n            'jpeg': 'image',\n            'tif': 'image',\n            'psd': 'image',\n            'bmp': 'image',\n            'png': 'image',\n            'nef': 'image',\n            'tiff': 'image',\n            'cr2': 'image',\n            'dwg': 'image',\n            'cdr': 'image',\n            'ai': 'image',\n            'indd': 'image',\n            'pin': 'image',\n            'cdp': 'image',\n            'skp': 'image',\n            'stp': 'image',\n            '3dm': 'image',\n            'mp3': 'audio',\n            'wav': 'audio',\n            'wma': 'audio',\n            'mod': 'audio',\n            'm4a': 'audio',\n            'compress': 'compress',\n            'zip': 'compress',\n            'rar': 'compress',\n            '7z': 'compress',\n            'lz': 'compress',\n            'z01': 'compress',\n            'pdf': 'pdf',\n            'xls': 'xls',\n            'xlsx': 'xls',\n            'ods': 'xls',\n            'mp4': 'video',\n            'avi': 'video',\n            'wmv': 'video',\n            'mpg': 'video',\n            'mts': 'video',\n            'flv': 'video',\n            '3gp': 'video',\n            'vob': 'video',\n            'm4v': 'video',\n            'mpeg': 'video',\n            'm2ts': 'video',\n            'mov': 'video',\n            'doc': 'doc',\n            'docx': 'doc',\n            'eps': 'doc',\n            'txt': 'doc',\n            'odt': 'doc',\n            'rtf': 'doc',\n            'ppt': 'ppt',\n            'pptx': 'ppt',\n            'pps': 'ppt',\n            'ppsx': 'ppt',\n            'odp': 'ppt'\n        };\n        var chunks = inputFilename.split('.');\n        if (chunks.length < 2) {\n            return 'application';\n        }\n        var extension = chunks[chunks.length - 1].toLowerCase();\n        if (types[extension] === undefined) {\n            return 'application';\n        }\n        else {\n            return types[extension];\n        }\n    };\n    return FileType;\n}());\n/*  MS office  */\nFileType.mime_doc = [\n    'application/msword',\n    'application/msword',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.template',\n    'application/vnd.ms-word.document.macroEnabled.12',\n    'application/vnd.ms-word.template.macroEnabled.12'\n];\nFileType.mime_xsl = [\n    'application/vnd.ms-excel',\n    'application/vnd.ms-excel',\n    'application/vnd.ms-excel',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.template',\n    'application/vnd.ms-excel.sheet.macroEnabled.12',\n    'application/vnd.ms-excel.template.macroEnabled.12',\n    'application/vnd.ms-excel.addin.macroEnabled.12',\n    'application/vnd.ms-excel.sheet.binary.macroEnabled.12'\n];\nFileType.mime_ppt = [\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n    'application/vnd.openxmlformats-officedocument.presentationml.template',\n    'application/vnd.openxmlformats-officedocument.presentationml.slideshow',\n    'application/vnd.ms-powerpoint.addin.macroEnabled.12',\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n    'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'\n];\n/* PSD */\nFileType.mime_psd = [\n    'image/photoshop',\n    'image/x-photoshop',\n    'image/psd',\n    'application/photoshop',\n    'application/psd',\n    'zz-application/zz-winassoc-psd'\n];\n/* Compressed files */\nFileType.mime_compress = [\n    'application/x-gtar',\n    'application/x-gcompress',\n    'application/compress',\n    'application/x-tar',\n    'application/x-rar-compressed',\n    'application/octet-stream'\n];\nexports.FileType = FileType;\n","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar common_1 = require(\"@angular/common\");\nvar core_1 = require(\"@angular/core\");\nvar file_drop_directive_1 = require(\"./file-drop.directive\");\nvar file_select_directive_1 = require(\"./file-select.directive\");\nvar FileUploadModule = (function () {\n    function FileUploadModule() {\n    }\n    return FileUploadModule;\n}());\nFileUploadModule = __decorate([\n    core_1.NgModule({\n        imports: [common_1.CommonModule],\n        declarations: [file_drop_directive_1.FileDropDirective, file_select_directive_1.FileSelectDirective],\n        exports: [file_drop_directive_1.FileDropDirective, file_select_directive_1.FileSelectDirective]\n    })\n], FileUploadModule);\nexports.FileUploadModule = FileUploadModule;\n","\"use strict\";\nvar core_1 = require(\"@angular/core\");\nvar file_like_object_class_1 = require(\"./file-like-object.class\");\nvar file_item_class_1 = require(\"./file-item.class\");\nvar file_type_class_1 = require(\"./file-type.class\");\nfunction isFile(value) {\n    return (File && value instanceof File);\n}\nvar FileUploader = (function () {\n    function FileUploader(options) {\n        this.isUploading = false;\n        this.queue = [];\n        this.progress = 0;\n        this._nextIndex = 0;\n        this.options = {\n            autoUpload: false,\n            isHTML5: true,\n            filters: [],\n            removeAfterUpload: false,\n            disableMultipart: false,\n            formatDataFunction: function (item) { return item._file; },\n            formatDataFunctionIsAsync: false\n        };\n        this.setOptions(options);\n        this.response = new core_1.EventEmitter();\n    }\n    FileUploader.prototype.setOptions = function (options) {\n        this.options = Object.assign(this.options, options);\n        this.authToken = this.options.authToken;\n        this.authTokenHeader = this.options.authTokenHeader || 'Authorization';\n        this.autoUpload = this.options.autoUpload;\n        this.options.filters.unshift({ name: 'queueLimit', fn: this._queueLimitFilter });\n        if (this.options.maxFileSize) {\n            this.options.filters.unshift({ name: 'fileSize', fn: this._fileSizeFilter });\n        }\n        if (this.options.allowedFileType) {\n            this.options.filters.unshift({ name: 'fileType', fn: this._fileTypeFilter });\n        }\n        if (this.options.allowedMimeType) {\n            this.options.filters.unshift({ name: 'mimeType', fn: this._mimeTypeFilter });\n        }\n        for (var i = 0; i < this.queue.length; i++) {\n            this.queue[i].url = this.options.url;\n        }\n    };\n    FileUploader.prototype.addToQueue = function (files, options, filters) {\n        var _this = this;\n        var list = [];\n        for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {\n            var file = files_1[_i];\n            list.push(file);\n        }\n        var arrayOfFilters = this._getFilters(filters);\n        var count = this.queue.length;\n        var addedFileItems = [];\n        list.map(function (some) {\n            if (!options) {\n                options = _this.options;\n            }\n            var temp = new file_like_object_class_1.FileLikeObject(some);\n            if (_this._isValidFile(temp, arrayOfFilters, options)) {\n                var fileItem = new file_item_class_1.FileItem(_this, some, options);\n                addedFileItems.push(fileItem);\n                _this.queue.push(fileItem);\n                _this._onAfterAddingFile(fileItem);\n            }\n            else {\n                var filter = arrayOfFilters[_this._failFilterIndex];\n                _this._onWhenAddingFileFailed(temp, filter, options);\n            }\n        });\n        if (this.queue.length !== count) {\n            this._onAfterAddingAll(addedFileItems);\n            this.progress = this._getTotalProgress();\n        }\n        this._render();\n        if (this.options.autoUpload) {\n            this.uploadAll();\n        }\n    };\n    FileUploader.prototype.removeFromQueue = function (value) {\n        var index = this.getIndexOfItem(value);\n        var item = this.queue[index];\n        if (item.isUploading) {\n            item.cancel();\n        }\n        this.queue.splice(index, 1);\n        this.progress = this._getTotalProgress();\n    };\n    FileUploader.prototype.clearQueue = function () {\n        while (this.queue.length) {\n            this.queue[0].remove();\n        }\n        this.progress = 0;\n    };\n    FileUploader.prototype.uploadItem = function (value) {\n        var index = this.getIndexOfItem(value);\n        var item = this.queue[index];\n        var transport = this.options.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n        item._prepareToUploading();\n        if (this.isUploading) {\n            return;\n        }\n        this.isUploading = true;\n        this[transport](item);\n    };\n    FileUploader.prototype.cancelItem = function (value) {\n        var index = this.getIndexOfItem(value);\n        var item = this.queue[index];\n        var prop = this.options.isHTML5 ? item._xhr : item._form;\n        if (item && item.isUploading) {\n            prop.abort();\n        }\n    };\n    FileUploader.prototype.uploadAll = function () {\n        var items = this.getNotUploadedItems().filter(function (item) { return !item.isUploading; });\n        if (!items.length) {\n            return;\n        }\n        items.map(function (item) { return item._prepareToUploading(); });\n        items[0].upload();\n    };\n    FileUploader.prototype.cancelAll = function () {\n        var items = this.getNotUploadedItems();\n        items.map(function (item) { return item.cancel(); });\n    };\n    FileUploader.prototype.isFile = function (value) {\n        return isFile(value);\n    };\n    FileUploader.prototype.isFileLikeObject = function (value) {\n        return value instanceof file_like_object_class_1.FileLikeObject;\n    };\n    FileUploader.prototype.getIndexOfItem = function (value) {\n        return typeof value === 'number' ? value : this.queue.indexOf(value);\n    };\n    FileUploader.prototype.getNotUploadedItems = function () {\n        return this.queue.filter(function (item) { return !item.isUploaded; });\n    };\n    FileUploader.prototype.getReadyItems = function () {\n        return this.queue\n            .filter(function (item) { return (item.isReady && !item.isUploading); })\n            .sort(function (item1, item2) { return item1.index - item2.index; });\n    };\n    FileUploader.prototype.destroy = function () {\n        return void 0;\n    };\n    FileUploader.prototype.onAfterAddingAll = function (fileItems) {\n        return { fileItems: fileItems };\n    };\n    FileUploader.prototype.onBuildItemForm = function (fileItem, form) {\n        return { fileItem: fileItem, form: form };\n    };\n    FileUploader.prototype.onAfterAddingFile = function (fileItem) {\n        return { fileItem: fileItem };\n    };\n    FileUploader.prototype.onWhenAddingFileFailed = function (item, filter, options) {\n        return { item: item, filter: filter, options: options };\n    };\n    FileUploader.prototype.onBeforeUploadItem = function (fileItem) {\n        return { fileItem: fileItem };\n    };\n    FileUploader.prototype.onProgressItem = function (fileItem, progress) {\n        return { fileItem: fileItem, progress: progress };\n    };\n    FileUploader.prototype.onProgressAll = function (progress) {\n        return { progress: progress };\n    };\n    FileUploader.prototype.onSuccessItem = function (item, response, status, headers) {\n        return { item: item, response: response, status: status, headers: headers };\n    };\n    FileUploader.prototype.onErrorItem = function (item, response, status, headers) {\n        return { item: item, response: response, status: status, headers: headers };\n    };\n    FileUploader.prototype.onCancelItem = function (item, response, status, headers) {\n        return { item: item, response: response, status: status, headers: headers };\n    };\n    FileUploader.prototype.onCompleteItem = function (item, response, status, headers) {\n        return { item: item, response: response, status: status, headers: headers };\n    };\n    FileUploader.prototype.onCompleteAll = function () {\n        return void 0;\n    };\n    FileUploader.prototype._mimeTypeFilter = function (item) {\n        return !(this.options.allowedMimeType && this.options.allowedMimeType.indexOf(item.type) === -1);\n    };\n    FileUploader.prototype._fileSizeFilter = function (item) {\n        return !(this.options.maxFileSize && item.size > this.options.maxFileSize);\n    };\n    FileUploader.prototype._fileTypeFilter = function (item) {\n        return !(this.options.allowedFileType &&\n            this.options.allowedFileType.indexOf(file_type_class_1.FileType.getMimeClass(item)) === -1);\n    };\n    FileUploader.prototype._onErrorItem = function (item, response, status, headers) {\n        item._onError(response, status, headers);\n        this.onErrorItem(item, response, status, headers);\n    };\n    FileUploader.prototype._onCompleteItem = function (item, response, status, headers) {\n        item._onComplete(response, status, headers);\n        this.onCompleteItem(item, response, status, headers);\n        var nextItem = this.getReadyItems()[0];\n        this.isUploading = false;\n        if (nextItem) {\n            nextItem.upload();\n            return;\n        }\n        this.onCompleteAll();\n        this.progress = this._getTotalProgress();\n        this._render();\n    };\n    FileUploader.prototype._headersGetter = function (parsedHeaders) {\n        return function (name) {\n            if (name) {\n                return parsedHeaders[name.toLowerCase()] || void 0;\n            }\n            return parsedHeaders;\n        };\n    };\n    FileUploader.prototype._xhrTransport = function (item) {\n        var _this = this;\n        var that = this;\n        var xhr = item._xhr = new XMLHttpRequest();\n        var sendable;\n        this._onBeforeUploadItem(item);\n        if (typeof item._file.size !== 'number') {\n            throw new TypeError('The file specified is no longer valid');\n        }\n        if (!this.options.disableMultipart) {\n            sendable = new FormData();\n            this._onBuildItemForm(item, sendable);\n            var appendFile = function () { return sendable.append(item.alias, item._file, item.file.name); };\n            if (!this.options.parametersBeforeFiles) {\n                appendFile();\n            }\n            // For AWS, Additional Parameters must come BEFORE Files\n            if (this.options.additionalParameter !== undefined) {\n                Object.keys(this.options.additionalParameter).forEach(function (key) {\n                    var paramVal = _this.options.additionalParameter[key];\n                    // Allow an additional parameter to include the filename\n                    if (typeof paramVal === 'string' && paramVal.indexOf('{{file_name}}') >= 0) {\n                        paramVal = paramVal.replace('{{file_name}}', item.file.name);\n                    }\n                    sendable.append(key, paramVal);\n                });\n            }\n            if (this.options.parametersBeforeFiles) {\n                appendFile();\n            }\n        }\n        else {\n            sendable = this.options.formatDataFunction(item);\n        }\n        xhr.upload.onprogress = function (event) {\n            var progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n            _this._onProgressItem(item, progress);\n        };\n        xhr.onload = function () {\n            var headers = _this._parseHeaders(xhr.getAllResponseHeaders());\n            var response = _this._transformResponse(xhr.response, headers);\n            var gist = _this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n            var method = '_on' + gist + 'Item';\n            _this[method](item, response, xhr.status, headers);\n            _this._onCompleteItem(item, response, xhr.status, headers);\n        };\n        xhr.onerror = function () {\n            var headers = _this._parseHeaders(xhr.getAllResponseHeaders());\n            var response = _this._transformResponse(xhr.response, headers);\n            _this._onErrorItem(item, response, xhr.status, headers);\n            _this._onCompleteItem(item, response, xhr.status, headers);\n        };\n        xhr.onabort = function () {\n            var headers = _this._parseHeaders(xhr.getAllResponseHeaders());\n            var response = _this._transformResponse(xhr.response, headers);\n            _this._onCancelItem(item, response, xhr.status, headers);\n            _this._onCompleteItem(item, response, xhr.status, headers);\n        };\n        xhr.open(item.method, item.url, true);\n        xhr.withCredentials = item.withCredentials;\n        if (this.options.headers) {\n            for (var _i = 0, _a = this.options.headers; _i < _a.length; _i++) {\n                var header = _a[_i];\n                xhr.setRequestHeader(header.name, header.value);\n            }\n        }\n        if (item.headers.length) {\n            for (var _b = 0, _c = item.headers; _b < _c.length; _b++) {\n                var header = _c[_b];\n                xhr.setRequestHeader(header.name, header.value);\n            }\n        }\n        if (this.authToken) {\n            xhr.setRequestHeader(this.authTokenHeader, this.authToken);\n        }\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                that.response.emit(xhr.responseText);\n            }\n        };\n        if (this.options.formatDataFunctionIsAsync) {\n            sendable.then(function (result) { return xhr.send(JSON.stringify(result)); });\n        }\n        else {\n            xhr.send(sendable);\n        }\n        this._render();\n    };\n    FileUploader.prototype._getTotalProgress = function (value) {\n        if (value === void 0) { value = 0; }\n        if (this.options.removeAfterUpload) {\n            return value;\n        }\n        var notUploaded = this.getNotUploadedItems().length;\n        var uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n        var ratio = 100 / this.queue.length;\n        var current = value * ratio / 100;\n        return Math.round(uploaded * ratio + current);\n    };\n    FileUploader.prototype._getFilters = function (filters) {\n        if (!filters) {\n            return this.options.filters;\n        }\n        if (Array.isArray(filters)) {\n            return filters;\n        }\n        if (typeof filters === 'string') {\n            var names_1 = filters.match(/[^\\s,]+/g);\n            return this.options.filters\n                .filter(function (filter) { return names_1.indexOf(filter.name) !== -1; });\n        }\n        return this.options.filters;\n    };\n    FileUploader.prototype._render = function () {\n        return void 0;\n    };\n    FileUploader.prototype._queueLimitFilter = function () {\n        return this.options.queueLimit === undefined || this.queue.length < this.options.queueLimit;\n    };\n    FileUploader.prototype._isValidFile = function (file, filters, options) {\n        var _this = this;\n        this._failFilterIndex = -1;\n        return !filters.length ? true : filters.every(function (filter) {\n            _this._failFilterIndex++;\n            return filter.fn.call(_this, file, options);\n        });\n    };\n    FileUploader.prototype._isSuccessCode = function (status) {\n        return (status >= 200 && status < 300) || status === 304;\n    };\n    FileUploader.prototype._transformResponse = function (response, headers) {\n        return response;\n    };\n    FileUploader.prototype._parseHeaders = function (headers) {\n        var parsed = {};\n        var key;\n        var val;\n        var i;\n        if (!headers) {\n            return parsed;\n        }\n        headers.split('\\n').map(function (line) {\n            i = line.indexOf(':');\n            key = line.slice(0, i).trim().toLowerCase();\n            val = line.slice(i + 1).trim();\n            if (key) {\n                parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n            }\n        });\n        return parsed;\n    };\n    FileUploader.prototype._onWhenAddingFileFailed = function (item, filter, options) {\n        this.onWhenAddingFileFailed(item, filter, options);\n    };\n    FileUploader.prototype._onAfterAddingFile = function (item) {\n        this.onAfterAddingFile(item);\n    };\n    FileUploader.prototype._onAfterAddingAll = function (items) {\n        this.onAfterAddingAll(items);\n    };\n    FileUploader.prototype._onBeforeUploadItem = function (item) {\n        item._onBeforeUpload();\n        this.onBeforeUploadItem(item);\n    };\n    FileUploader.prototype._onBuildItemForm = function (item, form) {\n        item._onBuildForm(form);\n        this.onBuildItemForm(item, form);\n    };\n    FileUploader.prototype._onProgressItem = function (item, progress) {\n        var total = this._getTotalProgress(progress);\n        this.progress = total;\n        item._onProgress(progress);\n        this.onProgressItem(item, progress);\n        this.onProgressAll(total);\n        this._render();\n    };\n    FileUploader.prototype._onSuccessItem = function (item, response, status, headers) {\n        item._onSuccess(response, status, headers);\n        this.onSuccessItem(item, response, status, headers);\n    };\n    FileUploader.prototype._onCancelItem = function (item, response, status, headers) {\n        item._onCancel(response, status, headers);\n        this.onCancelItem(item, response, status, headers);\n    };\n    return FileUploader;\n}());\nexports.FileUploader = FileUploader;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require(\"./file-upload/file-select.directive\"));\n__export(require(\"./file-upload/file-drop.directive\"));\n__export(require(\"./file-upload/file-uploader.class\"));\n__export(require(\"./file-upload/file-item.class\"));\n__export(require(\"./file-upload/file-like-object.class\"));\nvar file_upload_module_1 = require(\"./file-upload/file-upload.module\");\nexports.FileUploadModule = file_upload_module_1.FileUploadModule;\n","import { Observable, fromEvent as staticFromEvent } from 'rxjs';\nObservable.fromEvent = staticFromEvent;\n//# sourceMappingURL=fromEvent.js.map","import { Observable, merge as mergeStatic } from 'rxjs';\nObservable.merge = mergeStatic;\n//# sourceMappingURL=merge.js.map","import { Observable } from 'rxjs';\nimport { _catch } from '../../operator/catch';\nObservable.prototype.catch = _catch;\nObservable.prototype._catch = _catch;\n//# sourceMappingURL=catch.js.map","import { Observable } from 'rxjs';\nimport { debounceTime } from '../../operator/debounceTime';\nObservable.prototype.debounceTime = debounceTime;\n//# sourceMappingURL=debounceTime.js.map","import { Observable } from 'rxjs';\nimport { map } from '../../operator/map';\nObservable.prototype.map = map;\n//# sourceMappingURL=map.js.map","import { Observable } from 'rxjs';\nimport { startWith } from '../../operator/startWith';\nObservable.prototype.startWith = startWith;\n//# sourceMappingURL=startWith.js.map","// HACK: does nothing, because `toPromise` now lives on the `Observable` itself.\n// leaving this module here to prevent breakage.\n//# sourceMappingURL=toPromise.js.map","export { forkJoin } from 'rxjs';\n//# sourceMappingURL=forkJoin.js.map","import { catchError as higherOrder } from 'rxjs/operators';\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @method catch\n * @name catch\n * @owner Observable\n */\nexport function _catch(selector) {\n    return higherOrder(selector)(this);\n}\n//# sourceMappingURL=catch.js.map","import { asyncScheduler } from 'rxjs';\nimport { debounceTime as higherOrder } from 'rxjs/operators';\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link IScheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=asyncScheduler] The {@link SchedulerLike} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nexport function debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) { scheduler = asyncScheduler; }\n    return higherOrder(dueTime, scheduler)(this);\n}\n//# sourceMappingURL=debounceTime.js.map","import { map as higherOrderMap } from 'rxjs/operators';\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map(project, thisArg) {\n    return higherOrderMap(project, thisArg)(this);\n}\n//# sourceMappingURL=map.js.map","import { startWith as higherOrder } from 'rxjs/operators';\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\n * items emitted by the source Observable.\n *\n * <img src=\"./img/startWith.png\" width=\"100%\">\n *\n * @param {...T} values - Items you want the modified Observable to emit first.\n * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nexport function startWith() {\n    var array = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        array[_i] = arguments[_i];\n    }\n    return higherOrder.apply(void 0, array)(this);\n}\n//# sourceMappingURL=startWith.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.forkJoin = rxjs_1.forkJoin;\n//# sourceMappingURL=forkJoin.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"rxjs-compat/add/observable/forkJoin\");\n//# sourceMappingURL=forkJoin.js.map","module.exports = function cmp (a, b) {\n    var pa = a.split('.');\n    var pb = b.split('.');\n    for (var i = 0; i < 3; i++) {\n        var na = Number(pa[i]);\n        var nb = Number(pb[i]);\n        if (na > nb) return 1;\n        if (nb > na) return -1;\n        if (!isNaN(na) && isNaN(nb)) return 1;\n        if (isNaN(na) && !isNaN(nb)) return -1;\n    }\n    return 0;\n};\n","import { FormGroup } from '@angular/forms';\r\n\r\n// Generic validator for Reactive forms\r\n// Implemented as a class, not a service, so it can retain state for multiple forms.\r\nexport class GenericValidator {\r\n\r\n    // Provide the set of valid validation messages\r\n    // Stucture:\r\n    // controlName1: {\r\n    //     validationRuleName1: 'Validation Message.',\r\n    //     validationRuleName2: 'Validation Message.'\r\n    // },\r\n    // controlName2: {\r\n    //     validationRuleName1: 'Validation Message.',\r\n    //     validationRuleName2: 'Validation Message.'\r\n    // }\r\n    constructor(private validationMessages: { [key: string]: { [key: string]: string } }) { }\r\n\r\n    // Processes each control within a FormGroup\r\n    // And returns a set of validation messages to display\r\n    // Structure\r\n    // controlName1: 'Validation Message.',\r\n    // controlName2: 'Validation Message.'\r\n    public processMessages(container: FormGroup, kosulsuzGoster: boolean = false): { [key: string]: string } {\r\n        const messages: any = {};\r\n        for (const controlKey in container.controls) {\r\n            if (container.controls.hasOwnProperty(controlKey)) {\r\n                const c = container.controls[controlKey];\r\n                // If it is a FormGroup, process its child controls.\r\n                if (c instanceof FormGroup) {\r\n                    const childMessages = this.processMessages(c);\r\n                    Object.assign(messages, childMessages);\r\n                }\r\n                // Only validate if there are validation messages for the control\r\n                if (this.validationMessages[controlKey]) {\r\n                    messages[controlKey] = '';\r\n                    if ((c.dirty || c.touched || kosulsuzGoster) && c.errors) {\r\n                        Object.keys(c.errors).map(messageKey => {\r\n                            if (this.validationMessages[controlKey][messageKey]) {\r\n                                messages[controlKey] += this.validationMessages[controlKey][messageKey] + ' ';\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n        return messages;\r\n    }\r\n}\r\n","module.exports = \"<div id=\\\"reset-password\\\" fxLayout=\\\"column\\\" fusePerfectScrollbar>\\n\\n  <div id=\\\"reset-password-form-wrapper\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" *fuseIfOnDom [@animate]=\\\"{value:'*',params:{duration:'300ms',y:'100px'}}\\\">\\n\\n    <div id=\\\"reset-password-form\\\">\\n\\n      <div class=\\\"logo\\\">\\n        <img src=\\\"assets/images/logos/fuse.svg\\\">\\n      </div>\\n      \\n      <fuse-yukleniyor [yukleniyor]=\\\"yukleniyor\\\">\\n        <div *ngIf=\\\"!istekGonderildi\\\">\\n\\n\\n          <div class=\\\"title\\\">AKTİVASYON POSTASI GÖNDER</div>\\n          <form name=\\\"resetPasswordForm\\\" [formGroup]=\\\"ePostaForm\\\" novalidate (ngSubmit)=\\\"yenidenAktivasyonKoduPostala()\\\">\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"Eposta adresi\\\" formControlName=\\\"email\\\">\\n              <mat-error *ngIf=\\\"resetPasswordFormErrors.email.required\\\">\\n                Eposta gerekli\\n              </mat-error>\\n              <mat-error *ngIf=\\\"!resetPasswordFormErrors.email.required && resetPasswordFormErrors.email.email\\\">\\n                Eposta adresi yanlış. Lütfen geçerli bir adres girin.\\n              </mat-error>\\n            </mat-form-field>\\n\\n            <button mat-raised-button class=\\\"submit-button\\\" color=\\\"accent\\\" aria-label=\\\"RESET MY PASSWORD\\\" [disabled]=\\\"ePostaForm.invalid\\\">\\n              GÖNDER\\n            </button>\\n\\n          </form>\\n\\n\\n          <div class=\\\"login\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n\\n            <button mat-button color=\\\"accent\\\" type=\\\"button\\\" (click)=\\\"girisEkraniniAc()\\\">\\n              Giriş\\n            </button>\\n            <button mat-button color=\\\"accent\\\" type=\\\"button\\\" (click)=\\\"anaSayfayaGit()\\\">\\n              Ana Sayfa\\n            </button>\\n\\n          </div>\\n\\n        </div>\\n        <div *ngIf=\\\"istekGonderildi\\\">\\n          <h1>Aktivasyon linki gönderildi.</h1>\\n          <ul>\\n            <li>\\n              Lüfen posta kutunuzu kontrol edin.\\n            </li>\\n            <li>\\n              Size gönderilen epostayı bulun.\\n            </li>\\n            <li>\\n              Size gönderilen epostadaki aktivasyon kısayolunu tıklayın.\\n            </li>\\n            <li>\\n              Daha sonra sisteme giriş yapabilirsiniz.\\n            </li>\\n          </ul>\\n          <button mat-button color=\\\"accent\\\" type=\\\"button\\\" (click)=\\\"anaSayfayaGit()\\\">\\n            Ana Sayfa\\n          </button>\\n        </div>\\n      </fuse-yukleniyor>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n:host #reset-password {\\n  width: 100%;\\n  overflow: auto;\\n  background: url(\\\"/assets/images/backgrounds/dark-material-bg.jpg\\\") no-repeat;\\n  background-size: cover; }\\n:host #reset-password #reset-password-form-wrapper {\\n    flex: 1 0 auto;\\n    padding: 32px; }\\n@media screen and (max-width: 599px) {\\n      :host #reset-password #reset-password-form-wrapper {\\n        padding: 16px; } }\\n:host #reset-password #reset-password-form-wrapper #reset-password-form {\\n      width: 400px;\\n      max-width: 400px;\\n      padding: 32px;\\n      background: #FFFFFF;\\n      box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12); }\\n@media screen and (max-width: 599px) {\\n        :host #reset-password #reset-password-form-wrapper #reset-password-form {\\n          padding: 24px;\\n          width: 100%; } }\\n:host #reset-password #reset-password-form-wrapper #reset-password-form .logo {\\n        width: 128px;\\n        margin: 32px auto; }\\n:host #reset-password #reset-password-form-wrapper #reset-password-form .title {\\n        font-size: 20px;\\n        margin: 16px 0 32px 0;\\n        text-align: center; }\\n:host #reset-password #reset-password-form-wrapper #reset-password-form form {\\n        width: 100%;\\n        text-align: left; }\\n:host #reset-password #reset-password-form-wrapper #reset-password-form form mat-form-field {\\n          width: 100%; }\\n:host #reset-password #reset-password-form-wrapper #reset-password-form form .submit-button {\\n          width: 150px;\\n          margin: 16px auto;\\n          display: block;\\n          padding: 4px; }\\n@media screen and (max-width: 599px) {\\n            :host #reset-password #reset-password-form-wrapper #reset-password-form form .submit-button {\\n              width: 90%; } }\\n:host #reset-password #reset-password-form-wrapper #reset-password-form .login {\\n        margin: 32px auto 24px auto;\\n        width: 250px;\\n        font-weight: 500; }\\n:host #reset-password #reset-password-form-wrapper #reset-password-form .login .text {\\n          margin-right: 8px; }\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { FuseConfigService } from '@fuse/services/config.service';\n\nimport { Store } from '@ngrx/store';\nimport * as fromRootStore from '../../../../../../store/index';\nimport { Sonuc } from '../../../../../../models/sonuclar';\nimport { Router } from '@angular/router';\nimport { UyelikService } from '../../uyelik.service';\nimport { fuseAnimations } from '@fuse/animations';\nimport { SbMesajService } from '../../../../../../core/services/sb-mesaj.service';\n\n\n@Component({\n  selector: 'fuse-aktivasyon-epostasi',\n  templateUrl: './aktivasyon-epostasi.component.html',\n  styleUrls: ['./aktivasyon-epostasi.component.scss'],\n  animations: fuseAnimations\n})\nexport class AktivasyonEpostasiComponent implements OnInit, OnDestroy {\n\n  ePostaForm: FormGroup;\n  resetPasswordFormErrors: any;\n  istekGonderildi = false;\n  yukleniyor = false;\n  \n  constructor(\n    private fuseConfig: FuseConfigService,\n    private formBuilder: FormBuilder,\n    private mesajService: SbMesajService,\n    private uyelikService: UyelikService,\n    private router: Router,\n    private store: Store<fromRootStore.State>\n\n  ) {\n    // this.layout = this.fuseConfig.config;\n    this.fuseConfig.setConfig({\n      layout: {\n        navigation: 'none',\n        footer: 'none'\n      }\n    });\n\n    this.resetPasswordFormErrors = {\n      email: {}\n\n    };\n  }\n\n  ngOnInit() {\n    this.ePostaForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n    });\n\n    this.ePostaForm.valueChanges.subscribe(() => {\n      this.onResetPasswordFormValuesChanged();\n    });\n  }\n  ngOnDestroy() {\n    // this.fuseConfig.setConfig(this.layout);\n  }\n  onResetPasswordFormValuesChanged() {\n    for (const field in this.resetPasswordFormErrors) {\n      if (!this.resetPasswordFormErrors.hasOwnProperty(field)) {\n        continue;\n      }\n\n      // Clear previous errors\n      this.resetPasswordFormErrors[field] = {};\n\n      // Get the control\n      const control = this.ePostaForm.get(field);\n\n      if (control && control.dirty && !control.valid) {\n        this.resetPasswordFormErrors[field] = control.errors;\n      }\n    }\n  }\n\n  girisEkraniniAc() {\n\n    this.router.navigate(['/']);\n    this.store.dispatch(new fromRootStore.LoginRequired());\n  }\n  anaSayfayaGit() {\n\n    this.router.navigate(['/']);\n  }\n  yenidenAktivasyonKoduPostala() {\n\n    this.yukleniyor = true;\n    const eposta = this.ePostaForm.get('email').value;\n    this.uyelikService.hesapOnayKoduPostala(eposta).subscribe((sonuc: Sonuc) => {\n      this.istekGonderildi = sonuc.basarili;\n      if (sonuc.basarili) {\n        this.mesajService.goster('Eposta gönderildi!');\n      } else {\n        this.mesajService.hataStr('Eposta yanlış veya hesapta sorun var. Lütfen yetkililere başvurun!');\n      }\n    },\n      () => this.mesajService.goster('İşlem gerçekleşirken bir hata oluştu. Lütfen kısa bir süre sonra tekrar deneyin!'),\n      () => this.yukleniyor = false);\n\n  }\n}\n","import { Cinsiyet, KullaniciDetay } from '../../../../../models/kullanici';\r\nimport { KayitSonuc, ListeSonuc } from '../../../../../models/sonuclar';\r\n\r\nexport class ProfilimVeriSeti {\r\n    cinsiyetler: ListeSonuc<Cinsiyet>;\r\n    kullanici: KayitSonuc<KullaniciDetay>;\r\n\r\n}\r\n","import { ListeSonuc } from '../../../../../models/sonuclar';\r\nimport { Cinsiyet, KullaniciDetay } from '../../../../../models/kullanici';\r\n\r\nexport class UyelikBasvuruVeriSeti {\r\n    cinsiyetler: ListeSonuc<Cinsiyet>;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport class UyelikBasvuru {\r\n\r\n    constructor() {\r\n        this.sifre = '';\r\n    }\r\n    kullaniciAdi?: string;\r\n    sifre?: string;\r\n    unvan?: string;\r\n    ad?: string;\r\n    digerAd?: string;\r\n    soyad?: string;\r\n    cinsiyetNo?: string;\r\n    dogumTarihi: Date;\r\n    eposta?: string;\r\n    telefonNumarasi?: string;\r\n}\r\n","module.exports = \"<div *ngIf=\\\"!fotograflar\\\">\\n  Kullanıcının fotoğrafı yok!\\n</div>\\n\\n\\n\\n\\n<div *ngIf=\\\"fotograflar\\\" class=\\\"fotograflar\\\" fxLayout=\\\"row\\\" fxLayoutWrap=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"8px\\\">\\n  <div class=\\\"media\\\" *ngFor=\\\"let resim of fotograflar\\\">\\n\\n    <img class=\\\"preview\\\" [src]=\\\"resim.url\\\" title=\\\"{{resim.aciklama}}\\\">\\n    <div class=\\\"title\\\">\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n        <button mat-button class=\\\"mat-icon-button\\\">\\n          <mat-icon class=\\\"kirmizi\\\" *ngIf=\\\"resim.profilFotografi\\\" matTooltip=\\\"Bu fotoğraf sizin profil fotoğrafınızdır.\\\">favorite</mat-icon>\\n        </button>\\n\\n        <button *ngIf=\\\"!resim.profilFotografi\\\" mat-button class=\\\"mat-icon-button\\\" (click)=\\\"asilFotoYap(resim)\\\">\\n          <mat-icon class=\\\"beyaz\\\" matTooltip=\\\"Profil fotoğrafı bu olsun\\\">favorite_border</mat-icon>\\n        </button>\\n        <button *ngIf=\\\"!resim.profilFotografi\\\" mat-button class=\\\"mat-icon-button\\\" (click)=\\\"silmeOnayiIste(resim)\\\">\\n          <mat-icon class=\\\"beyaz\\\" matTooltip=\\\"Bu resmi sil\\\">delete</mat-icon>\\n        </button>\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"p-24\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutAlign=\\\"start stretch\\\" fxLayoutAlign.lt-md=\\\"start sretch\\\"\\n  fxLayoutGap=\\\"12px\\\">\\n  <mat-card *ngIf=\\\"uploader.queue?.length\\\" class=\\\"px-24\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start start\\\" fxLayoutGap=\\\"12px\\\">\\n    <span class=\\\"mat-title\\\">Yükleme Kuyruğu</span>\\n    <span class=\\\"mat-subheading-2\\\">Yüklenecek dosya sayısı: {{ uploader?.queue?.length }}</span>\\n\\n    <table class=\\\"table\\\" width=\\\"100%\\\">\\n      <thead>\\n        <tr>\\n          <th width=\\\"64%\\\">Ad</th>\\n          <th width=\\\"12%\\\" fxHide.lt-md>Boyut</th>\\n          <th width=\\\"12%\\\" fxHide.lt-md>Durum</th>\\n          <th width=\\\"12%\\\">İşlem</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let item of uploader.queue\\\">\\n          <td>\\n            <strong>{{ item?.file?.name }}</strong>\\n          </td>\\n          <td nowrap fxHide.lt-md>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\\n          <td class=\\\"text-center\\\" fxHide.lt-md>\\n            <span *ngIf=\\\"item.isSuccess\\\">\\n              <mat-icon>check</mat-icon>\\n            </span>\\n            <span *ngIf=\\\"item.isCancel\\\">\\n              <mat-icon>cancel</mat-icon>\\n            </span>\\n            <span *ngIf=\\\"item.isError\\\">\\n              <mat-icon>error</mat-icon>\\n            </span>\\n          </td>\\n          <td nowrap>\\n            <button mat-button class=\\\"mat-icon-button\\\" color=\\\"accent\\\" (click)=\\\"item.upload()\\\" [disabled]=\\\"item.isReady || item.isUploading || item.isSuccess\\\"\\n              matTooltip=\\\"Yükle\\\">\\n              <span class=\\\"glyphicon glyphicon-upload\\\"></span>\\n              <mat-icon>file_upload</mat-icon>\\n            </button>\\n            <button mat-button class=\\\"mat-icon-button\\\" (click)=\\\"item.cancel()\\\" *ngIf=\\\"item.isUploading\\\" matTooltip=\\\"İptal et\\\">\\n              <mat-icon>cancel</mat-icon>\\n            </button>\\n            <button mat-button class=\\\"mat-icon-button\\\" color=\\\"warn\\\" (click)=\\\"item.remove()\\\" matTooltip=\\\"Sil\\\">\\n              <mat-icon>delete</mat-icon>\\n            </button>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n\\n    <div style=\\\"width: 100%\\\">\\n      Kuyruk ilerleme durumu:\\n      <mat-progress-bar mode=\\\"determinate\\\" [value]=\\\"uploader.progress\\\" class=\\\"py-12\\\" color=\\\"accent\\\"></mat-progress-bar>\\n    </div>\\n    <mat-card-actions>\\n      <button mat-button color=\\\"accent\\\" (click)=\\\"uploader.uploadAll()\\\" *ngIf=\\\"uploader.getNotUploadedItems().length\\\">\\n        <span fxHide.lt-md>Tümünü Yükle</span>\\n        <mat-icon fxHide fxShow.lt-md matTooltip=\\\"Tüm dosyaları yükle\\\">publish</mat-icon>\\n      </button>\\n      <button mat-button color=\\\"warn\\\" (click)=\\\"uploader.cancelAll()\\\" *ngIf=\\\"uploader.isUploading\\\">\\n        <span fxHide.lt-md>Tümünü iptal et</span>\\n        <mat-icon fxHide fxShow.lt-md matTooltip=\\\"Tümünü iptal et\\\">pan_tool</mat-icon>\\n      </button>\\n      <button mat-button color=\\\"warn\\\" (click)=\\\"uploader.clearQueue()\\\" *ngIf=\\\"uploader.queue.length\\\">\\n        <span fxHide.lt-md>Tümünü Sil</span>\\n        <mat-icon fxHide fxShow.lt-md matTooltip=\\\"Tüm dosyaları sil\\\">delete_sweep</mat-icon>\\n      </button>\\n    </mat-card-actions>\\n  </mat-card>\\n  <mat-card class=\\\"px-12\\\" fxLayout=\\\"row\\\" fxFlex=\\\"auto\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"12px\\\">\\n    <div>\\n      <span class=\\\"mat-title\\\">Fotoğraf ekleyin</span>\\n      <div ng2FileDrop [ngClass]=\\\"{'nv-file-over': hasBaseDropZoneOver}\\\" (fileOver)=\\\"fileOverBase($event)\\\" [uploader]=\\\"uploader\\\"\\n        class=\\\"my-drop-zone\\\">\\n        Buraya sürükle bırak\\n      </div>\\n    </div>\\n    <div>\\n\\n      <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\n      <br/>\\n      <br/>\\n      <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" multiple />\\n    </div>\\n  </mat-card>\\n\\n\\n</div>\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n:host .fotograflar {\\n  padding: 8px;\\n  overflow-x: auto; }\\n:host .media {\\n  margin: 0 16px 16px 0;\\n  position: relative; }\\n:host .media .preview {\\n    width: 256px;\\n    height: 256px;\\n    min-width: 256px;\\n    min-height: 256px;\\n    display: block; }\\n:host .media .title {\\n    position: absolute;\\n    bottom: 0;\\n    left: 0;\\n    right: 0;\\n    z-index: 10;\\n    padding: 0 16px;\\n    height: 48px;\\n    line-height: 48px;\\n    background: rgba(130, 161, 169, 0.54);\\n    color: #FFF;\\n    font-size: 15px; }\\n:host .media .beyaz {\\n    color: white; }\\n:host .media .kirmizi {\\n    color: #AF373A; }\\n:host .media .title:hover {\\n    background: #a8b4b4; }\\n:host .my-drop-zone {\\n  background-color: #A8B4B4;\\n  border: dotted 2px #315474;\\n  height: 100px;\\n  width: 200px;\\n  margin-bottom: 12px;\\n  padding: 24px;\\n  padding-top: 36px; }\\n:host .nv-file-over {\\n  border: solid 2px #82A1A9;\\n  background-color: #315474;\\n  color: #82A1A9; }\\n:host input[type=file] {\\n  color: transparent; }\\n\"","\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { MatDialog } from '@angular/material';\nimport { Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs/Subscription';\nimport { KisiFoto } from '../../../../../../models/kullanici';\nimport { environment } from 'environments/environment';\nimport { SbMesajService } from '../../../../../../core/services/sb-mesaj.service';\n\nimport * as fromRootStore from '../../../../../../store/index';\nimport { FuseConfirmDialogComponent } from '@fuse/components/confirm-dialog/confirm-dialog.component';\n@Component({\n  selector: 'fuse-kullanici-fotograflari', \n  templateUrl: './kullanici-fotograflari.component.html',\n  styleUrls: ['./kullanici-fotograflari.component.scss']\n})\nexport class KullaniciFotograflariComponent implements OnInit {\n  @Input() fotograflar: KisiFoto[];\n  @Input() url: string;\n  @Output() profilFotografiYap = new EventEmitter<KisiFoto>();\n  @Output() fotoSil = new EventEmitter<number>();\n  @Output() fotografKaydedildi = new EventEmitter<KisiFoto>();\n\n  public uploader: FileUploader = new FileUploader({});\n  public hasBaseDropZoneOver = false;\n  public hasAnotherDropZoneOver = false;\n  baseUrl = environment.apiUrl;\n  authState$: Subscription;\n  kullaniciNo = 0;\n  token = '';\n  constructor(\n    private dialog: MatDialog,\n    private mesajService: SbMesajService,\n    private authStore: Store<fromRootStore.AuthState>) {\n    this.authState$ = this.authStore.select(fromRootStore.getAuthState).subscribe(authDurum => {\n      if (authDurum.kullaniciAdi) {\n        this.kullaniciNo = authDurum.kullaniciBilgi.id;\n      } else {\n        this.kullaniciNo = 0;\n      }\n      this.token = authDurum ? authDurum.tokenString : '';\n    });\n  }\n\n  ngOnInit() {\n    this.initializeUploader();\n  }\n  public fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  public fileOverAnother(e: any): void {\n    this.hasAnotherDropZoneOver = e;\n  }\n\n  initializeUploader() {\n    const maxFileSize = 10 * 1024 * 1024;\n    const queueLimit = 5;\n    const jeton = 'Bearer ' + this.token;\n    if (this.url == null) {\n      console.log('Url yok');\n      return;\n    }\n    this.uploader = new FileUploader({\n      url: `${this.baseUrl}/${this.url}`,\n      authToken: jeton,\n      isHTML5: true,\n      queueLimit: queueLimit,\n      allowedFileType: ['image'],\n      removeAfterUpload: false,\n      autoUpload: false,\n      maxFileSize: maxFileSize\n\n    });\n\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if (response) {\n        const res: KisiFoto = JSON.parse(response);\n        const foto = {\n          id: res.id,\n          url: res.url,\n          kisiNo: res.kisiNo,\n          aciklama: res.aciklama,\n          eklemeTarihi: res.eklenmeTarihi,\n          profilFotografi: res.profilFotografi\n        };\n        this.fotograflar.push(foto);\n        this.fotografKaydedildi.emit(foto);\n      }\n    };\n    this.uploader.onErrorItem = (item, response, status, headers) => {\n      this.uploader.cancelItem(item);\n      this.mesajService.hataStr('Fotoğraf yüklenemedi!');\n    };\n    this.uploader.onWhenAddingFileFailed = (item, filter, options) => {\n      let message = '';\n      switch (filter.name) {\n        case 'queueLimit':\n          message = 'Aynı anda en fazla 5 resim yükleyebilirsiniz!';\n          break;\n        case 'fileSize':\n          message = item.name + ' adlı resim ' +\n            this.formatBytes(item.size) + ' boyutunda enfazla ' + this.formatBytes(maxFileSize) + ' büyüklüğündeki resmlere izin verilmektedir.';\n          break;\n        default:\n          message = 'Resim yüklenirken bir hata oluştu!';\n          break;\n      }\n      this.mesajService.hataStr(message);\n    };\n    this.uploader.onCompleteAll = () => {\n      this.uploader.clearQueue();\n\n    };\n    this.uploader.onAfterAddingFile = (file: any) => { file.withCredentials = false; };\n  }\n  private formatBytes(bytes, decimals?) {\n    if (bytes === 0) {\n      return '0 Bytes';\n    }\n    const k = 1024,\n      dm = decimals || 2,\n      sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n      i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  }\n  asilFotoYap(foto: KisiFoto) {\n    this.profilFotografiYap.emit(foto);\n  }\n  silmeOnayiIste(foto: KisiFoto) {\n\n    const dialogRef = this.dialog.open(FuseConfirmDialogComponent, {\n      width: '600px',\n      height: '400',\n      data: {\n        onaybasligi: 'Silme onayı!',\n        onaymesaji: `<p>Bu fotoğrafı silmek istediğinizden emin misiniz?`,\n        olumluButonYazisi: 'Evet Silinsin',\n        olumsuzButonYazisi: 'Vazgeçtim'\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.fotoSil.emit(foto.id);\n      }\n    });\n  }\n}\n","module.exports = \"<mat-card class=\\\"example-card\\\">\\n  <fuse-yukleniyor [yukleniyor]=\\\"kaydediliyor\\\">\\n    <mat-card-content>\\n\\n      <form id=\\\"profilimFormu\\\" [formGroup]=\\\"profilimFormu\\\" novalidate>\\n        <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"star start\\\">\\n          <mat-form-field>\\n            <input matInput formControlName=\\\"unvan\\\" [matAutocomplete]=\\\"auto\\\">\\n            <mat-placeholder>\\n              Ünvan</mat-placeholder>\\n            <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\n              <mat-option *ngFor=\\\"let unvanStr of unvanlarFiltrelenmis$ | async\\\" [value]=\\\"unvanStr\\\">\\n                <span>{{ unvanStr }}</span>\\n              </mat-option>\\n            </mat-autocomplete>\\n            <mat-error align=\\\"end\\\" *ngIf=\\\"displayMessage.unvan\\\">\\n              {{displayMessage.unvan}}\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Ad\\\" formControlName=\\\"ad\\\">\\n            <mat-error align=\\\"end\\\" *ngIf=\\\"displayMessage.ad\\\">\\n              {{displayMessage.ad}}\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Soyadı\\\" formControlName=\\\"soyad\\\">\\n\\n            <mat-error align=\\\"end\\\" *ngIf=\\\"displayMessage.soyad\\\">\\n              {{displayMessage.soyad}}\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field>\\n            <input matInput [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" [matDatepicker]=\\\"dogumTarihiSecici\\\" placeholder=\\\"Doğum tarihi\\\" formControlName='dogumTarihi'>\\n\\n            <mat-datepicker-toggle matSuffix [for]=\\\"dogumTarihiSecici\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #dogumTarihiSecici touchUi=\\\"platform.ANDROID || platform.IOS\\\"></mat-datepicker>\\n          </mat-form-field>\\n\\n          <mat-form-field>\\n            <mat-select placeholder=\\\"Cinsiyeti\\\" formControlName=\\\"cinsiyetNo\\\">\\n              <mat-option>Cinsiyeti</mat-option>\\n              <mat-option *ngFor=\\\"let cinsiyet of cinsiyetler\\\" [value]=\\\"cinsiyet.cinsiyetId\\\">\\n                {{cinsiyet.cinsiyetAdi}}\\n              </mat-option>\\n            </mat-select>\\n\\n            <mat-error align=\\\"end\\\" *ngIf=\\\"displayMessage.cinsiyetNo\\\">{{displayMessage.cinsiyetNo}}</mat-error>\\n            <!-- <mat-hint>{{uyelikFormu.cinsiyetNo.value. value?.sound}}</mat-hint> -->\\n          </mat-form-field>\\n\\n\\n        </div>\\n      </form>\\n\\n\\n    </mat-card-content>\\n    <mat-card-actions fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\">\\n      <button *ngIf=\\\"kayitIstegiBasladi!==true\\\" mat-button color=\\\"accent\\\" class=\\\"tamam\\\" [disabled]=\\\"profilimFormu.invalid\\\" (click)=\\\"kaydedilsin()\\\">\\n        <span fxHide.lt-md>Kaydet </span>\\n      </button>\\n    </mat-card-actions>\\n  </fuse-yukleniyor>\\n</mat-card>\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n.example-card {\\n  margin: 40px;\\n  padding: 24px;\\n  max-width: 400px; }\\n#profilimFormu .mat-form-field {\\n  width: 100%; }\\n\"","\nimport { Component, OnInit, ViewChildren, ElementRef, QueryList, AfterViewInit, Inject, Input, Output, EventEmitter } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators, FormControlName, AbstractControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { Store } from '@ngrx/store';\nimport { Platform } from '@angular/cdk/platform';\nimport { MatSnackBar } from '@angular/material';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/observable/fromEvent';\nimport 'rxjs/add/observable/merge';\nimport 'rxjs/add/Observable/forkJoin';\nimport 'rxjs/add/operator/startWith';\nimport 'rxjs/add/operator/map';\n\nimport { fuseAnimations } from '@fuse/animations';\nimport { GenericValidator } from '@fuse/validators/generic-validator';\nimport { Cinsiyet, KullaniciDetay } from '../../../../../../models/kullanici';\n\nimport * as fromRootStore from '../../../../../../store/index';\nimport { SbMesajService } from '../../../../../../core/services/sb-mesaj.service';\nimport { UyelikService } from '../../uyelik.service';\nimport { ProfilimValidasyonMesajlariTr, ProfilimValidasyonMesajlariEn } from '../profilim-validator-messages';\nimport { environment } from 'environments/environment';\nimport { ProfilimVeriSeti } from '../../models/profilim';\nimport { Sonuc } from '../../../../../../models/sonuclar';\n\n@Component({\n  selector: 'fuse-profilim-degistir',\n  templateUrl: './profilim-degistir.component.html',\n  styleUrls: ['./profilim-degistir.component.scss'],\n  animations: fuseAnimations\n})\nexport class ProfilimDegistirComponent implements OnInit, AfterViewInit {\n\n  @Input() kullanici: KullaniciDetay;\n  @Input() cinsiyetler: Cinsiyet[];\n  @Input() kaydediliyor: boolean;\n\n  @Output() kaydet = new EventEmitter();\n\n  @ViewChildren(FormControlName, { read: ElementRef })\n  formInputElements: QueryList<any>;\n  girisTamam: boolean;\n  public validationMessages: any = {};\n  public displayMessage: any = {};\n  public genericValidator: GenericValidator;\n\n  profilimFormu: FormGroup;\n  public errorMessage: string;\n\n  minDate = new Date(1900, 0, 1);\n  maxDate = new Date();\n\n  kayitIstegiBasladi = false;\n\n  unvanlarFiltrelenmis$: Observable<string[]>;\n  unvanlar: string[] = [\n    'Prof.Dr.',\n    'Doç.Dr.',\n    'Dr.Öğr.Gör.'\n  ];\n  uygulamaAdi: string;\n  constructor(\n\n    private formBuilder: FormBuilder,\n    private store: Store<fromRootStore.State>,\n    private router: Router,\n    private translate: TranslateService,\n    private mesajService: SbMesajService,\n    private uyelikService: UyelikService,\n    private activatedRoute: ActivatedRoute,\n    public platform: Platform\n  ) {\n\n\n    this.translate.onLangChange.subscribe((aktifDil) => {\n      if (aktifDil['lang']) {\n        if (aktifDil['lang'] === 'tr') {\n          this.validationMessages = ProfilimValidasyonMesajlariTr();\n        } else if (aktifDil['lang'] === 'en') {\n          this.validationMessages = ProfilimValidasyonMesajlariEn();\n        }\n      }\n      if (this.validationMessages) {\n        this.genericValidator = new GenericValidator(this.validationMessages);\n        this.displayMessage = this.genericValidator.processMessages(this.profilimFormu);\n      }\n    });\n\n\n  }\n\n  filtreleUnvanlar(name: string) {\n    return this.unvanlar.filter(unvan =>\n      unvan.toLowerCase().indexOf(name.toLowerCase()) === 0);\n  }\n  ngOnInit() {\n\n    this.validationMessages = ProfilimValidasyonMesajlariTr();\n    this.genericValidator = new GenericValidator(this.validationMessages);\n\n    this.profilimFormu = this.profilimFormunuYarat(this.formBuilder);\n\n    const unvanControl = this.profilimFormu.get('unvan');\n    this.unvanlarFiltrelenmis$ = unvanControl.valueChanges\n      .startWith('')\n      .map(unvan => unvan ? this.filtreleUnvanlar(unvan) : this.unvanlar.slice());\n\n  }\n\n  public ngAfterViewInit(): void {\n\n    const controlBlurs = this.formInputElements.map((formControl: ElementRef) => Observable.fromEvent(formControl.nativeElement, 'blur'));\n\n    // Merge the blur event observable with the valueChanges observable\n    Observable.merge(this.profilimFormu.valueChanges, ...controlBlurs)\n      .debounceTime(600)\n      .subscribe(value => {\n        this.displayMessage = this.genericValidator.processMessages(this.profilimFormu);\n        if (this.displayMessage['sartlariKabulEdiyorum']) {\n          this.mesajService.hataStr('Şartları kabul etmeden üye olamazsınız!');\n        }\n      });\n  }\n  kaydedilsin() {\n    if (this.profilimFormu.valid === false) {\n      this.displayMessage = this.genericValidator.processMessages(this.profilimFormu, true);\n      return;\n    }\n    if (!this.profilimFormu.dirty) {\n      this.mesajService.goster('Değişiklik olmadığı için kaydedilmedi.');\n      return;\n    }\n    const kullaniciDetay = Object.assign({}, this.kullanici, this.profilimFormu.value);\n    this.kaydet.emit(kullaniciDetay);\n\n  }\n\n  profilimFormunuYarat(formBuilder: FormBuilder): FormGroup {\n    return formBuilder.group({\n      unvan: [this.kullanici.unvan, [Validators.minLength(2), Validators.maxLength(10)]],\n      ad: [this.kullanici.ad, [Validators.required, Validators.minLength(2), Validators.maxLength(50)]],\n      digerAd: [this.kullanici.digerAd, [Validators.minLength(2), Validators.maxLength(50)]],\n      soyad: [this.kullanici.soyad, [Validators.required, Validators.minLength(2), Validators.maxLength(50)]],\n      cinsiyetNo: [this.kullanici.cinsiyetNo, [Validators.required]],\n      dogumTarihi: [this.kullanici.dogumTarihi, Validators.required],\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { forkJoin } from 'rxjs/observable/forkJoin';\r\n\r\nimport { catchError } from 'rxjs/Operators';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { UyelikService } from '../uyelik.service';\r\nimport { ProfilimVeriSeti } from '../models/profilim';\r\nimport { KayitSonuc, ListeSonuc } from '../../../../../models/sonuclar';\r\nimport { KullaniciDetay, Cinsiyet } from '../../../../../models/kullanici';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class ProfilimResolver implements Resolve<ProfilimVeriSeti> {\r\n\r\n    constructor(\r\n        private uyelikService: UyelikService,\r\n        private router: Router\r\n    ) {\r\n\r\n    }\r\n    private aktifKullaniciNo = 0;\r\n    donecekVeriSeti: ProfilimVeriSeti = new ProfilimVeriSeti();\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ProfilimVeriSeti> {\r\n\r\n        const cinsiyetler = this.uyelikService.listeGetirCinsiyetler();\r\n        const profilBilgisi = this.uyelikService.profilBilgisiAl();\r\n\r\n        const veriler = forkJoin([cinsiyetler, profilBilgisi]).pipe(catchError(error => of(error)));\r\n        return veriler.map(gelenSonuc => {\r\n            if (gelenSonuc[0].basarili) {\r\n                this.donecekVeriSeti.cinsiyetler = gelenSonuc[0];\r\n            }\r\n            if (gelenSonuc[1].basarili) {\r\n                this.donecekVeriSeti.kullanici = gelenSonuc[1];\r\n            }\r\n            return this.donecekVeriSeti;\r\n        });\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","export function ProfilimValidasyonMesajlariTr() {\r\n    return {\r\n        unvan: {\r\n            minlength: 'En az 2 karakter olmalıdır.',\r\n            maxlength: 'En fazla 10 karakter olmalıdır.'\r\n        },\r\n        ad: {\r\n            required: 'Ad alanına bilgi girilmesi gerekli.',\r\n            minlength: 'En az 2 karakter olmalıdır.',\r\n            maxlength: 'En fazla 50 karakter olmalıdır.'\r\n        },\r\n        digerAd: {\r\n            minlength: 'En az 2 karakter olmalıdır.',\r\n            maxlength: 'En fazla 50 karakter olmalıdır.'\r\n        },\r\n        soyad: {\r\n            required: 'Soyad alanına bilgi girilmesi gerekli.',\r\n            minlength: 'En az 2 karakter olmalıdır.',\r\n            maxlength: 'En fazla 50 karakter olmalıdır.'\r\n        },\r\n        cinsiyetNo: {\r\n            required: 'Cinsiyet alanına bilgi girilmesi gerekli.'\r\n        },\r\n        dogumTarihi: {\r\n            required: 'Doğum tarihi alanına bilgi girilmesi gerekli.'\r\n        },\r\n    };\r\n}\r\n\r\n\r\n\r\n\r\nexport function ProfilimValidasyonMesajlariEn() {\r\n    return {\r\n        unvan: {\r\n            minlength: 'It should be at least 2 characters.',\r\n            maxlength: 'More than 10 characters are not allowed.'\r\n        },\r\n        ad: {\r\n            required: 'Name is required.',\r\n            minlength: 'It should be at least 2 characters.',\r\n            maxlength: 'More than 50 characters are not allowed.'\r\n        },\r\n        digerAd: {\r\n            minlength: 'It should be at least 2 characters.',\r\n            maxlength: 'More than 50 characters are not allowed.'\r\n        },\r\n        soyad: {\r\n            required: 'The surname field is required.',\r\n            minlength: 'It should be at least 2 characters.',\r\n            maxlength: 'More than 50 characters are not allowed.'\r\n        },\r\n        cinsiyetNo: {\r\n            required: 'The gender field is required.'\r\n        },\r\n        dogumTarihi: {\r\n            required: 'Birth date is required.'\r\n        },\r\n    };\r\n}\r\n\r\n\r\n","module.exports = \"<div id=\\\"profile\\\" class=\\\"page-layout simple tabbed\\\" fusePerfectScrollbar>\\n    <!-- HEADER -->\\n    <div *ngIf=\\\"kullanici\\\" class=\\\"p-24\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayout.gt-sm=\\\"row\\\" fxLayoutAlign.gt-sm=\\\"space-between end\\\">\\n        <div class=\\\"user-info\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxLayout.gt-sm=\\\"row\\\" fxLayoutAlign.gt-sm=\\\"start center\\\">\\n            <img class=\\\"profile-image avatar huge\\\" src=\\\"{{profilFotoUrl}}\\\" *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'50ms',scale:'0.2'}}\\\">\\n            <div class=\\\"name\\\" *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'100ms',x:'-25px'}}\\\">{{kullanici.tamAdi}}\\n            </div>\\n        </div>\\n        <div class=\\\"actions\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'200ms'}}\\\">\\n\\n        </div>\\n\\n    </div>\\n    <!-- / HEADER -->\\n\\n    <!-- CONTENT -->\\n    <div class=\\\"content\\\">\\n\\n\\n        <mat-tab-group dynamicHeight=\\\"true\\\">\\n            <mat-tab *ngIf=\\\"kullanici\\\" label=\\\"Bilgilerim\\\">\\n                <fuse-profilim-degistir [kullanici]=\\\"kullanici\\\" [kaydediliyor]=\\\"kaydediliyor\\\"  [cinsiyetler]=\\\"cinsiyetListesi\\\" (kaydet)=\\\"profilimKaydedilsin($event)\\\"> </fuse-profilim-degistir>\\n            </mat-tab>\\n\\n            <mat-tab *ngIf=\\\"kullanici\\\" label=\\\"Fotoğraflarım\\\">\\n                <fuse-kullanici-fotograflari [(url)]=\\\"saveUrl\\\" [fotograflar]=\\\"kullanici.fotograflari\\\" (profilFotografiYap)=\\\"profilFotografiYap($event)\\\"\\n                    (fotoSil)=\\\"fotografSil($event)\\\" (fotografKaydedildi)=\\\"fotografKaydedildi($event)\\\"> </fuse-kullanici-fotograflari>\\n            </mat-tab>\\n\\n        </mat-tab-group>\\n        <!-- </div>\\n  </div> -->\\n        <!-- / CONTENT -->\\n\\n    </div>\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n#profile .profile-image {\\n  margin-right: 24px; }\\n@media screen and (min-width: 600px) and (max-width: 959px) {\\n    #profile .profile-image {\\n      margin: 0 0 16px 0; } }\\n#profile .name {\\n  font-size: 3em;\\n  color: black; }\\n@media screen and (min-width: 600px) and (max-width: 959px) {\\n    #profile .name {\\n      margin-bottom: 32px; } }\\n#profile .actions button {\\n  text-transform: none;\\n  padding: 0 16px;\\n  height: 32px;\\n  line-height: 32px;\\n  margin: 0 0 0 8px; }\\n#profile .content {\\n  flex: 1; }\\n#profile .content mat-tab-group {\\n    height: 100%; }\\n#profile .content mat-tab-group .mat-tab-body-wrapper {\\n      flex-grow: 1; }\\n\"","import { Component, OnInit, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport * as _ from 'underscore';\nimport { fuseAnimations } from '@fuse/animations';\nimport { AuthService } from '../../../../../core/services/auth.service';\nimport { Subscription } from 'rxjs';\nimport { SbMesajService } from '../../../../../core/services/sb-mesaj.service';\n\nimport * as fromRootStore from '../../../../../store/index';\nimport { environment } from 'environments/environment';\nimport { KayitSonuc, Sonuc } from '../../../../../models/sonuclar';\nimport { KullaniciDetay, KisiFoto, KullaniciBilgi, Cinsiyet, ProfilKaydet } from '../../../../../models/kullanici';\nimport { UyelikService } from '../uyelik.service';\nimport { ProfilimVeriSeti } from '../models/profilim';\n\n@Component({\n  selector: 'fuse-profilim',\n  templateUrl: './profilim.component.html',\n  styleUrls: ['./profilim.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  animations: fuseAnimations\n})\nexport class ProfilimComponent implements OnInit, OnDestroy {\n\n  authState$: Subscription;\n  kullanici: KullaniciDetay;\n  suankiKullanici: KullaniciBilgi;\n  cinsiyetListesi: Cinsiyet[];\n  bosFotoUrl: any;\n  profilFotoUrl: any;\n  saveUrl = '';\n  private kaydediliyor = false;\n\n  constructor(\n    private authService: AuthService,\n    private mesajService: SbMesajService,\n    private authStore: Store<fromRootStore.AuthState>,\n    private uiStore: Store<fromRootStore.UIState>,\n    private router: Router,\n    private uyelikService: UyelikService,\n    private activatedRoute: ActivatedRoute\n\n  ) {\n    this.saveUrl = `profilim/fotografEkle`;\n    this.bosFotoUrl = environment.bosFotoUrl;\n    this.authState$ = this.authStore.select(fromRootStore.getAuthState).subscribe(authDurum => {\n      this.suankiKullanici = authDurum.kullaniciBilgi;\n      if (!authDurum.tokenString) {\n        this.router.navigate(['/']);\n        return;\n      }\n      if (authDurum.kullaniciBilgi.profilFotoUrl) {\n        this.profilFotoUrl = authDurum.kullaniciBilgi.profilFotoUrl;\n      } else {\n        this.profilFotoUrl = this.bosFotoUrl;\n      }\n\n\n    });\n  }\n\n  ngOnInit() {\n    this.activatedRoute.data.subscribe(data => {\n      const sonuc: ProfilimVeriSeti = data['data'];\n      if (sonuc.cinsiyetler.basarili) {\n        this.cinsiyetListesi = sonuc.cinsiyetler.donenListe;\n\n      }\n      if (sonuc.kullanici.basarili) {\n        this.kullanici = sonuc.kullanici.donenNesne;\n      }\n    });\n  }\n  ngOnDestroy() {\n    this.authState$.unsubscribe();\n\n  }\n  profilFotografiYap(foto: KisiFoto) {\n\n\n    this.authService.profilFotografiYap(foto.id)\n      .subscribe((sonuc: Sonuc) => {\n        if (sonuc.basarili) {\n          if (this.kullanici.fotograflari) {\n            const suankiProfilFoto = _.findWhere(this.kullanici.fotograflari, { profilFotografi: true });\n            suankiProfilFoto.profilFotografi = false;\n          }\n          foto.profilFotografi = true;\n          const yeniKullanici = Object.assign({}, this.suankiKullanici);\n          yeniKullanici.profilFotoUrl = foto.url;\n          localStorage.setItem('kullanici', JSON.stringify(yeniKullanici));\n          this.suankiKullanici = yeniKullanici;\n          this.authStore.dispatch(new fromRootStore.KullaniciBilgiDegisti(this.suankiKullanici));\n        }\n      });\n  }\n  fotografKaydedildi(foto: KisiFoto) {\n    if (foto.profilFotografi) {\n      const yeniKullanici = Object.assign({}, this.suankiKullanici);\n      yeniKullanici.profilFotoUrl = foto.url;\n      localStorage.setItem('kullanici', JSON.stringify(yeniKullanici));\n      this.suankiKullanici = yeniKullanici;\n      this.authStore.dispatch(new fromRootStore.KullaniciBilgiDegisti(this.suankiKullanici));\n    }\n  }\n  fotografSil(id: number) {\n    this.authService.fotografSil(id)\n      .subscribe((sonuc: Sonuc) => {\n        if (sonuc.basarili) {\n          this.kullanici.fotograflari.splice(_.findIndex(this.kullanici.fotograflari, { id: id }), 1);\n        } else {\n          this.mesajService.hatalar(sonuc.hatalar);\n        }\n      },\n        hata => this.mesajService.hataStr('Fotoğraf silinemedi!')\n      );\n  }\n  profilimKaydedilsin(kayit: ProfilKaydet) {\n    \n    this.kaydediliyor = true;\n    this.uyelikService.profilKaydet(this.suankiKullanici.id, kayit).subscribe((sonuc: Sonuc) => {\n      if (sonuc.basarili) {\n        const yeniBilgi: KullaniciBilgi = Object.assign({}, this.suankiKullanici);\n        yeniBilgi.tamAdi = `${kayit.unvan !== null ? kayit.unvan : ''} ${kayit.ad}  ${kayit.digerAd !== '' ? kayit.digerAd : ''}  ${kayit.soyad}`.trimLeft();\n\n        const degisenKullanici: KullaniciDetay = Object.assign({}, this.suankiKullanici, kayit, { tamAdi: yeniBilgi.tamAdi });\n\n        this.kullanici = degisenKullanici;\n        this.mesajService.goster('Profil bilgisi kaydedildi.');\n\n        this.authStore.dispatch(new fromRootStore.KullaniciBilgiDegisti(yeniBilgi));\n      } else {\n        this.mesajService.hataStr('Profil bilgisi kaydedilemedi!');\n      }\n    }, () => this.mesajService.hataStr('Kaydedilemedi. Lütfen tekrar deneyin!'),\n      () => this.kaydediliyor = false);\n  }\n}\n","module.exports = \"<div id=\\\"forgot-password\\\" fxLayout=\\\"column\\\" fusePerfectScrollbar>\\n\\n    <div id=\\\"forgot-password-form-wrapper\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" *fuseIfOnDom [@animate]=\\\"{value:'*',params:{duration:'300ms',y:'100px'}}\\\">\\n\\n        <div id=\\\"forgot-password-form\\\">\\n\\n            <div class=\\\"logo\\\">\\n                <img src=\\\"assets/images/logos/fuse.svg\\\">\\n            </div>\\n\\n            <div class=\\\"title\\\">ŞİFRENİZİ KURTARIN</div>\\n            <fuse-yukleniyor [yukleniyor]=\\\"kurtarmaBasladi\\\">\\n                <form name=\\\"forgotPasswordForm\\\" [formGroup]=\\\"forgotPasswordForm\\\" novalidate (submit)=\\\"sifreKurtarmayiBaslat()\\\">\\n\\n                    <mat-form-field>\\n                        <input matInput placeholder=\\\"Eposta\\\" formControlName=\\\"email\\\">\\n                        <mat-error *ngIf=\\\"forgotPasswordFormErrors.email.required\\\">\\n                            Eposta adresi gerekli.\\n                        </mat-error>\\n                        <mat-hint *ngIf=\\\"!this.forgotPasswordForm.valid\\\">Lütfen hesabınızda kullandığınız eposta adresini yazın.</mat-hint>\\n                        <mat-error *ngIf=\\\"!forgotPasswordFormErrors.email.required && forgotPasswordFormErrors.email.email\\\">\\n                            Eposta adresi yanlış. Lütfen geçerli bir adres girin.\\n                        </mat-error>\\n                    </mat-form-field>\\n\\n\\n                    <button *ngIf=\\\"!kurtarmaBasladi\\\" mat-raised-button class=\\\"submit-button\\\" color=\\\"accent\\\" aria-label=\\\"SEND RESET LINK\\\" [disabled]=\\\"forgotPasswordForm.invalid\\\">\\n                        KURTARMA LİNKİ GÖNDER\\n                    </button>\\n\\n                </form>\\n            </fuse-yukleniyor>\\n            <div *ngIf=\\\"!kurtarmaBasladi\\\" class=\\\"login\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"20px\\\">\\n                <button mat-button type=\\\"button\\\" (click)=\\\"girisEkraniniAc()\\\">\\n                    Giriş Yap\\n                </button>\\n                <button mat-button type=\\\"button\\\" (click)=\\\"girisEkraniniAc()\\\">\\n                    Ana Sayfa\\n                </button>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n:host #forgot-password {\\n  width: 100%;\\n  overflow: auto;\\n  background: url(\\\"/assets/images/backgrounds/dark-material-bg.jpg\\\") no-repeat;\\n  background-size: cover; }\\n:host #forgot-password #forgot-password-form-wrapper {\\n    flex: 1 0 auto;\\n    padding: 32px; }\\n@media screen and (max-width: 599px) {\\n      :host #forgot-password #forgot-password-form-wrapper {\\n        padding: 16px; } }\\n:host #forgot-password #forgot-password-form-wrapper #forgot-password-form {\\n      width: 384px;\\n      max-width: 384px;\\n      padding: 32px;\\n      text-align: center;\\n      background: #FFFFFF;\\n      box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12); }\\n@media screen and (max-width: 599px) {\\n        :host #forgot-password #forgot-password-form-wrapper #forgot-password-form {\\n          padding: 24px;\\n          width: 100%; } }\\n:host #forgot-password #forgot-password-form-wrapper #forgot-password-form .logo {\\n        width: 128px;\\n        margin: 32px auto; }\\n:host #forgot-password #forgot-password-form-wrapper #forgot-password-form .title {\\n        font-size: 20px;\\n        margin: 16px 0 32px 0; }\\n:host #forgot-password #forgot-password-form-wrapper #forgot-password-form form {\\n        width: 100%;\\n        text-align: left; }\\n:host #forgot-password #forgot-password-form-wrapper #forgot-password-form form mat-form-field {\\n          width: 100%; }\\n:host #forgot-password #forgot-password-form-wrapper #forgot-password-form form .submit-button {\\n          width: 220px;\\n          margin: 16px auto;\\n          display: block; }\\n@media screen and (max-width: 599px) {\\n            :host #forgot-password #forgot-password-form-wrapper #forgot-password-form form .submit-button {\\n              width: 90%; } }\\n:host #forgot-password #forgot-password-form-wrapper #forgot-password-form .login {\\n        margin: 32px auto 24px auto;\\n        width: 250px;\\n        font-weight: 500; }\\n:host #forgot-password #forgot-password-form-wrapper #forgot-password-form .login .text {\\n          margin-right: 8px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { fuseAnimations } from '@fuse/animations';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { FuseConfigService } from '@fuse/services/config.service';\n\n\nimport { Store } from '@ngrx/store';\nimport * as fromRootStore from '../../../../../store/index';\nimport { Router } from '@angular/router';\nimport { Sonuc } from '../../../../../models/sonuclar';\nimport { UyelikService } from '../uyelik.service';\nimport { SbMesajService } from '../../../../../core/services/sb-mesaj.service';\n\n@Component({\n    selector: 'fuse-sifre-kurtarma',\n    templateUrl: './sifre-kurtarma-baslat.component.html',\n    styleUrls: ['./sifre-kurtarma-baslat.component.scss'],\n    animations: fuseAnimations\n})\nexport class SifreKurtarmaBaslatComponent implements OnInit {\n\n    forgotPasswordForm: FormGroup;\n    forgotPasswordFormErrors: any;\n    kurtarmaBasladi = false;\n\n    constructor(\n        private fuseConfig: FuseConfigService,\n        private formBuilder: FormBuilder,\n        private uyelikService: UyelikService,\n        private mesajService: SbMesajService,\n        private router: Router,\n        private store: Store<fromRootStore.State>\n    ) {\n        this.fuseConfig.setConfig({\n            layout: {\n                navigation: 'none',\n                footer: 'none'\n            }\n        });\n\n        this.forgotPasswordFormErrors = {\n            email: {}\n        };\n    }\n\n    ngOnInit() {\n        this.forgotPasswordForm = this.formBuilder.group({\n            email: ['', [Validators.required, Validators.email]]\n        });\n\n        this.forgotPasswordForm.valueChanges.subscribe(() => {\n            this.onForgotPasswordFormValuesChanged();\n        });\n    }\n\n    onForgotPasswordFormValuesChanged() {\n        for (const field in this.forgotPasswordFormErrors) {\n            if (!this.forgotPasswordFormErrors.hasOwnProperty(field)) {\n                continue;\n            }\n\n            // Clear previous errors\n            this.forgotPasswordFormErrors[field] = {};\n\n            // Get the control\n            const control = this.forgotPasswordForm.get(field);\n\n            if (control && control.dirty && !control.valid) {\n                this.forgotPasswordFormErrors[field] = control.errors;\n            }\n        }\n        \n    }\n    sifreKurtarmayiBaslat() {\n        const sifreKurtar: string = this.forgotPasswordForm.get('email').value;\n        this.kurtarmaBasladi = true;\n        this.uyelikService.sifreKurtarBaslat(sifreKurtar).subscribe((sonuc: Sonuc) => {\n            if (sonuc.basarili) {\n                this.mesajService.goster('Lütfen eposta kutunuzu kontrol edin...');\n                this.store.dispatch(new fromRootStore.SifreKurtarSuccess());\n            } else {\n                this.mesajService.hataStr('Şifre kurtarma epostası gönderilemedi. Lütfen sistem yöneticisine başvurun.');\n            }\n        }, hata => { this.mesajService.hataStr('Beklenmedik bir hata oluştu. Lütfen sistem tekrar deneyin. Sorun devam ederse sistem yöneticisine başvurun.'); },\n            () => {\n            this.kurtarmaBasladi = false;\n                this.anaSayfayaGit();\n            }\n        );\n\n    }\n    girisEkraniniAc() {\n        this.router.navigate(['/']);\n        this.store.dispatch(new fromRootStore.LoginRequired());\n    }\n    anaSayfayaGit() {\n        this.router.navigate(['/']);\n    }\n}\n","module.exports = \"<div id=\\\"reset-password\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start\\\">\\n  <div id=\\\"reset-password-intro\\\" fxFlex fxHide fxShow.gt-xs>\\n\\n    <div class=\\\"logo\\\" *fuseIfOnDom [@animate]=\\\"{value:'*',params:{scale:'0.2'}}\\\">\\n      <img src=\\\"assets/images/logos/fuse.svg\\\">\\n    </div>\\n\\n    <div class=\\\"title\\\" *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'50ms',y:'25px'}}\\\">\\n      SSB Şifre Sıfırlama\\n    </div>\\n\\n    <div class=\\\"description\\\" *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'100ms',y:'25px'}}\\\">\\n      Şifrenizi sıfırlamak için lütfen eposta adresinizi, yeni şifrenizi ve şifre kontrol alanlarını doldurup Sifreyi Sıfırla butonuna\\n      basın.\\n    </div>\\n\\n  </div>\\n\\n  <div id=\\\"reset-password-form-wrapper\\\" fusePerfectScrollbar *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'300ms',x:'100%'}}\\\">\\n\\n    <div id=\\\"reset-password-form\\\">\\n\\n      <div class=\\\"logo\\\" fxHide.gt-xs>\\n        <span>SSB</span>\\n      </div>\\n\\n      <div class=\\\"title\\\">Şifre sıfırlama formu</div>\\n      <fuse-yukleniyor [yukleniyor]=\\\"kayitIstegiBasladi\\\">\\n        <form name=\\\"resetPasswordForm\\\" [formGroup]=\\\"sifirlamaFormu\\\" novalidate (ngSubmit)=\\\"sifreKurtar()\\\">\\n\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Eposta\\\" formControlName=\\\"ePosta\\\">\\n            <mat-icon matPrefix matTooltip=\\\"Kurtmak istediğiniz hesabınıza ait eposta adresi\\\" matTooltipPosition=\\\"right\\\">info</mat-icon>\\n            <mat-error align=\\\"end\\\" *ngIf=\\\"displayMessage.ePosta\\\">\\n              {{displayMessage.ePosta}}\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <div formGroupName=\\\"sifreGrup\\\">\\n            <mat-form-field style=\\\"height:80px\\\">\\n              <input matInput type=\\\"password\\\" placeholder=\\\"Yeni şifre\\\" formControlName=\\\"sifre\\\">\\n              <mat-icon matPrefix matTooltip=\\\"Şifreniz en 6 en fazla 18 karakterden oluşabilir. Şifrenizde en az  bir büyük harf, bir küçük harf, bir rakam ve bir alfa nümetik olmayan (?.$ gibi) bir karakter olmalıdır.\\\">info</mat-icon>\\n              <mat-error align=\\\"end\\\" *ngIf=\\\"displayMessage.sifre\\\">\\n                {{displayMessage.sifre}}\\n              </mat-error>\\n            </mat-form-field>\\n\\n\\n            <mat-form-field>\\n              <input matInput type=\\\"password\\\" placeholder=\\\"Yeni şifre kontrol\\\" formControlName=\\\"sifreKontrol\\\">\\n              <mat-icon matPrefix matTooltip=\\\"Şifre hatalarını azaltmak için şifrenizin aynısını bir kez daha bu alana yazın. \\\" matTooltipPosition=\\\"right\\\">info</mat-icon>\\n              <mat-error align=\\\"end\\\" *ngIf=\\\"displayMessage.sifreKontrol\\\">\\n                {{displayMessage.sifreKontrol}}\\n              </mat-error>\\n            </mat-form-field>\\n\\n            <mat-error align=\\\"end\\\" *ngIf=\\\"displayMessage.sifreGrup\\\">\\n              {{displayMessage.sifreGrup}}\\n            </mat-error>\\n\\n          </div>\\n\\n          <button mat-raised-button class=\\\"submit-button\\\" color=\\\"accent\\\" [disabled]=\\\"sifirlamaFormu.invalid\\\">\\n            Şifreyi Sıfırla\\n          </button>\\n        </form>\\n\\n      </fuse-yukleniyor>\\n\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n:host #reset-password {\\n  width: 100%;\\n  overflow: hidden;\\n  background: url(\\\"/assets/images/backgrounds/dark-material-bg.jpg\\\") no-repeat;\\n  background-size: cover; }\\n:host #reset-password #reset-password-intro {\\n    padding: 128px;\\n    color: white; }\\n@media screen and (min-width: 600px) and (max-width: 959px) {\\n      :host #reset-password #reset-password-intro {\\n        padding: 128px 64px; } }\\n:host #reset-password #reset-password-intro .logo {\\n      width: 128px;\\n      margin-bottom: 32px; }\\n:host #reset-password #reset-password-intro .title {\\n      font-size: 42px;\\n      font-weight: 300;\\n      line-height: 1; }\\n:host #reset-password #reset-password-intro .description {\\n      padding-top: 16px;\\n      font-size: 14px;\\n      max-width: 600px;\\n      color: rgba(255, 255, 255, 0.54); }\\n:host #reset-password #reset-password-form-wrapper {\\n    overflow: auto;\\n    width: 600px;\\n    min-width: 400px;\\n    max-width: 800px;\\n    background: #FFFFFF;\\n    box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12); }\\n@media screen and (min-width: 600px) and (max-width: 959px) {\\n      :host #reset-password #reset-password-form-wrapper {\\n        width: 360px;\\n        min-width: 360px;\\n        max-width: 360px; } }\\n@media screen and (max-width: 599px) {\\n      :host #reset-password #reset-password-form-wrapper {\\n        width: 100%;\\n        min-width: 100%;\\n        max-width: 100%; } }\\n:host #reset-password #reset-password-form-wrapper #reset-password-form {\\n      padding: 128px 48px 48px 48px; }\\n@media screen and (max-width: 599px) {\\n        :host #reset-password #reset-password-form-wrapper #reset-password-form {\\n          text-align: center;\\n          padding: 24px; } }\\n:host #reset-password #reset-password-form-wrapper #reset-password-form .logo {\\n        width: 128px;\\n        height: 128px;\\n        line-height: 128px;\\n        font-size: 86px;\\n        font-weight: 500;\\n        text-align: center;\\n        margin: 32px auto;\\n        color: #FFFFFF;\\n        border-radius: 2px;\\n        background: #039be5; }\\n:host #reset-password #reset-password-form-wrapper #reset-password-form .title {\\n        font-size: 21px; }\\n:host #reset-password #reset-password-form-wrapper #reset-password-form .description {\\n        padding-top: 8px; }\\n:host #reset-password #reset-password-form-wrapper #reset-password-form form {\\n        width: 100%;\\n        padding-top: 32px; }\\n:host #reset-password #reset-password-form-wrapper #reset-password-form form mat-form-field {\\n          width: 100%; }\\n@media screen and (max-width: 599px) {\\n            :host #reset-password #reset-password-form-wrapper #reset-password-form form mat-form-field {\\n              width: 100%;\\n              height: 6em; } }\\n:host #reset-password #reset-password-form-wrapper #reset-password-form form mat-icon {\\n          margin-right: 3px;\\n          font-size: 1em;\\n          color: rgba(0, 150, 0, 0.3); }\\n:host #reset-password #reset-password-form-wrapper #reset-password-form form .submit-button {\\n          width: 100%;\\n          margin: 16px auto;\\n          display: block; }\\n@media screen and (max-width: 599px) {\\n            :host #reset-password #reset-password-form-wrapper #reset-password-form form .submit-button {\\n              width: 80%; } }\\n:host #reset-password #reset-password-form-wrapper #reset-password-form .login {\\n        margin: 32px auto 24px auto;\\n        width: 250px;\\n        font-weight: 500; }\\n:host #reset-password #reset-password-form-wrapper #reset-password-form .login .text {\\n          margin-right: 8px; }\\n\"","\nimport { Component, OnInit, AfterViewInit, ViewChildren, ElementRef, QueryList } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators, FormControlName } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Platform } from '@angular/cdk/platform';\n\nimport { Observable } from 'rxjs/Observable';\nimport { fuseAnimations } from '@fuse/animations';\nimport { GenericValidator } from '@fuse/validators/generic-validator';\nimport { FuseConfigService } from '@fuse/services/config.service';\nimport { UyelikValidatorleri } from '../uyeol/uyelik-validators';\nimport { SbMesajService } from '../../../../../core/services/sb-mesaj.service';\nimport * as fromRootStore from '../../../../../store/index';\nimport { UyelikService } from '../uyelik.service';\nimport { UyelikBasvuruValidasyonMesajlariTr, UyelikBasvuruValidasyonMesajlariEn } from '../uyeol/uyelik-mesajlari';\nimport { SifreKurtarBilgi } from '../../../../../models/kullanici';\nimport { Sonuc } from '../../../../../models/sonuclar';\nimport { Subscription } from 'rxjs';\n@Component({\n  selector: 'fuse-sifre-sifirla',\n  templateUrl: './sifre-sifirla.component.html',\n  styleUrls: ['./sifre-sifirla.component.scss'],\n  animations: fuseAnimations\n})\n\nexport class SifreSifirlaComponent implements OnInit, AfterViewInit {\n  @ViewChildren(FormControlName, { read: ElementRef })\n  formInputElements: QueryList<any>;\n\n  routerState: any;\n\n  kayitIstegiBasladi = false;\n\n  public validationMessages: any = {};\n  public displayMessage: any = {};\n  public genericValidator: GenericValidator;\n\n  sifirlamaFormu: FormGroup;\n  public errorMessage: string;\n  private kurtarmaKodu: string;\n  private yukleniyor = false;\n  constructor(\n    private fuseConfig: FuseConfigService,\n    private formBuilder: FormBuilder,\n    private uyelikValidatorlari: UyelikValidatorleri,\n    private mesajService: SbMesajService,\n    private store: Store<fromRootStore.State>,\n    private router: Router,\n    private translate: TranslateService,\n    private uyelikService: UyelikService,\n    private activatedRoute: ActivatedRoute,\n    public platform: Platform\n\n  ) {\n    this.store.select(fromRootStore.getRouterState).subscribe(routerState => {\n      if (routerState) {\n        this.routerState = routerState.state;\n      }\n    });\n    this.translate.onLangChange.subscribe((aktifDil) => {\n      if (aktifDil['lang']) {\n        if (aktifDil['lang'] === 'tr') {\n          this.validationMessages = UyelikBasvuruValidasyonMesajlariTr();\n        } else if (aktifDil['lang'] === 'en') {\n          this.validationMessages = UyelikBasvuruValidasyonMesajlariEn();\n        }\n      }\n      if (this.validationMessages) {\n        this.genericValidator = new GenericValidator(this.validationMessages);\n        this.displayMessage = this.genericValidator.processMessages(this.sifirlamaFormu);\n      }\n    });\n\n    this.fuseConfig.setConfig({\n      layout: {\n        navigation: 'none',\n        footer: 'none'\n      }\n    });\n    this.sifirlamaFormu = this.sifirlamaFormunuYarat(this.formBuilder);\n  }\n\n  ngOnInit() {\n    this.validationMessages = UyelikBasvuruValidasyonMesajlariTr();\n    this.genericValidator = new GenericValidator(this.validationMessages);\n\n    this.kurtarmaKodu = this.routerState.queryParams['code'];\n\n  }\n  ngAfterViewInit(): void {\n    this.formOlaylariniBagla();\n  }\n  private formOlaylariniBagla() {\n    const controlBlurs = this.formInputElements.map((formControl: ElementRef) => Observable.fromEvent(formControl.nativeElement, 'blur'));\n    Observable.merge(this.sifirlamaFormu.valueChanges, ...controlBlurs)\n      .debounceTime(600)\n      .subscribe(value => {\n        this.displayMessage = this.genericValidator.processMessages(this.sifirlamaFormu);\n      });\n  }\n  sifirlamaFormunuYarat(formBuilder: FormBuilder): FormGroup {\n    return formBuilder.group({\n\n      sifreGrup: formBuilder.group(\n        {\n          sifre: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(18), this.uyelikValidatorlari.isStrongPassword, Validators.maxLength(18)]],\n          sifreKontrol: ['', [Validators.required]]\n        },\n        { validator: this.uyelikValidatorlari.sifreKontrol }\n      ),\n      ePosta: ['', [Validators.required, Validators.email]],\n      // tslint:disable-next-line:max-line-length\n    });\n  }\n  sifreKurtar() {\n\n    if (this.sifirlamaFormu.valid === false) {\n      this.displayMessage = this.genericValidator.processMessages(this.sifirlamaFormu, true);\n      return;\n    }\n\n    const gonderilecekBilgi: SifreKurtarBilgi = Object.assign({}, this.sifirlamaFormu.value);\n    gonderilecekBilgi.eposta = this.sifirlamaFormu.get('ePosta').value;\n    gonderilecekBilgi.sifre = this.sifirlamaFormu.get('sifreGrup.sifre').value;\n    gonderilecekBilgi.sifreKontrol = this.sifirlamaFormu.get('sifreGrup.sifreKontrol').value;\n    gonderilecekBilgi.kod = this.kurtarmaKodu;\n    this.kayitIstegiBasladi = true;\n    this.uyelikService.sifreKurtar(gonderilecekBilgi).subscribe((sonuc: Sonuc) => {\n      if (sonuc.basarili) {\n        const girisAction = this.mesajService.goster('Şifreniz sıfırlandı. Yeni şifrenizle giriş yapabilirsiniz.', 'Giriş yap', 7000);\n        girisAction.onAction().subscribe(data => {\n          this.store.dispatch(new fromRootStore.LoginRequired());\n        });\n        this.router.navigate(['/']);\n\n      } else {\n        const sifreKurtarAction = this.mesajService.hatalar(sonuc.hatalar, 'Şifre kurtar', 7000);\n        sifreKurtarAction.onAction().subscribe(data => {\n          this.router.navigate(['uyelik/sifrekurtar']);\n        });\n\n      }\n    }, error => {\n      this.sifirlamaFormu = this.sifirlamaFormunuYarat(this.formBuilder);\n      this.formOlaylariniBagla();\n      this.mesajService.hatalar(error.error);\n    },\n      () => {\n        this.kayitIstegiBasladi = false;\n\n      });\n  }\n  girisiBaslat() {\n    this.router.navigate(['/']);\n    this.store.dispatch(new fromRootStore.LoginRequired());\n  }\n}\n\n\n","import { NgModule, Optional, SkipSelf, ModuleWithProviders } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AktivasyonEpostasiComponent } from './hesap-aktivasyon/aktivasyon-epostasi/aktivasyon-epostasi.component';\r\nimport { SifreKurtarmaBaslatComponent } from './sifre-kurtarma-baslat/sifre-kurtarma-baslat.component';\r\nimport { UyelikBasvuruComponent } from './uyeol/basvuru/uyelik-basvuru.component';\r\nimport { UyelikBasvuruResolver } from './uyeol/uyelik-basvuru-resolver';\r\nimport { UyelikValidatorleri } from './uyeol/uyelik-validators';\r\nimport { SurecBasladiComponent } from './uyeol/surec-basladi/surec-basladi.component';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { UyelikService } from './uyelik.service';\r\nimport { MaterialModule } from '../../../../material.module';\r\nimport { SbCoreModule } from '../../../../core/sb-core.module';\r\nimport { SifreSifirlaComponent } from './sifre-sifirla/sifre-sifirla.component';\r\nimport { ProfilimComponent } from './profilim/profilim.component';\r\nimport { FuseConfirmDialogModule } from '@fuse/components';\r\nimport { KullaniciFotograflariComponent } from './profilim/kullanici-fotograflari/kullanici-fotograflari.component';\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\nimport { ProfilimDegistirComponent } from './profilim/profilim-degistir/profilim-degistir.component';\r\nimport { ProfilimResolver } from './profilim/profilim-resolver';\r\n\r\n\r\nconst routes = [\r\n\r\n    {\r\n        path: 'basvurusu',\r\n        component: UyelikBasvuruComponent,\r\n        resolve: { data: UyelikBasvuruResolver }\r\n    },\r\n    {\r\n        path: 'aktivasyonbaslat',\r\n        component: AktivasyonEpostasiComponent\r\n\r\n    },\r\n    {\r\n        path: 'sifrekurtar',\r\n        component: SifreKurtarmaBaslatComponent\r\n    },\r\n    {\r\n        path: 'sifresifirla',\r\n        component: SifreSifirlaComponent\r\n    },\r\n    {\r\n        path: 'profilim',\r\n        component: ProfilimComponent,\r\n        resolve: { data: ProfilimResolver }\r\n    }\r\n\r\n];\r\n@NgModule({\r\n    declarations: [\r\n        AktivasyonEpostasiComponent,\r\n        SifreKurtarmaBaslatComponent,\r\n        UyelikBasvuruComponent,\r\n        SurecBasladiComponent,\r\n        SifreSifirlaComponent,\r\n        ProfilimComponent,\r\n        KullaniciFotograflariComponent,\r\n        ProfilimDegistirComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FileUploadModule,\r\n        FuseConfirmDialogModule,\r\n        FuseSharedModule,\r\n        RouterModule.forChild(routes),\r\n        SbCoreModule,\r\n        TranslateModule,\r\n        MaterialModule,\r\n\r\n    ],\r\n\r\n    providers: [\r\n        UyelikService,\r\n        UyelikBasvuruResolver,\r\n        ProfilimResolver,\r\n        UyelikValidatorleri\r\n    ]\r\n\r\n})\r\nexport class UyelikModule {\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\nimport { environment } from 'environments/environment';\r\nimport { Sonuc, KayitSonuc, ListeSonuc } from '../../../../models/sonuclar';\r\nimport { SifreKurtarBilgi, KullaniciDetay, Cinsiyet, KullaniciBilgi, ProfilKaydet } from '../../../../models/kullanici';\r\n\r\nimport { UyelikBasvuru } from './models/uyelik-basvuru';\r\nimport * as fromRootStore from '../../../../store/index';\r\nimport { Store } from '@ngrx/store';\r\n\r\n@Injectable()\r\nexport class UyelikService {\r\n\r\n    baseUrl = environment.apiUrl;\r\n    guvenlikUrl = 'account';\r\n    profilUrl = 'profilim';\r\n    hesapUrl = 'account';\r\n    cinsiyetUrl = 'cinsiyetler';\r\n    externalauth = 'externalauth';\r\n\r\n    kullanicilarUrl = 'kullanicilar';\r\n    arkadaslarUrl = 'arkadasliklarim';\r\n    private kb: KullaniciBilgi;\r\n\r\n\r\n\r\n    constructor(\r\n        private httpClient: HttpClient,\r\n        private store: Store<fromRootStore.State>\r\n    ) {\r\n        this.store.select(fromRootStore.getAuthState).subscribe(authState => {\r\n            this.kb = authState.kullaniciBilgi;\r\n        });\r\n    }\r\n\r\n    listeGetirCinsiyetler(): Observable<ListeSonuc<Cinsiyet>> {\r\n        return this.httpClient.get<ListeSonuc<Cinsiyet>>(`${this.baseUrl}/${this.cinsiyetUrl}`);\r\n    }\r\n\r\n    epostaAktiveEt(kullaniciNo: number, kod: string) {\r\n        return this.httpClient.get(`${this.baseUrl}/${this.guvenlikUrl}/kullaniciepostasinionayla?userId=${kullaniciNo}&code=${kod}`);\r\n    }\r\n    hesapOnayKoduPostala(eposta: string): Observable<Sonuc> {\r\n        const adres = `${this.baseUrl}/${this.guvenlikUrl}/hesaponaykodupostala?eposta=${eposta}`;\r\n        return this.httpClient.get<Sonuc>(adres);\r\n    }\r\n    sifreKurtarBaslat(epostaAdresi: string) {\r\n        return this.httpClient.post(`${this.baseUrl}/account/sifrekurtarbaslat`, { eposta: epostaAdresi });\r\n    }\r\n    sifreKurtar(bilgi: SifreKurtarBilgi): Observable<Sonuc> {\r\n        const adres = `${this.baseUrl}/${this.hesapUrl}/sifrekurtar`;\r\n        return this.httpClient.post<Sonuc>(adres, bilgi,\r\n            {\r\n                headers: new HttpHeaders().set('Content-Type', 'application/json')\r\n            });\r\n    }\r\n    profilBilgisiAl(): Observable<KayitSonuc<KullaniciDetay>> {\r\n        return this.httpClient.get<KayitSonuc<KullaniciDetay>>(`${environment.apiUrl}/${this.profilUrl}/${this.kb.id}?neden=yaz`)\r\n            .map(response => {\r\n                return <KayitSonuc<KullaniciDetay>>response;\r\n            });\r\n    }\r\n\r\n    profilKaydet(id: number, kullanici: ProfilKaydet): Observable<Sonuc> {\r\n        return this.httpClient.put<Sonuc>(`${environment.apiUrl}/${this.kullanicilarUrl}/${id}`, kullanici);\r\n    }\r\n\r\n    personelBilgisiniAl(): number {\r\n\r\n        let personelNo = 0;\r\n        const kullanici = localStorage.getItem('kullanici');\r\n        if (kullanici) {\r\n            personelNo = JSON.parse(kullanici).personelNo;\r\n        }\r\n        return personelNo;\r\n    }\r\n\r\n\r\n    kullaniciGuvenlikKoduDogrumu(kod: string): Observable<boolean> {\r\n        return this.httpClient.get<boolean>(`${this.baseUrl}/${this.guvenlikUrl}/guvenlikkodudogrumu?kod=${kod}`);\r\n\r\n    }\r\n\r\n    profilFotografiYap(fotoId: number) {\r\n        return this.httpClient.post<Sonuc>(`${this.baseUrl}/${this.profilUrl}/profilFotografiYap`, fotoId);\r\n    }\r\n    fotografSil(fotoId: number) {\r\n        return this.httpClient.delete<Sonuc>(`${this.baseUrl}/${this.profilUrl}/fotografsil/${fotoId}`);\r\n    }\r\n\r\n    // getArkadaslar(): Observable<ListeSonuc<ArkadaslikTeklif>> {\r\n    //     const adres = `${this.baseUrl}/${this.arkadaslarUrl}/`;\r\n    //     return this.httpClient.get<ListeSonuc<ArkadaslikTeklif>>(adres);\r\n    // }\r\n    // arkadasliklariGetir(sorgu?: ArkadaslikSorgusu): Observable<ListeSonuc<ArkadaslikTeklif>> {\r\n    //     if (sorgu == null) {\r\n    //         sorgu = new ArkadaslikSorgusu();\r\n    //         sorgu.aramaCumlesi = '';\r\n    //         sorgu.sayfa = 1;\r\n    //         sorgu.sayfaBuyuklugu = 10;\r\n\r\n    //     }\r\n    //     let params: HttpParams = new HttpParams();\r\n    //     if (sorgu.teklifEdenler != null) {\r\n    //         params = params.append('teklifEdenler', sorgu.teklifEdenler.toString());\r\n    //     }\r\n    //     if (sorgu.teklifEdilenler != null) {\r\n    //         params = params.append('teklifEdilenler', sorgu.teklifEdilenler.toString());\r\n    //     }\r\n    //     if (sorgu.cevaplananlar != null) {\r\n    //         params = params.append('cevaplananlar', sorgu.cevaplananlar.toString());\r\n    //     }\r\n    //     if (sorgu.cevapBeklenenler != null) {\r\n    //         params = params.append('cevapBeklenenler', sorgu.cevapBeklenenler.toString());\r\n    //     }\r\n    //     if (sorgu.kabulEdilenler != null) {\r\n    //         params = params.append('kabulEdilenler', sorgu.kabulEdilenler.toString());\r\n    //     }\r\n    //     if (sorgu.silinenler != null) {\r\n    //         params = params.append('silinenler', sorgu.silinenler.toString());\r\n    //     }\r\n    //     if (sorgu.sayfa != null) {\r\n    //         params = params.append('sayfa', sorgu.sayfa.toString());\r\n    //     }\r\n    //     if (sorgu.aramaCumlesi != null) {\r\n    //         params = params.append('aramaCumlesi', sorgu.aramaCumlesi.toString());\r\n    //     }\r\n    //     if (sorgu.sayfaBuyuklugu != null) {\r\n    //         params = params.append('sayfaBuyuklugu', sorgu.sayfaBuyuklugu.toString());\r\n    //     }\r\n    //     if (sorgu.siralamaCumlesi != null) {\r\n    //         params = params.append('siralamaCumlesi', sorgu.siralamaCumlesi.toString());\r\n    //     }\r\n    //     return this.httpClient.get<ListeSonuc<ArkadaslikTeklif>>(`${environment.apiUrl}/arkadasliklarim`, { params });\r\n    // }\r\n    epostaAdresKullanilmis(eposta: string): Observable<boolean> {\r\n        return this.httpClient.get<boolean>(`${this.baseUrl}/${this.hesapUrl}/epostakullanimda?eposta=${eposta}`);\r\n    }\r\n    kullaniciAdiKullanilmis(kullaniciAdi: string): Observable<boolean> {\r\n        return this.httpClient.get<boolean>(`${this.baseUrl}/${this.hesapUrl}/kullaniciadikullanimda?kullaniciAdi=${kullaniciAdi}`);\r\n    }\r\n    telefonNumarasiKullanilmis(telefonno: string): Observable<boolean> {\r\n        return this.httpClient.get<boolean>(`${this.baseUrl}/${this.hesapUrl}/telefonnumarasikullanimda?telefonno=${telefonno}`);\r\n    }\r\n    register(uyeBilgisi: UyelikBasvuru): Observable<Sonuc> {\r\n        return this.httpClient.post<Sonuc>(`${this.baseUrl}/${this.hesapUrl}/uyelikbaslat`, uyeBilgisi,\r\n            {\r\n                headers: new HttpHeaders().set('Content-Type', 'application/json')\r\n            });\r\n    }\r\n\r\n\r\n}\r\n","module.exports = \"\\n<div id=\\\"register\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start\\\">\\n  <div id=\\\"register-intro\\\" fxFlex fxHide fxShow.gt-xs>\\n    <div class=\\\"logo\\\" *fuseIfOnDom [@animate]=\\\"{value:'*',params:{scale:'0.2'}}\\\">\\n      <img src=\\\"assets/images/logos/fuse.svg\\\">\\n    </div>\\n    <div class=\\\"title\\\" *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'50ms',y:'25px'}}\\\">\\n      SINAV SORU BANK'A HOŞGELDİNİZ\\n    </div>\\n    <div class=\\\"description\\\" *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'100ms',y:'25px'}}\\\">\\n      Sınav Soru Bank'ı kullanabilmeniz için hesap oluşturmanız gereklidir. Hesap oluşturma işlemleri güvenlik nedeniyle bir kaç\\n      aşamalıdır. Lütfen her aşamada size sununlan yönergeleri takip ediniz.\\n    </div>\\n  </div>\\n\\n\\n  <div id=\\\"register-form-wrapper\\\"  fusePerfectScrollbar *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'300ms',x:'100%'}}\\\">\\n\\n    <div id=\\\"register-form\\\">\\n\\n      <div class=\\\"logo\\\" fxHide.gt-xs>\\n        <span matTooltip=\\\"Sınav Soru Bankası\\\">SSB</span>\\n      </div>\\n\\n      <div class=\\\"title\\\">YENİ HESAP YARATILIYOR</div>\\n\\n      <form name=\\\"uyelikFormu\\\" [formGroup]=\\\"uyelikFormu\\\" novalidate (ngSubmit)=\\\"uyeol()\\\">\\n\\n        <mat-form-field>\\n          <mat-icon matPrefix matTooltip=\\\"Prof.Dr., Doç.Dr. vb.\\\" matTooltipPosition=\\\"right\\\">info</mat-icon>\\n          <input matInput formControlName=\\\"unvan\\\" [matAutocomplete]=\\\"auto\\\">\\n          <mat-placeholder>\\n            Ünvan</mat-placeholder>\\n          <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\n            <mat-option *ngFor=\\\"let unvanStr of unvanlarFiltrelenmis$ | async\\\" [value]=\\\"unvanStr\\\">\\n              <span>{{ unvanStr }}</span>\\n            </mat-option>\\n          </mat-autocomplete>\\n          <mat-error align=\\\"end\\\" *ngIf=\\\"displayMessage.unvan\\\">\\n            {{displayMessage.unvan}}\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Ad\\\" formControlName=\\\"ad\\\">\\n          <mat-icon matPrefix matTooltip=\\\"Adınız varsa ikinci adınızla beraber\\\" matTooltipPosition=\\\"right\\\">info</mat-icon>\\n          <mat-error align=\\\"end\\\" *ngIf=\\\"displayMessage.ad\\\">\\n            {{displayMessage.ad}}\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Soyad\\\" formControlName=\\\"soyad\\\">\\n          <mat-icon matPrefix matTooltip=\\\"Soyadınız\\\" matTooltipPosition=\\\"right\\\">info</mat-icon>\\n          <mat-error align=\\\"end\\\" *ngIf=\\\"displayMessage.soyad\\\">\\n            {{displayMessage.soyad}}\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <input matInput [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" [matDatepicker]=\\\"dogumTarihiSecici\\\" placeholder=\\\"{{'GENEL.DOGUM_TARIHI'|translate}}\\\"\\n            formControlName='dogumTarihi'>\\n          <mat-icon matPrefix matTooltip=\\\"Doğum tarihini gün.ay.yıl olarak yazın veya takvimden seçin.\\\" matTooltipPosition=\\\"right\\\">info</mat-icon>\\n          <mat-datepicker-toggle matSuffix [for]=\\\"dogumTarihiSecici\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #dogumTarihiSecici touchUi=\\\"platform.ANDROID || platform.IOS\\\"></mat-datepicker>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <mat-select placeholder=\\\"Cinsiyet\\\" formControlName=\\\"cinsiyetNo\\\">\\n            <mat-option>Cinsiyet seçin</mat-option>\\n            <mat-option *ngFor=\\\"let cinsiyet of cinsiyetListesi\\\" [value]=\\\"cinsiyet.cinsiyetId\\\">\\n              {{cinsiyet.cinsiyetAdi}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-icon matPrefix matTooltip=\\\"Listeden cinsiyetinizi seçin\\\" matTooltipPosition=\\\"right\\\">info</mat-icon>\\n          <mat-error align=\\\"end\\\" *ngIf=\\\"displayMessage.cinsiyetNo\\\">{{displayMessage.cinsiyetNo}}</mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Kullanıcı Adı\\\" formControlName=\\\"kullaniciAdi\\\">\\n          <mat-icon matPrefix matTooltip=\\\"Kullanıcı adı türkçe harf ve boşluk içermemelir. Rakam ve alt çizgi içerebilir. \\\" matTooltipPosition=\\\"right\\\">info</mat-icon>\\n          <mat-error align=\\\"end\\\" *ngIf=\\\"displayMessage.kullaniciAdi\\\">\\n            {{displayMessage.kullaniciAdi}}\\n          </mat-error>\\n          <mat-hint align=\\\"end\\\" class=\\\"async-kontrol\\\" *ngIf=\\\"uyelikFormu.get('kullaniciAdi').pending \\\">Kontrol ediliyor</mat-hint>\\n          <mat-hint align=\\\"end\\\" class=\\\"hata\\\" *ngIf=\\\"uyelikFormu.get('kullaniciAdi')?.hasError('kullaniciAdiKullaniliyor')\\\">\\n            Kullanıcı adı kullanılıyor! Lütfen başka deneyin...\\n          </mat-hint>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Eposta\\\" formControlName=\\\"ePosta\\\">\\n          <mat-icon matPrefix matTooltip=\\\"Epostanızı doğru yazmaya dikkat edin. Hesabınız ile ilgili güvenlik işlemlerinde kullanılacaktır.\\\"\\n            matTooltipPosition=\\\"right\\\">info</mat-icon>\\n          <mat-error align=\\\"end\\\" *ngIf=\\\"displayMessage.ePosta\\\">\\n            {{displayMessage.ePosta}}\\n          </mat-error>\\n          <mat-hint class=\\\"async-kontrol\\\" align=\\\"end\\\" *ngIf=\\\"uyelikFormu.get('ePosta').pending \\\">Kontrol ediliyor</mat-hint>\\n          <mat-hint align=\\\"end\\\" class=\\\"hata\\\" *ngIf=\\\"uyelikFormu.get('ePosta')?.hasError('epostaKullaniliyor')\\\">\\n            Eposta kullanılıyor! Lütfen başka deneyin...\\n          </mat-hint>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Telefon numarası\\\" formControlName=\\\"telefonNumarasi\\\">\\n          <mat-icon matPrefix matTooltip=\\\"Lütfen SMS özelliği olan bir numara girin. Telefon numaranızı başında 0 olmadan alan kodu ile beraber girin.\\\"\\n            matTooltipPosition=\\\"right\\\">info</mat-icon>\\n          <mat-error align=\\\"end\\\" *ngIf=\\\"displayMessage.telefonNumarasi\\\">\\n            {{displayMessage.telefonNumarasi}}\\n          </mat-error>\\n          <mat-hint class=\\\"async-kontrol\\\" align=\\\"end\\\" *ngIf=\\\"uyelikFormu.get('telefonNumarasi').pending \\\">Kontrol ediliyor...</mat-hint>\\n          <mat-hint align=\\\"end\\\" class=\\\"hata\\\" *ngIf=\\\"uyelikFormu.get('telefonNumarasi')?.hasError('telefonKullaniliyor')\\\">\\n            Telefon numarası kullanılıyor. Lütfen kendi telefon numaranızı girin.\\n          </mat-hint>\\n        </mat-form-field>\\n\\n        <div formGroupName=\\\"sifreGrup\\\">\\n          <mat-form-field style=\\\"height:80px\\\">\\n            <input matInput type=\\\"password\\\" placeholder=\\\"Şifre\\\" formControlName=\\\"sifre\\\">\\n            <mat-icon matPrefix matTooltip=\\\"Şifreniz en 6 en fazla 18 karakterden oluşabilir. Şifrenizde en az  bir büyük harf, bir küçük harf, bir rakam ve bir alfa nümetik olmayan (?.$ gibi) bir karakter olmalıdır.\\\"\\n              matTooltipPosition=\\\"right\\\">info</mat-icon>\\n            <mat-error align=\\\"end\\\" *ngIf=\\\"displayMessage.sifre\\\">\\n              {{displayMessage.sifre}}\\n            </mat-error>\\n          </mat-form-field>\\n\\n\\n          <mat-form-field>\\n            <input matInput type=\\\"password\\\" placeholder=\\\"Şifre kontrol\\\" formControlName=\\\"sifreKontrol\\\">\\n            <mat-icon matPrefix matTooltip=\\\"Şifre hatalarını azaltmak için şifrenizin aynısını bir kez daha bu alana yazın. \\\" matTooltipPosition=\\\"right\\\">info</mat-icon>\\n            <mat-error align=\\\"end\\\" *ngIf=\\\"displayMessage.sifreKontrol\\\">\\n              {{displayMessage.sifreKontrol}}\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-error align=\\\"end\\\" *ngIf=\\\"displayMessage.sifreGrup\\\">\\n            {{displayMessage.sifreGrup}}\\n          </mat-error>\\n\\n        </div>\\n\\n        <mat-checkbox aria-label=\\\"Accept\\\" formControlName='sartlariKabulEdiyorum' class=\\\"sartlar\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start start\\\">\\n          <span>Sınav Soru Bank'ın</span>\\n          <a href=\\\"#\\\"> kullanım şarlarını </a>\\n          <span>kabul ediyorum</span>\\n        </mat-checkbox>\\n        <fuse-yukleniyor [yukleniyor]=\\\"yukleniyor\\\">\\n\\n        </fuse-yukleniyor>\\n\\n        <div align=\\\"center\\\" style=\\\"margin-top:20px\\\">\\n          <button mat-raised-button type=\\\"button\\\" class=\\\"iptal\\\" [routerLink]=\\\"['/']\\\" [disabled]=\\\"kayitIstegiBasladi===true\\\">\\n            <mat-icon matTooltip=\\\"Aan sayfaya git.\\\">home</mat-icon>\\n            <span fxHide.lt-md> Ana Sayfa</span>\\n          </button>\\n          <button *ngIf=\\\"kayitIstegiBasladi!==true\\\" mat-raised-button color=\\\"accent\\\" class=\\\"tamam\\\" aria-label=\\\"HESAP YARAT\\\" [disabled]=\\\"uyelikFormu.invalid\\\">\\n            <mat-icon style=\\\"color:white\\\" matTooltip=\\\"Hesap oluştur\\\">done</mat-icon>\\n            <span fxHide.lt-md>Hesap Oluştur </span>\\n          </button>\\n\\n        </div>\\n\\n      </form>\\n\\n      <div class=\\\"register\\\" style=\\\"margin-top: 10px\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n        <button mat-raised-button color=\\\"primary\\\" style=\\\"margin-top:10px\\\" type=\\\"button\\\" (click)=\\\"girisiBaslat()\\\" [disabled]=\\\"kayitIstegiBasladi===true\\\">Giriş</button>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n:host #register {\\n  width: 100%;\\n  overflow: hidden;\\n  background: url(\\\"/assets/images/backgrounds/dark-material-bg.jpg\\\") no-repeat;\\n  background-size: cover; }\\n:host #register #register-intro {\\n    padding: 64px;\\n    color: white; }\\n@media screen and (min-width: 600px) and (max-width: 959px) {\\n      :host #register #register-intro {\\n        padding: 32px 32px; } }\\n:host #register #register-intro .logo {\\n      width: 128px;\\n      margin-bottom: 32px; }\\n:host #register #register-intro .title {\\n      font-size: 32px;\\n      font-weight: 400;\\n      line-height: 1; }\\n:host #register #register-intro .description {\\n      padding-top: 16px;\\n      font-size: 26px;\\n      max-width: 400px;\\n      color: rgba(255, 255, 255, 0.54); }\\n:host #register #register-form-wrapper {\\n    overflow: auto;\\n    width: 600px;\\n    background: #FFFFFF;\\n    box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12); }\\n@media screen and (max-width: 599px) {\\n      :host #register #register-form-wrapper {\\n        width: 100%; } }\\n:host #register #register-form-wrapper #register-form {\\n      padding: 32px 8px 8px 8px; }\\n@media screen and (max-width: 599px) {\\n        :host #register #register-form-wrapper #register-form {\\n          text-align: center;\\n          padding: 8px; } }\\n:host #register #register-form-wrapper #register-form .logo {\\n        width: 128px;\\n        height: 128px;\\n        line-height: 128px;\\n        font-size: 47px;\\n        font-weight: 700;\\n        text-align: center;\\n        margin: 32px auto;\\n        color: #FFFFFF;\\n        border-radius: 2px;\\n        background: #039be5; }\\n:host #register #register-form-wrapper #register-form .title {\\n        font-size: 18px; }\\n:host #register #register-form-wrapper #register-form .description {\\n        padding-top: 12px; }\\n:host #register #register-form-wrapper #register-form form {\\n        width: 100%;\\n        padding-top: 16px; }\\n:host #register #register-form-wrapper #register-form form mat-form-field {\\n          width: 100%; }\\n@media screen and (max-width: 599px) {\\n            :host #register #register-form-wrapper #register-form form mat-form-field {\\n              width: 100%;\\n              height: 6em; } }\\n:host #register #register-form-wrapper #register-form form mat-icon {\\n          margin-right: 3px;\\n          font-size: 1em;\\n          color: rgba(0, 150, 0, 0.3); }\\n:host #register #register-form-wrapper #register-form form .sartlar {\\n          width: 90%;\\n          margin-left: 10px;\\n          margin-top: 10px;\\n          font-size: 12px; }\\n:host #register #register-form-wrapper #register-form button mat-icon {\\n        margin-right: 3px;\\n        font-size: 2em; }\\n:host #register #register-form-wrapper #register-form button.iptal, :host #register #register-form-wrapper #register-form button.tamam {\\n        width: 40%;\\n        text-transform: none;\\n        color: #FFFFFF;\\n        font-size: 13px;\\n        margin-left: 12px; }\\n:host #register #register-form-wrapper #register-form button.iptal mat-icon, :host #register #register-form-wrapper #register-form button.tamam mat-icon {\\n          color: #FFFFFF;\\n          margin: 0 8px 0 0; }\\n:host #register #register-form-wrapper #register-form button.iptal {\\n        background-color: #D73D32;\\n        margin-bottom: 8px; }\\n:host #register #register-form-wrapper #register-form button.tamam {\\n        background-color: #3f5c9a; }\\n\"","import { Component, OnInit, AfterViewInit, ViewChildren, ElementRef, QueryList } from '@angular/core';\nimport { fuseAnimations } from '@fuse/animations';\nimport { FormControlName, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Cinsiyet } from '../../../../../../models/kullanici';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/startWith';\nimport 'rxjs/add/observable/fromEvent';\nimport 'rxjs/add/observable/merge';\nimport 'rxjs/add/operator/debounceTime';\nimport { FuseConfigService } from '@fuse/services/config.service';\nimport { UyelikValidatorleri } from '../uyelik-validators';\nimport * as fromRootStore from '../../../../../../store/index';\nimport { Store } from '@ngrx/store';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\n\n\nimport { Platform } from '@angular/cdk/platform';\nimport { GenericValidator } from '@fuse/validators/generic-validator';\nimport { UyelikBasvuruValidasyonMesajlariTr, UyelikBasvuruValidasyonMesajlariEn } from '../uyelik-mesajlari';\nimport { environment } from 'environments/environment';\nimport { UyelikBasvuruVeriSeti } from '../../models/uyelik-basvuru';\nimport { UyelikBasvuru } from '../../models/uyelik-basvuru';\nimport { Sonuc } from '../../../../../../models/sonuclar';\n\nimport { SbMesajService } from '../../../../../../core/services/sb-mesaj.service';\nimport { UyelikService } from '../../uyelik.service';\n\n@Component({\n  selector: 'fuse-uyelik-basvuru',\n  templateUrl: './uyelik-basvuru.component.html',\n  styleUrls: ['./uyelik-basvuru.component.scss'],\n  animations: fuseAnimations\n})\nexport class UyelikBasvuruComponent implements OnInit, AfterViewInit {\n\n  @ViewChildren(FormControlName, { read: ElementRef })\n  formInputElements: QueryList<any>;\n  girisTamam: boolean;\n  public validationMessages: any = {};\n  public displayMessage: any = {};\n  public genericValidator: GenericValidator;\n\n  yukleniyor = false;\n\n  uyelikFormu: FormGroup;\n  public errorMessage: string;\n\n  minDate = new Date(1900, 0, 1);\n  maxDate = new Date();\n  cinsiyetListesi: Cinsiyet[];\n  kayitIstegiBasladi = false;\n\n  unvanlarFiltrelenmis$: Observable<string[]>;\n  unvanlar: string[] = [\n    'Prof.Dr.',\n    'Doç.Dr.',\n    'Dr.Öğr.Gör.',\n    'Arş.Gör.Dr.'\n  ];\n  uygulamaAdi: string;\n  constructor(\n    private fuseConfig: FuseConfigService,\n    private formBuilder: FormBuilder,\n    private uyelikValidatorlari: UyelikValidatorleri,\n    private store: Store<fromRootStore.State>,\n    private router: Router,\n    private translate: TranslateService,\n    private mesajService: SbMesajService,\n    private uyelikService: UyelikService,\n    private activatedRoute: ActivatedRoute,    \n    public platform: Platform\n  ) {\n    this.fuseConfig.setConfig({\n      layout: {\n        navigation: 'none',\n        toolbar: 'none',\n        footer: 'none'\n      }\n    });\n\n    this.translate.onLangChange.subscribe((aktifDil) => {\n      if (aktifDil['lang']) {\n        if (aktifDil['lang'] === 'tr') {\n          this.validationMessages = UyelikBasvuruValidasyonMesajlariTr();\n        } else if (aktifDil['lang'] === 'en') {\n          this.validationMessages = UyelikBasvuruValidasyonMesajlariEn();\n        }\n      }\n      if (this.validationMessages) {\n        this.genericValidator = new GenericValidator(this.validationMessages);\n        this.displayMessage = this.genericValidator.processMessages(this.uyelikFormu);\n      }\n    });\n\n\n  }\n\n  filtreleUnvanlar(name: string) {\n    return this.unvanlar.filter(unvan =>\n      unvan.toLowerCase().indexOf(name.toLowerCase()) === 0);\n  }\n  ngOnInit() {\n\n    this.validationMessages = UyelikBasvuruValidasyonMesajlariTr();\n    this.genericValidator = new GenericValidator(this.validationMessages);\n    this.store.select(fromRootStore.getAuthState).subscribe((authState) => {\n      \n      if (authState.kullaniciBilgi === null && authState.loaded) {\n        this.girisTamam = false;\n      } else {\n        this.girisTamam = true;\n      }\n    });\n    if (this.girisTamam) {\n      this.store.dispatch(new fromRootStore.LogoutStart());\n    }\n    this.uyelikFormu = this.uyelikFromunuYarat(this.formBuilder);\n\n    const unvanControl = this.uyelikFormu.get('unvan');\n    this.unvanlarFiltrelenmis$ = unvanControl.valueChanges\n      .startWith('')\n      .map(unvan => unvan ? this.filtreleUnvanlar(unvan) : this.unvanlar.slice());\n\n    if (environment.production === false) {\n      this.denemeKullaniciYarat();\n    }\n    this.activatedRoute.data.subscribe(data => {\n      const sonuc: UyelikBasvuruVeriSeti = data['data'];\n      if (sonuc.cinsiyetler.basarili) {\n        this.cinsiyetListesi = sonuc.cinsiyetler.donenListe;\n      }\n    });\n  }\n\n  public ngAfterViewInit(): void {\n\n    const controlBlurs = this.formInputElements.map((formControl: ElementRef) => Observable.fromEvent(formControl.nativeElement, 'blur'));\n\n    // Merge the blur event observable with the valueChanges observable\n    Observable.merge(this.uyelikFormu.valueChanges, ...controlBlurs)\n      .debounceTime(600)\n      .subscribe(value => {\n        this.displayMessage = this.genericValidator.processMessages(this.uyelikFormu);\n        if (this.displayMessage['sartlariKabulEdiyorum']) {\n          this.mesajService.hataStr('Şartları kabul etmeden üye olamazsınız!');\n        }\n      });\n  }\n  uyeol() {\n\n    if (this.uyelikFormu.valid === false) {\n      this.displayMessage = this.genericValidator.processMessages(this.uyelikFormu, true);\n      return;\n    }\n    const gonderilecekBilgi: UyelikBasvuru = Object.assign({}, this.uyelikFormu.value);\n    gonderilecekBilgi.sifre = this.uyelikFormu.get('sifreGrup.sifre').value;\n    this.kayitIstegiBasladi = true;\n    this.yukleniyor = true;\n    this.uyelikService.register(gonderilecekBilgi).subscribe((sonuc: Sonuc) => {\n      if (sonuc.basarili) {\n        this.mesajService.yansit(sonuc.mesajlar);\n        this.router.navigate(['basvuruyapildi']);\n      } else {\n        this.mesajService.hatalar(sonuc.hatalar);\n      }\n      this.kayitIstegiBasladi = false;\n    }, error => {\n      this.mesajService.hatalar(error.error);\n    },\n      () => {\n        this.kayitIstegiBasladi = false;\n        this.yukleniyor = false;\n      });\n  }\n\n  uyelikFromunuYarat(formBuilder: FormBuilder): FormGroup {\n    return formBuilder.group({\n      kullaniciAdi: ['', [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(20),\n        this.uyelikValidatorlari.boslukIceremez,\n        this.uyelikValidatorlari.sadeceHarfRakamdanOlusabilir\n      ], this.uyelikValidatorlari.isUserNameUnique.bind(this)],\n      sifreGrup: formBuilder.group(\n        {\n          sifre: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(18), this.uyelikValidatorlari.isStrongPassword, Validators.maxLength(18)]],\n          sifreKontrol: ['', [Validators.required]]\n        },\n        { validator: this.uyelikValidatorlari.sifreKontrol }\n      ),\n      unvan: ['', [Validators.minLength(2), Validators.maxLength(15)]],\n      ad: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(50)]],\n      digerAd: ['', [Validators.minLength(2), Validators.maxLength(50)]],\n\n      soyad: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(50)]],\n      cinsiyetNo: [null, [Validators.required]],\n      dogumTarihi: ['', Validators.required],\n      ePosta: ['', [Validators.required, Validators.email], [this.uyelikValidatorlari.isMailUnique.bind(this)]],\n      // tslint:disable-next-line:max-line-length\n      telefonNumarasi: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(15), this.uyelikValidatorlari.phoneNumberValid, this.uyelikValidatorlari.telefonSifirlaBaslayamaz], [this.uyelikValidatorlari.isPhoneUnique.bind(this)]],\n      sartlariKabulEdiyorum: ['', [Validators.required, this.uyelikValidatorlari.kullanimSartlariniKontrol]]\n    });\n  }\n\n  denemeKullaniciYarat() {\n\n    this.uyelikFormu.patchValue({\n      kullaniciAdi: 'ozge',\n      sifreGrup: {\n        sifre: 'Akd34630.',\n        sifreKontrol: 'Akd34630.'\n      },\n      unvan: 'Prof.Dr.',\n      ad: 'Özge',\n      soyad: 'Turhan',\n      digerAd: '',\n      cinsiyetNo: 2,\n      ePosta: 'drmuratturhan@gmail.com',\n      telefonNumarasi: 5332737353,\n      dogumTarihi: new Date('01.16.1974')\n    });\n  }\n  girisiBaslat() {\n    \n    this.router.navigate(['/']);\n    this.store.dispatch(new fromRootStore.LoginRequired());\n  }\n\n}\n","module.exports = \"<div id=\\\"register\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start\\\">\\n\\n  <div id=\\\"register-intro\\\" fxFlex fxHide fxShow.gt-xs>\\n    <div class=\\\"baslik-paneli\\\">\\n      <div class=\\\"logo\\\" *fuseIfOnDom [@animate]=\\\"{value:'*',params:{scale:'0.2'}}\\\">\\n        <img src=\\\"assets/images/logos/fuse.svg\\\">\\n      </div>\\n      <div class=\\\"title\\\" *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'50ms',y:'25px'}}\\\">\\n        SINAV SORU BANKASI\\n      </div>\\n    </div>\\n\\n    <div class=\\\"description\\\" *fuseIfOnDom [@animate]=\\\"{value:'*',params:{delay:'50ms',y:'25px'}}\\\">\\n      <h1>Üyelik süreci başladı!</h1>\\n      <h2> Sınav soru bankası üyelik süreci aşağıdaki gibidir.</h2>\\n      <ul>\\n        <li>\\n          Üyelik kaydı (yapıldı).\\n        </li>\\n        <li>\\n          Üyelik sonrası kullanıcı hesabının doğrulanması. <mat-icon class=\\\"tamam\\\">check_circle</mat-icon>\\n        </li>\\n        <li>\\n          Üyelik sırasında sisteme girdiğiniz eposta adresine hesap doğrulama linki gönderildi.<mat-icon class=\\\"tamam\\\">check_circle</mat-icon>\\n        </li>\\n        <li>\\n          Lütfen posta kutunuzdan size gönderilen epostayı açın ve talimatlara uyun.<mat-icon class=\\\"bekleniyor\\\">hourglass_empty</mat-icon>\\n        </li>\\n        <li>\\n          Hesabınız doğrulandıktan sonra, kurum, personel ve ders tanımlama bilgileriniz için sizlere yeniden bir eposta gönderilecektir.<mat-icon class=\\\"bekleniyor\\\">hourglass_empty</mat-icon>\\n        </li>\\n      </ul>\\n    </div>\\n\\n    <div class=\\\"btn-anasayfa\\\">\\n      <button mat-raised-button type=\\\"button\\\" class=\\\"iptal-button\\\" [routerLink]=\\\"['/']\\\">\\n        Ana Sayfa\\n      </button>\\n    </div>\\n\\n  </div>\\n\\n</div>\"","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n:host #register {\\n  width: 100%;\\n  overflow: hidden;\\n  background: url(\\\"/assets/images/backgrounds/dark-material-bg.jpg\\\") no-repeat;\\n  background-size: cover; }\\n:host #register #register-intro {\\n    padding: 128px;\\n    color: white; }\\n@media screen and (min-width: 600px) and (max-width: 959px) {\\n      :host #register #register-intro {\\n        padding: 128px 64px; } }\\n:host #register #register-intro .baslik-paneli {\\n      width: 100%; }\\n:host #register #register-intro .logo {\\n      float: left;\\n      width: 128px;\\n      margin-bottom: 32px; }\\n:host #register #register-intro .title {\\n      vertical-align: bottom;\\n      font-weight: 700;\\n      float: none;\\n      margin-top: 250;\\n      margin-left: 200;\\n      font-size: 42px;\\n      font-weight: 300;\\n      line-height: 3; }\\n:host #register #register-intro .description {\\n      display: block;\\n      margin-top: 50px;\\n      padding-top: 24px;\\n      font-size: 20px; }\\n:host #register #register-intro .tamam {\\n      color: yellowgreen;\\n      font-size: 1.5em; }\\n:host #register #register-intro .bekleniyor {\\n      color: yellow;\\n      font-size: 1.5em; }\\n:host #register #register-intro .description li {\\n      color: white; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FuseConfigService } from '@fuse/services/config.service';\n\n@Component({\n  selector: 'sb-surec-basladi',\n  templateUrl: './surec-basladi.component.html',\n  styleUrls: ['./surec-basladi.component.scss']\n})\nexport class SurecBasladiComponent implements OnInit {\n\n  constructor(\n    private fuseConfig: FuseConfigService,\n    ) { \n\n      this.fuseConfig.setConfig({\n        layout: {\n          navigation: 'none',\n          footer: 'none'\n        }\n      });\n    }\n    ngOnInit() {\n    }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { forkJoin } from 'rxjs/observable/forkJoin';\r\n\r\nimport { UyelikBasvuruVeriSeti } from '../models/uyelik-basvuru';\r\nimport { UyelikService } from '../uyelik.service';\r\n\r\n\r\n@Injectable()\r\nexport class UyelikBasvuruResolver implements Resolve<UyelikBasvuruVeriSeti> {\r\n\r\n    constructor(\r\n        private uyelikService: UyelikService,\r\n        private router: Router\r\n    ) { }\r\n    private aktifKullaniciNo = 0;\r\n    donecekVeriSeti: UyelikBasvuruVeriSeti = new UyelikBasvuruVeriSeti();\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<UyelikBasvuruVeriSeti> {\r\n\r\n        const veriKaynaklari = [\r\n            this.uyelikService.listeGetirCinsiyetler()\r\n        ];\r\n        return forkJoin(veriKaynaklari).map(data => {\r\n            this.donecekVeriSeti.cinsiyetler = data[0];\r\n            if (this.donecekVeriSeti) {\r\n                return this.donecekVeriSeti;\r\n            }\r\n            return null;\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","export function UyelikBasvuruValidasyonMesajlariTr() {\r\n    return {\r\n        kullaniciAdi: {\r\n            required: 'Kullanıcı adı alanına bilgi girilmesi gerekli.',\r\n            minlength: 'En az 3 karakter olmalıdır.',\r\n            maxlength: 'En fazla 20 karakter olmalıdır.',\r\n            boslukIceremez: 'Kullanıcı adı boşluk içermez.',\r\n            harfRakamDisiNesneVar: 'Kullanıcı adı sadece ingizlice harfler ve rakamlardan oluşabilir.'\r\n\r\n\r\n        },\r\n        unvan: {\r\n            minlength: 'En az 2 karakter olmalıdır.',\r\n            maxlength: 'En fazla 15 karakter olmalıdır.'\r\n        },\r\n        ad: {\r\n            required: 'Ad alanına bilgi girilmesi gerekli.',\r\n            minlength: 'En az 2 karakter olmalıdır.',\r\n            maxlength: 'En fazla 50 karakter olmalıdır.'\r\n        },\r\n        digerAd: {\r\n            minlength: 'En az 2 karakter olmalıdır.',\r\n            maxlength: 'En fazla 50 karakter olmalıdır.'\r\n        },\r\n        soyad: {\r\n            required: 'Soyad alanına bilgi girilmesi gerekli.',\r\n            minlength: 'En az 2 karakter olmalıdır.',\r\n            maxlength: 'En fazla 50 karakter olmalıdır.'\r\n        },\r\n        cinsiyetNo: {\r\n            required: 'Cinsiyet alanına bilgi girilmesi gerekli.'\r\n        },\r\n        dogumTarihi: {\r\n            required: 'Doğum tarihi alanına bilgi girilmesi gerekli.'\r\n\r\n        },\r\n        ePosta: {\r\n            required: 'Eposta  girmediniz.',\r\n            email: 'Geçerli bir eposta adresi girmeliniz.',\r\n            epostaKullaniliyor: 'Eposta adresi kullanılıyor. Başka deneyin....'\r\n        },\r\n        telefonNumarasi: {\r\n            required: 'Telefon numarası girmediniz.',\r\n            maxlength: 'Telefon numarası en az 2 an fazla 15 rakamdan oluşabilir.',\r\n            telefonNumarasiYanlis: 'Telefon numarası yanlış.',\r\n            sifirlaBasliyor: 'Sadece alan kodu (3X) ve numara(7X) giriniz.'\r\n        },\r\n        sifre: {\r\n            required: 'Şifre girmediniz.',\r\n            minlength: 'En az 6 karakter olmalıdır.',\r\n            sifreGucluDegil: 'Lütfen en az bir büyük harf, bir küçük harf, bir rakam ve bir alfanumeraik OLMAYAN karakter girin.',\r\n            maxlength: 'En fazla 18 karakter olmalıdır.'\r\n        },\r\n        sifreKontrol: {\r\n            required: 'Şifre kontrol girmediniz.',\r\n        },\r\n        sifreGrup: {\r\n            sifreKontrolBasarisiz: 'Şifre ile şifre kontrol aynı olmalıdır.'\r\n        },\r\n        sartlariKabulEdiyorum: {\r\n            required: 'Kullanım şartları gerekli alan.',\r\n            kullanimSartlariniKabulEtmiyor: 'Kullanım şartlarını kabul etmeden üye olamazsınız'\r\n        }\r\n    };\r\n}\r\n\r\n\r\n\r\n\r\nexport function UyelikBasvuruValidasyonMesajlariEn() {\r\n    return {\r\n        kullaniciAdi: {\r\n            required: 'Username is required.',\r\n            minlength: 'It should be at least 3 characters.',\r\n            maxlength: 'More than 20 characters are not allowed.',\r\n            boslukIceremez: 'Username does not contain spaces.',\r\n            harfRakamDisiNesneVar: 'The username can only be composed of English letters and numbers.'\r\n\r\n        },\r\n        unvan: {\r\n            minlength: 'It should be at least 2 characters.',\r\n            maxlength: 'More than 10 characters are not allowed.'\r\n        },\r\n        ad: {\r\n            required: 'Name is required.',\r\n            minlength: 'It should be at least 2 characters.',\r\n            maxlength: 'More than 50 characters are not allowed.'\r\n        },\r\n        digerAd: {\r\n            minlength: 'It should be at least 2 characters.',\r\n            maxlength: 'More than 50 characters are not allowed.'\r\n        },\r\n        soyad: {\r\n            required: 'The surname field is required.',\r\n            minlength: 'It should be at least 2 characters.',\r\n            maxlength: 'More than 50 characters are not allowed.'\r\n        },\r\n        cinsiyetNo: {\r\n            required: 'The gender field is required.'\r\n        },\r\n        dogumTarihi: {\r\n            required: 'Birth date is required.'\r\n\r\n        },\r\n        ePosta: {\r\n            required: 'E-mail is required.',\r\n            email: 'You must enter a valid email address.',\r\n            epostaKullaniliyor: 'Email is used.Please choose another one'\r\n        },\r\n        telefonNumarasi: {\r\n            required: 'Phone number is required.',\r\n            minlength: 'It should be at least 2 characters.',\r\n            maxlength: 'More than 15 characters are not allowed.',\r\n            telefonNumarasiYanlis: 'Phone number is wrong.',\r\n            sifirlaBasliyor: 'Phone number can not start zero.'\r\n        },\r\n        sifre: {\r\n            required: 'Password is reauired.',\r\n            minlength: 'It should be at least 2 characters.',\r\n            sifreGucluDegil: 'Please enter at least one uppercase letter, one lowercase letter, one digit and one non-alphanumeric character.',\r\n            maxlength: 'More than 10 characters are not allowed.'\r\n        },\r\n        sifreKontrol: {\r\n            required: 'Password control is required.',\r\n        },\r\n        sifreGrup: {\r\n            sifreKontrolBasarisiz: 'Password and password control should be the same.'\r\n        },\r\n        sartlariKabulEdiyorum: {\r\n            required: 'Kullanım şartları gerekli alan.',\r\n            kullanimSartlariniKabulEtmiyor: 'Kullanım şartlarını kabul etmeden üye olamazsınız'\r\n        }\r\n    };\r\n}\r\n\r\n\r\n","import { AbstractControl, ValidationErrors, FormControl, ValidatorFn } from '@angular/forms';\r\nimport { parse, ParsedNumber, isValidNumber } from 'libphonenumber-js';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { switchMap } from 'rxjs/operator/switchMap';\r\nimport 'rxjs/add/operator/map';\r\nimport { Injectable, Inject, Injector } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\n\r\nimport * as fromRootStore from '../../../../../store/index';\r\nimport { Dil } from '../../../../../models/dil';\r\nimport { UyelikService } from '../uyelik.service';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class UyelikValidatorleri {\r\n    seciliDil: Dil;\r\n    constructor(private uyelikService: UyelikService,\r\n        private store: Store<fromRootStore.State>) {\r\n        this.store.select(fromRootStore.getUIState).pipe().subscribe((uiState) => {\r\n            if (uiState.dil != null && uiState.dil !== undefined) {\r\n                this.seciliDil = uiState.dil;\r\n            }\r\n        });\r\n\r\n    }\r\n    boslukIceremez(control: AbstractControl): ValidationErrors | null {\r\n        if ((control.value as string).indexOf(' ') >= 0) {\r\n            return { boslukIceremez: true };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    kullanimSartlariniKontrol(control: AbstractControl): ValidationErrors | null {\r\n        const kabulEdiyor = control.value && control.value !== undefined && (control.value as boolean) === true;\r\n\r\n        if (kabulEdiyor) {\r\n            return null;\r\n        }\r\n        return { kullanimSartlariniKabulEtmiyor: true };\r\n    }\r\n\r\n\r\n\r\n    sadeceHarfRakamdanOlusabilir(control: AbstractControl): ValidationErrors | null {\r\n        const harfSayiDisiBilgiIceriyor: boolean = /[^\\x00-\\x7F]+/.test(control.value);\r\n        const valid = !harfSayiDisiBilgiIceriyor;\r\n        if (valid) {\r\n            return null;\r\n\r\n        } else {\r\n            return { harfRakamDisiNesneVar: true };\r\n        }\r\n    }\r\n\r\n    sifreKontrol(control: AbstractControl): ValidationErrors | null {\r\n        const sifre = control.get('sifre');\r\n        const sifreKontrol = control.get('sifreKontrol');\r\n        if (sifre.pristine && sifreKontrol.pristine) {\r\n            return null;\r\n        }\r\n        if (!sifre.valid) {\r\n            return null;\r\n        }\r\n        if (!sifreKontrol.valid || sifreKontrol.value === null) {\r\n            return null;\r\n        }\r\n        if (sifre.value === sifreKontrol.value) {\r\n            return null;\r\n        }\r\n        return { sifreKontrolBasarisiz: true };\r\n    }\r\n\r\n    isStrongPassword(control: AbstractControl): ValidationErrors | null {\r\n        const hasNumber: boolean = /\\d/.test(control.value);\r\n        const hasUpper: boolean = /[A-Z]/.test(control.value);\r\n        const hasLower: boolean = /[a-z]/.test(control.value);\r\n        const nonalphanumeric: boolean = /(?=.*\\W)/.test(control.value);\r\n        const valid = hasNumber && hasUpper && hasLower && nonalphanumeric;\r\n\r\n\r\n        if (!valid) {\r\n            return { sifreGucluDegil: true };\r\n\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    telefonSifirlaBaslayamaz(control: AbstractControl): ValidationErrors | null {\r\n        if (!control.value) {\r\n            return null;\r\n        }\r\n        const numara: string = (control.value).toString();\r\n        if (numara.startsWith('0') && numara.length === 11) {\r\n            return { sifirlaBasliyor: true };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    phoneNumberValid(control: AbstractControl): ValidationErrors | null {\r\n        if (!control.value) {\r\n            return null;\r\n        }\r\n        const numara = (control.value).toString();\r\n\r\n        let parsedNumara: ParsedNumber;\r\n        let dilKodu = 'TR';\r\n\r\n        if (!dilKodu) {\r\n            dilKodu = 'TR';\r\n        }\r\n        switch (dilKodu) {\r\n            case 'EN':\r\n                parsedNumara = parse(numara, 'US');\r\n                break;\r\n\r\n            default:\r\n                parsedNumara = parse(numara, 'TR');\r\n                break;\r\n        }\r\n        if (!parsedNumara.phone) {\r\n            return { telefonNumarasiYanlis: true };\r\n        }\r\n        if (numara !== parsedNumara.phone.toString()) {\r\n            return { telefonNumarasiYanlis: true };\r\n        }\r\n        const sonuc = isValidNumber(parsedNumara);\r\n\r\n        if (sonuc === false) {\r\n            return { telefonNumarasiYanlis: true };\r\n\r\n        } else {\r\n            return null;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    isUserNameUnique(control: FormControl) {\r\n\r\n        const q = new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                this.uyelikService.kullaniciAdiKullanilmis(control.value).subscribe(sonuc => {\r\n                    if (sonuc) {\r\n                        resolve({ 'kullaniciAdiKullaniliyor': true });\r\n                    } else {\r\n                        resolve(null);\r\n                    }\r\n                }, () => { resolve({ 'kullaniciAdiKullaniliyor': false }); });\r\n            }, 500);\r\n        });\r\n        return q;\r\n    }\r\n    isMailUnique(control: FormControl) {\r\n\r\n        const q = new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                this.uyelikService.epostaAdresKullanilmis(control.value).subscribe(sonuc => {\r\n                    if (sonuc) {\r\n                        resolve({ epostaKullaniliyor: true });\r\n                    } else {\r\n                        resolve(null);\r\n                    }\r\n                }, () => { resolve({ epostaKullaniliyor: false }); });\r\n            }, 1000);\r\n        });\r\n        return q;\r\n    }\r\n    isPhoneUnique(control: FormControl) {\r\n\r\n        const q = new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                this.uyelikService.telefonNumarasiKullanilmis(control.value).subscribe(sonuc => {\r\n                    if (sonuc) {\r\n                        resolve({ 'telefonKullaniliyor': true });\r\n                    } else {\r\n                        resolve(null);\r\n                    }\r\n                }, () => { resolve({ 'telefonKullaniliyor': false }); });\r\n            }, 1000);\r\n        });\r\n        return q;\r\n    }\r\n\r\n    regExValidator(patern: RegExp, validatosyonSonucStr: string): ValidatorFn {\r\n        return (control: AbstractControl): { [key: string]: any } => {\r\n            const deger = patern.test(control.value);\r\n            return deger ? null : { validatosyonSonucStr: { value: true } };\r\n        };\r\n    }\r\n\r\n}\r\n","import { SorguBase } from './sorgu-base';\r\n\r\n\r\nexport class KullaniciBilgi {\r\n    id?: number;\r\n    tamAdi?: string;\r\n    kullaniciAdi?: string;\r\n    CinsiyetNo?: number;\r\n    yasi?: number;\r\n    eposta?: string;\r\n    epostaOnaylandi?: boolean;\r\n    telefonNumarasi?: string;\r\n    telefonNumarasiOnaylandi?: boolean;\r\n    profilFotoUrl?: string;\r\n    yonetici?: boolean;\r\n    sonrakiKontrolTarihi?: Date;\r\n}\r\nexport class KisiFoto {\r\n    id?: number;\r\n    kisiNo: number;\r\n    url?: string;\r\n    aciklama?: string;\r\n    eklenmeTarihi?: Date;\r\n    profilFotografi?: boolean;\r\n}\r\nexport class KullaniciDetay {\r\n    id?: number;\r\n    kullaniciAdi?: string;\r\n    unvan?: string;\r\n    ad?: string;\r\n    digerAd?: string;\r\n    soyad?: string;\r\n    cinsiyetNo?: string;\r\n    dogumTarihi: Date;\r\n    eposta?: string;\r\n    epostaOnaylandi?: boolean;\r\n    telefonNumarasi?: string;\r\n    telefonOnaylandi?: boolean;\r\n    aktif?: boolean;\r\n    profilFotoUrl?: string;\r\n    yaratilmaTarihi?: Date;\r\n    sonAktifOlma?: Date;\r\n    tamAdi?: string;\r\n    fotograflari?: KisiFoto[];\r\n}\r\n\r\nexport class KullaniciYaz {\r\n    id?: number;\r\n    kullaniciAdi?: string;\r\n    unvan?: string;\r\n    ad?: string;\r\n    digerAd?: string;\r\n    soyad?: string;\r\n    cinsiyetNo?: string;\r\n    dogumTarihi: Date;\r\n    eposta?: string;\r\n    epostaOnaylandi?: boolean;\r\n    telefonNumarasi?: string;\r\n    telefonOnaylandi?: boolean;\r\n    aktif?: boolean;\r\n    profilFotoUrl?: string;\r\n    yaratilmaTarihi?: Date;\r\n    sonAktifOlma?: Date;\r\n    tamAdi?: string;\r\n    fotograflari?: KisiFoto[];\r\n}\r\n\r\nexport class ProfilKaydet{\r\n    id?: number;\r\n    \r\n    unvan?: string;\r\n    ad?: string;\r\n    digerAd?: string;\r\n    soyad?: string;\r\n    cinsiyetNo?: string;\r\n    dogumTarihi: Date;\r\n}\r\n\r\nexport class Cinsiyet {\r\n    cinsiyetId: number;\r\n    cinsiyetAdi: string;\r\n}\r\n\r\nexport interface GirisBilgi {\r\n    kullaniciAdi: string;\r\n    sifre: string;\r\n    returnUrl: string;\r\n}\r\n\r\nexport class SifreKurtarBilgi {\r\n    eposta: string;\r\n    sifre: string;\r\n    sifreKontrol: string;\r\n    kod?: string;\r\n}\r\n\r\nexport class KullaniciSorgusu extends SorguBase {\r\n  \r\n    constructor() {\r\n        super();\r\n        this.sayfa = 1;\r\n        this.sayfaBuyuklugu = 10;\r\n\r\n    }\r\n}\r\nexport interface GuvenlikBilgi {\r\n    tokenString?: string;\r\n    kullanici?: KullaniciBilgi;\r\n}\r\n","export class SorguBase {\r\n    aramaCumlesi?: string;\r\n    alanlar?: string;\r\n    siralamaCumlesi?: string;\r\n    sayfa?: number;\r\n    sayfaBuyuklugu?: number;\r\n    sayfaSayisi?: number;\r\n    kayitSayisi?: number;\r\n}\r\n"],"sourceRoot":""}