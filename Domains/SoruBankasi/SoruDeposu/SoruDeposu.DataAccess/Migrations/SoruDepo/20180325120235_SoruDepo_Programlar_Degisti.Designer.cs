// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SoruDeposu.DataAccess;
using System;

namespace SoruDeposu.DataAccess.Migrations.SoruDepo
{
    [DbContext(typeof(SoruDepoDbContext))]
    [Migration("20180325120235_SoruDepo_Programlar_Degisti")]
    partial class SoruDepo_Programlar_Degisti
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.AkademikTakvim", b =>
                {
                    b.Property<int>("AkademikTakvimId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Baslangic");

                    b.Property<DateTime?>("Bitis");

                    b.Property<int>("UniversiteNo");

                    b.HasKey("AkademikTakvimId");

                    b.HasIndex("UniversiteNo");

                    b.ToTable("AkademikTakvimler","Ogrenci");
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.AlanKod", b =>
                {
                    b.Property<int>("AlanKodId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AlanKodAdi");

                    b.HasKey("AlanKodId");

                    b.ToTable("AlanKodlari","Ders");
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.BilisselDuzey", b =>
                {
                    b.Property<int>("BilisselDuzeyId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool?>("Aktif");

                    b.Property<string>("BilisselDuzyeAdi");

                    b.HasKey("BilisselDuzeyId");

                    b.ToTable("SoruBilisselDuzeyler","Soru");
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.Birim", b =>
                {
                    b.Property<int>("BirimId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AkademikAmirPersonelNo");

                    b.Property<int?>("BagliBirimNo");

                    b.Property<string>("BirimAdi");

                    b.Property<int>("BirimGrupNo");

                    b.Property<int?>("IdariAmirPersonelNo");

                    b.Property<int>("UniversiteNo");

                    b.HasKey("BirimId");

                    b.HasIndex("AkademikAmirPersonelNo");

                    b.HasIndex("BagliBirimNo");

                    b.HasIndex("BirimGrupNo");

                    b.HasIndex("IdariAmirPersonelNo");

                    b.HasIndex("UniversiteNo");

                    b.ToTable("Birimler","Universite");
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.BirimGrup", b =>
                {
                    b.Property<int>("BirimGrupId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("Akademik");

                    b.Property<int?>("AkademikAmirPozisyonNo");

                    b.Property<int?>("AkademikGuc");

                    b.Property<string>("BirimGrupAdi");

                    b.Property<int?>("Idari");

                    b.Property<int?>("IdariAmirPozisyonNo");

                    b.Property<int?>("IdariGuc");

                    b.Property<int?>("UstBirimGrupNo");

                    b.HasKey("BirimGrupId");

                    b.HasIndex("AkademikAmirPozisyonNo");

                    b.HasIndex("IdariAmirPozisyonNo");

                    b.HasIndex("UstBirimGrupNo");

                    b.ToTable("BirimGruplari","Universite");
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.BirimPersonel", b =>
                {
                    b.Property<int>("BirimPersonelId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Baslangic");

                    b.Property<int>("BirimNo");

                    b.Property<DateTime?>("Bitis");

                    b.Property<int?>("PersonelNo");

                    b.Property<int?>("PozisyonNo");

                    b.HasKey("BirimPersonelId");

                    b.HasIndex("BirimNo");

                    b.HasIndex("PersonelNo");

                    b.HasIndex("PozisyonNo");

                    b.ToTable("BirimPersonelleri","Universite");
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.Cinsiyet", b =>
                {
                    b.Property<int>("CinsiyetId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CinsiyetAdi");

                    b.HasKey("CinsiyetId");

                    b.ToTable("Cinsiyetler","Kisi");
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.Ders", b =>
                {
                    b.Property<int>("DersId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AlanKodNo");

                    b.Property<string>("DersAdi");

                    b.Property<int>("DonemDersGrupNo");

                    b.Property<int>("HaftalikHesaplanacak");

                    b.Property<int>("KuramsalSaat");

                    b.Property<int>("UygulamaSaati");

                    b.HasKey("DersId");

                    b.HasIndex("AlanKodNo");

                    b.HasIndex("DonemDersGrupNo");

                    b.ToTable("Dersler","Ders");
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.DersHoca", b =>
                {
                    b.Property<int>("DersHocaId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("DersNo");

                    b.Property<int?>("KonuNo");

                    b.Property<int>("KuramsalSaati");

                    b.Property<int?>("PersonelNo");

                    b.Property<int>("UygualamaSaati");

                    b.HasKey("DersHocaId");

                    b.HasIndex("DersNo");

                    b.HasIndex("KonuNo");

                    b.HasIndex("PersonelNo");

                    b.ToTable("DersiAnlatanHocalar","Ogrenci");
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.DonemDers", b =>
                {
                    b.Property<int>("DonemDersId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("DersId");

                    b.Property<int>("DersNo");

                    b.Property<int>("ProgramDonemNo");

                    b.HasKey("DonemDersId");

                    b.HasIndex("DersId");

                    b.HasIndex("ProgramDonemNo");

                    b.ToTable("DonemDersleri","Ogrenci");
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.DonemDersGrup", b =>
                {
                    b.Property<int>("DonemDersGrupId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("DersKurulu");

                    b.Property<string>("GrupAdi");

                    b.Property<int>("ProgramDonemNo");

                    b.Property<bool>("Staj");

                    b.HasKey("DonemDersGrupId");

                    b.HasIndex("ProgramDonemNo");

                    b.ToTable("DonemDersGruplari","Ogrenci");
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.Kisi", b =>
                {
                    b.Property<int>("KisiId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Ad");

                    b.Property<int>("CinsiyetNo");

                    b.Property<DateTime>("DogumTarihi");

                    b.Property<string>("IkinciAd");

                    b.Property<int>("MedeniHalNo");

                    b.Property<string>("Soyad");

                    b.Property<string>("Unvan");

                    b.HasKey("KisiId");

                    b.HasIndex("CinsiyetNo");

                    b.HasIndex("MedeniHalNo");

                    b.ToTable("Kisiler","Kisi");
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.Konu", b =>
                {
                    b.Property<int>("KonuId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DersNo");

                    b.Property<string>("KonuAdi");

                    b.Property<int>("KuramsalSaati");

                    b.Property<int>("UygualamaSaati");

                    b.HasKey("KonuId");

                    b.HasIndex("DersNo");

                    b.ToTable("Konular","Ders");
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.MedeniHal", b =>
                {
                    b.Property<int>("MedeniHalId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("MedeniHalAdi");

                    b.HasKey("MedeniHalId");

                    b.ToTable("MedeniHaller","Kisi");
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.OgrenimHedef", b =>
                {
                    b.Property<int>("OgrenimHedefId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Baslangic");

                    b.Property<DateTime?>("Bitis");

                    b.Property<int?>("DersNo");

                    b.Property<int?>("KonuNo");

                    b.Property<string>("OgrenimHedefAdi");

                    b.HasKey("OgrenimHedefId");

                    b.HasIndex("DersNo");

                    b.HasIndex("KonuNo");

                    b.ToTable("DersKonuOgrenimHedefleri","Ders");
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.Personel", b =>
                {
                    b.Property<int>("PersonelId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("KisiNo");

                    b.HasKey("PersonelId");

                    b.HasIndex("KisiNo");

                    b.ToTable("Personeller","Personel");
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.Pozisyon", b =>
                {
                    b.Property<int>("PozisyonId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Akademik");

                    b.Property<int>("AkademikGuc");

                    b.Property<bool>("Idari");

                    b.Property<int>("IdariGuc");

                    b.Property<string>("Kisaltmasi");

                    b.Property<string>("PozisyonAdi");

                    b.Property<string>("PozisyonKodu");

                    b.HasKey("PozisyonId");

                    b.ToTable("Pozisyonlar","Universite");
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.PozisyonGrup", b =>
                {
                    b.Property<int>("PozisyonNo");

                    b.Property<int>("PozisyonGrupTanimNo");

                    b.HasKey("PozisyonNo", "PozisyonGrupTanimNo");

                    b.HasIndex("PozisyonGrupTanimNo");

                    b.ToTable("PozisyonGruplari","Universite");
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.PozisyonGrupTanim", b =>
                {
                    b.Property<int>("PozisyonGrupTanimId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("PozisyonGrupTanimAdi");

                    b.Property<string>("PozisyonGrupTanimKisaAdi");

                    b.HasKey("PozisyonGrupTanimId");

                    b.ToTable("PozisyonGrupTanimlari","Universite");
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.Program", b =>
                {
                    b.Property<int>("ProgramId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BirimNo");

                    b.Property<string>("ProgramAdi");

                    b.HasKey("ProgramId");

                    b.HasIndex("BirimNo");

                    b.ToTable("Programlar","Ogrenci");
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.ProgramAkademikTakvim", b =>
                {
                    b.Property<int>("ProgramAkademikTakvimId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Aciklama");

                    b.Property<int>("AkademikTakvimNo");

                    b.Property<DateTime>("Baslangic");

                    b.Property<DateTime?>("Bitis");

                    b.Property<int>("DonemNo");

                    b.Property<int?>("DonemiProgramDonemId");

                    b.Property<int>("ProgramNo");

                    b.HasKey("ProgramAkademikTakvimId");

                    b.HasIndex("AkademikTakvimNo");

                    b.HasIndex("DonemiProgramDonemId");

                    b.ToTable("ProgramAkademikTakvimleri","Ogrenci");
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.ProgramDonem", b =>
                {
                    b.Property<int>("ProgramDonemId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Aktif");

                    b.Property<string>("DonemAdi");

                    b.Property<int>("DonemNo");

                    b.Property<int>("ProgramNo");

                    b.Property<int>("Sinifi");

                    b.HasKey("ProgramDonemId");

                    b.HasIndex("ProgramNo");

                    b.ToTable("ProgramDonemleri","Ogrenci");
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.Soru", b =>
                {
                    b.Property<int>("SoruId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Aciklama");

                    b.Property<string>("AnahtarKelimeler");

                    b.Property<DateTime>("Baslangic");

                    b.Property<int?>("BilisselDuzeyNo");

                    b.Property<DateTime>("Bitis");

                    b.Property<int>("CevaplamaSuresi");

                    b.Property<int?>("DersNo");

                    b.Property<int>("HemenElenebilirSecenekSayisi");

                    b.Property<int>("KabulEdilebilirlikIndeksi");

                    b.Property<int?>("KonuNo");

                    b.Property<int>("SecenekSayisi");

                    b.Property<string>("SoruAdi");

                    b.Property<int?>("SoruKokuNo");

                    b.Property<string>("SoruMetni");

                    b.Property<int?>("SoruTipNo");

                    b.HasKey("SoruId");

                    b.HasIndex("BilisselDuzeyNo");

                    b.HasIndex("DersNo");

                    b.HasIndex("KonuNo");

                    b.HasIndex("SoruKokuNo");

                    b.HasIndex("SoruTipNo");

                    b.ToTable("Sorular","Soru");
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.SoruHedefBag", b =>
                {
                    b.Property<int?>("SoruNo");

                    b.Property<int?>("OgrenimHedefNo");

                    b.HasKey("SoruNo", "OgrenimHedefNo");

                    b.HasIndex("OgrenimHedefNo");

                    b.ToTable("SoruOgrenimHedefleri","Soru");
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.SoruKoku", b =>
                {
                    b.Property<int>("SoruKokuId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("SoruKokuMetni");

                    b.HasKey("SoruKokuId");

                    b.ToTable("SoruKokleri","Soru");
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.SoruTipi", b =>
                {
                    b.Property<int>("SoruTipId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool?>("Aktif");

                    b.Property<string>("SoruTipAdi");

                    b.HasKey("SoruTipId");

                    b.ToTable("SoruTipleri","Soru");
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.TekDogruluSoruSecenek", b =>
                {
                    b.Property<int>("TekDogruluSoruSecenekId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("DogruSecenek");

                    b.Property<string>("SecenekMetni");

                    b.Property<int>("SoruNo");

                    b.HasKey("TekDogruluSoruSecenekId");

                    b.HasIndex("SoruNo");

                    b.ToTable("TekDoguruluSoruSecenekleri","Soru");
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.Universite", b =>
                {
                    b.Property<int>("UniversiteId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AkademikAmirPersonelNo");

                    b.Property<int?>("AkademikAmirPozisyonNo");

                    b.Property<int?>("IdariAmirPersonelNo");

                    b.Property<int?>("IdariAmirPozisyonNo");

                    b.Property<string>("UniversiteAdi");

                    b.HasKey("UniversiteId");

                    b.HasIndex("AkademikAmirPersonelNo");

                    b.HasIndex("IdariAmirPersonelNo");

                    b.ToTable("Universiteler","Universite");
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.AkademikTakvim", b =>
                {
                    b.HasOne("SoruDeposu.DataAccess.Entities.Universite", "Universitesi")
                        .WithMany("Takvimleri")
                        .HasForeignKey("UniversiteNo")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.Birim", b =>
                {
                    b.HasOne("SoruDeposu.DataAccess.Entities.Personel", "AkademikAmir")
                        .WithMany("AkademikYonettigiBirimler")
                        .HasForeignKey("AkademikAmirPersonelNo");

                    b.HasOne("SoruDeposu.DataAccess.Entities.Birim", "UstBirim")
                        .WithMany("AltBirimleri")
                        .HasForeignKey("BagliBirimNo");

                    b.HasOne("SoruDeposu.DataAccess.Entities.BirimGrup", "Grubu")
                        .WithMany("Birimleri")
                        .HasForeignKey("BirimGrupNo")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SoruDeposu.DataAccess.Entities.Personel", "IdariAmir")
                        .WithMany("IdariYonettigiBirimler")
                        .HasForeignKey("IdariAmirPersonelNo");

                    b.HasOne("SoruDeposu.DataAccess.Entities.Universite", "Universitesi")
                        .WithMany("Birimleri")
                        .HasForeignKey("UniversiteNo")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.BirimGrup", b =>
                {
                    b.HasOne("SoruDeposu.DataAccess.Entities.Pozisyon", "AkademikAmirPozisyonu")
                        .WithMany("AkademikYonettigiBirimGruplari")
                        .HasForeignKey("AkademikAmirPozisyonNo");

                    b.HasOne("SoruDeposu.DataAccess.Entities.Pozisyon", "IdariAmirPozisyonu")
                        .WithMany("IdariYonettigiBirimGruplari")
                        .HasForeignKey("IdariAmirPozisyonNo");

                    b.HasOne("SoruDeposu.DataAccess.Entities.BirimGrup", "UstGrubu")
                        .WithMany("AltBirimleri")
                        .HasForeignKey("UstBirimGrupNo");
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.BirimPersonel", b =>
                {
                    b.HasOne("SoruDeposu.DataAccess.Entities.Birim", "Birimi")
                        .WithMany("Personelleri")
                        .HasForeignKey("BirimNo")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SoruDeposu.DataAccess.Entities.Personel", "PersonelBilgisi")
                        .WithMany("CalistigiBirimler")
                        .HasForeignKey("PersonelNo");

                    b.HasOne("SoruDeposu.DataAccess.Entities.Pozisyon", "Pozsiyonu")
                        .WithMany("BirimPersonelListesi")
                        .HasForeignKey("PozisyonNo");
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.Ders", b =>
                {
                    b.HasOne("SoruDeposu.DataAccess.Entities.AlanKod", "AlanKodu")
                        .WithMany("Dersleri")
                        .HasForeignKey("AlanKodNo")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SoruDeposu.DataAccess.Entities.DonemDersGrup", "DonemDersGrubu")
                        .WithMany("Dersleri")
                        .HasForeignKey("DonemDersGrupNo")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.DersHoca", b =>
                {
                    b.HasOne("SoruDeposu.DataAccess.Entities.Ders", "Dersi")
                        .WithMany("AnlatanHocalar")
                        .HasForeignKey("DersNo");

                    b.HasOne("SoruDeposu.DataAccess.Entities.Konu", "Konusu")
                        .WithMany("AnlatanHocalar")
                        .HasForeignKey("KonuNo");

                    b.HasOne("SoruDeposu.DataAccess.Entities.Personel", "PersonelBilgisi")
                        .WithMany("Anlattiklari")
                        .HasForeignKey("PersonelNo");
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.DonemDers", b =>
                {
                    b.HasOne("SoruDeposu.DataAccess.Entities.Ders", "Dersi")
                        .WithMany()
                        .HasForeignKey("DersId");

                    b.HasOne("SoruDeposu.DataAccess.Entities.ProgramDonem", "ProgramDonemi")
                        .WithMany("Dersleri")
                        .HasForeignKey("ProgramDonemNo")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.DonemDersGrup", b =>
                {
                    b.HasOne("SoruDeposu.DataAccess.Entities.ProgramDonem", "ProgramDonemi")
                        .WithMany("DersGruplari")
                        .HasForeignKey("ProgramDonemNo")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.Kisi", b =>
                {
                    b.HasOne("SoruDeposu.DataAccess.Entities.Cinsiyet", "Cinsiyeti")
                        .WithMany("Kisiler")
                        .HasForeignKey("CinsiyetNo")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SoruDeposu.DataAccess.Entities.MedeniHal", "MedeniHali")
                        .WithMany("Kisiler")
                        .HasForeignKey("MedeniHalNo")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.Konu", b =>
                {
                    b.HasOne("SoruDeposu.DataAccess.Entities.Ders", "Dersi")
                        .WithMany("Konulari")
                        .HasForeignKey("DersNo")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.OgrenimHedef", b =>
                {
                    b.HasOne("SoruDeposu.DataAccess.Entities.Ders", "Dersi")
                        .WithMany("OgrenimHedefleri")
                        .HasForeignKey("DersNo");

                    b.HasOne("SoruDeposu.DataAccess.Entities.Konu", "Konusu")
                        .WithMany("OgrenimHedefleri")
                        .HasForeignKey("KonuNo");
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.Personel", b =>
                {
                    b.HasOne("SoruDeposu.DataAccess.Entities.Kisi", "KisiBilgisi")
                        .WithMany("Personellikleri")
                        .HasForeignKey("KisiNo")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.PozisyonGrup", b =>
                {
                    b.HasOne("SoruDeposu.DataAccess.Entities.PozisyonGrupTanim", "PozisyonGrupTanimi")
                        .WithMany("Pozisyonlari")
                        .HasForeignKey("PozisyonGrupTanimNo")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SoruDeposu.DataAccess.Entities.Pozisyon", "Pozisyonu")
                        .WithMany("GrupTanimlari")
                        .HasForeignKey("PozisyonNo")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.Program", b =>
                {
                    b.HasOne("SoruDeposu.DataAccess.Entities.Birim", "Birimi")
                        .WithMany("Programlari")
                        .HasForeignKey("BirimNo")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.ProgramAkademikTakvim", b =>
                {
                    b.HasOne("SoruDeposu.DataAccess.Entities.AkademikTakvim", "AkademikTakvimi")
                        .WithMany("ProgramTakvimleri")
                        .HasForeignKey("AkademikTakvimNo")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SoruDeposu.DataAccess.Entities.ProgramDonem", "Donemi")
                        .WithMany()
                        .HasForeignKey("DonemiProgramDonemId");
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.ProgramDonem", b =>
                {
                    b.HasOne("SoruDeposu.DataAccess.Entities.Program", "Programi")
                        .WithMany("Donemleri")
                        .HasForeignKey("ProgramNo")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.Soru", b =>
                {
                    b.HasOne("SoruDeposu.DataAccess.Entities.BilisselDuzey", "BilisselDuzeyi")
                        .WithMany("Sorulari")
                        .HasForeignKey("BilisselDuzeyNo");

                    b.HasOne("SoruDeposu.DataAccess.Entities.Ders", "Dersi")
                        .WithMany("Sorulari")
                        .HasForeignKey("DersNo");

                    b.HasOne("SoruDeposu.DataAccess.Entities.Konu", "Konusu")
                        .WithMany("Sorulari")
                        .HasForeignKey("KonuNo");

                    b.HasOne("SoruDeposu.DataAccess.Entities.SoruKoku", "SoruKoku")
                        .WithMany("Sorulari")
                        .HasForeignKey("SoruKokuNo");

                    b.HasOne("SoruDeposu.DataAccess.Entities.SoruTipi", "SoruTipi")
                        .WithMany("Sorulari")
                        .HasForeignKey("SoruTipNo");
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.SoruHedefBag", b =>
                {
                    b.HasOne("SoruDeposu.DataAccess.Entities.Soru", "Sorusu")
                        .WithMany("SoruHedefleri")
                        .HasForeignKey("OgrenimHedefNo")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SoruDeposu.DataAccess.Entities.OgrenimHedef", "Hedefi")
                        .WithMany("Sorulari")
                        .HasForeignKey("SoruNo")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.TekDogruluSoruSecenek", b =>
                {
                    b.HasOne("SoruDeposu.DataAccess.Entities.Soru", "Sorusu")
                        .WithMany("TekDogruluSecenekleri")
                        .HasForeignKey("SoruNo")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SoruDeposu.DataAccess.Entities.Universite", b =>
                {
                    b.HasOne("SoruDeposu.DataAccess.Entities.Personel", "AkademikAmir")
                        .WithMany("AkademikYonettigiUniversiteler")
                        .HasForeignKey("AkademikAmirPersonelNo");

                    b.HasOne("SoruDeposu.DataAccess.Entities.Personel", "IdariAmir")
                        .WithMany("IdariYonettigiUniversiteler")
                        .HasForeignKey("IdariAmirPersonelNo");
                });
#pragma warning restore 612, 618
        }
    }
}
